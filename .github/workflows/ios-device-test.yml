name: ios-device-test

on:
  workflow_run:
    workflows: [ios-ci]
    types:
      - completed

permissions:
  id-token: write         # needed for AWS

jobs:
  ios-device-test:
    strategy:
      matrix:
        test: [
          {artifactName: ios-render-test, xcTestFile: RenderTest.xctest.zip, ipaFile: RenderTestApp.ipa, name: "iOS Render Tests"},
          {artifactName: ios-cpp-unit-tests, xcTestFile: CppUnitTests.xctest.zip, ipaFile: CppUnitTestsApp.ipa, name: "iOS C++ Unit Tests"},
        ]
      fail-fast: true
    runs-on: ubuntu-22.04
    if: github.repository_owner == 'maplibre' && github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Generate token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2
        id: generate_token
        with:
          app-id: ${{ secrets.MAPLIBRE_NATIVE_BOT_APP_ID }}
          private-key: ${{ secrets.MAPLIBRE_NATIVE_BOT_PRIVATE_KEY }}

      - uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2.0.0
        id: create_check
        with:
          token: ${{ steps.generate_token.outputs.token }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          status: in_progress
          name: ${{ matrix.test.name }}
          sha: ${{ github.event.workflow_run.head_sha }}

      - uses: ./.github/actions/download-workflow-run-artifact
        with:
          artifact-name: ${{ matrix.test.artifactName }}

      - name: Check if test files exist (otherwise the parent workflow was skipped)
        id: check_files
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: "${{ matrix.test.xcTestFile }}, ${{ matrix.test.ipaFile }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: us-west-2
          role-to-assume: ${{ vars.OIDC_AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.run_id }}
          role-duration-seconds: 14400

      - name: Run ${{ matrix.test.name }} on AWS Device Farm
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          export name="${{ matrix.test.name }}"
          export appType=IOS_APP
          export appFile="${{ matrix.test.ipaFile }}"
          export testFile="${{ matrix.test.xcTestFile }}"
          export testPackageType=XCTEST_TEST_PACKAGE
          export testType=XCTEST
          export AWS_DEVICE_FARM_PROJECT_ARN="${{ vars.AWS_DEVICE_FARM_PROJECT_ARN }}"
          export AWS_DEVICE_FARM_DEVICE_POOL_ARN="${{ vars.AWS_DEVICE_FARM_IPHONE_DEVICE_POOL_ARN }}"
          export wait_for_completion=true

          ./scripts/aws-device-farm/aws-device-farm-run.sh

      - name: Generate another token (previous one could have expired)
        if: always()
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2
        id: generate_token_2
        with:
          app-id: ${{ secrets.MAPLIBRE_NATIVE_BOT_APP_ID }}
          private-key: ${{ secrets.MAPLIBRE_NATIVE_BOT_PRIVATE_KEY }}

      - uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2.0.0
        if: always()
        with:
          token: ${{ steps.generate_token_2.outputs.token }}
          check_id: ${{ steps.create_check.outputs.check_id }}
          conclusion: ${{ job.status }}
          sha: ${{ github.event.workflow_run.sha }}
