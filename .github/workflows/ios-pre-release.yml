name: ios-pre-release

on:
  workflow_dispatch:
  
jobs:
  build:
    #runs-on: macos-10.15
    runs-on: [self-hosted, petr]
    env:
      BUILDTYPE: Release
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    defaults:
      run:
        working-directory: platform/ios
        shell: bash 

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Install macos dependencies
        run: |
          which brew || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew list cmake 1> /dev/null || brew install cmake
          brew list ccache 1> /dev/null || brew install ccache
          brew list pkg-config 1> /dev/null || brew install pkg-config
          brew list glfw3 1> /dev/null || brew install glfw3
          brew list node 1> /dev/null || brew install node
          gem list -i xcpretty || sudo gem install xcpretty

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm install
        run: npm install --ignore-scripts          

      - name: Prepare ccache
        run: ccache --clear       

      - name: Cache ccache
        uses: actions/cache@v3
        env:
          cache-name: ccache-v1     
        with:
          path: ~/.ccache'
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ github.job }}-${{ github.ref }}-${{ github.sha }}-${{ github.head_ref }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}-${{ github.job }}-${{ github.ref }}-${{ github.sha }}
            ${{ env.cache-name }}-${{ runner.os }}-${{ github.job }}-${{ github.ref }}
            ${{ env.cache-name }}-${{ runner.os }}-${{ github.job }}  

      - name: Clear ccache statistics
        run: |
          ccache --zero-stats
          ccache --max-size=2G
          ccache --show-stats            

      - name: Install iOS packaging dependencies
        run: |
          ./platform/ios/scripts/install-packaging-dependencies.sh
        env:
          CILAUNCH: true

      # - name: Set XCode version
      #   run: |
      #     sudo xcode-select --switch /Applications/Xcode12.4.app          

      - name: Build, package, and upload iOS release
        run: platform/ios/scripts/deploy-swift-package.sh
        env:
          DIST_GITHUB_TOKEN: ${{ secrets.DIST_GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
