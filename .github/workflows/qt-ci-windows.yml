name: qt-ci-windows

on:
  workflow_dispatch:
  push:
    tags-ignore:
      - '**'
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore other platforms
      - "platform/android/**"
      - "platform/darwin/**"
      - "platform/glfw/**"
      - "platform/ios/**"
      - "platform/macos/**"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/workflows/android-ci.yml"
      - ".github/workflows/android-ci-pull.yml"
      - ".github/workflows/android-docker-base.yml"
      - ".github/workflows/android-docker-ndk-r21b.yml"
      - ".github/workflows/gh-pages-android-api.yml"
      - ".github/workflows/gh-pages-ios-api.yml"
      - ".github/workflows/ios-ci.yml"
      - ".github/workflows/ios-pre-release.yml"
      - ".github/workflows/ios-release.yml"
      - ".github/workflows/macos-ci.yml"
      - ".github/workflows/macos-release.yml"
      - ".github/workflows/node-ci.yml"
      - ".github/workflows/qt-ci.yml"
      - ".github/workflows/update-gl-js.yml"
    branches:
      - main

  pull_request:
    branches:
      - main
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore other platforms
      - "platform/android/**"
      - "platform/darwin/**"
      - "platform/glfw/**"
      - "platform/ios/**"
      - "platform/macos/**"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/workflows/android-ci.yml"
      - ".github/workflows/android-ci-pull.yml"
      - ".github/workflows/android-docker-base.yml"
      - ".github/workflows/android-docker-ndk-r21b.yml"
      - ".github/workflows/gh-pages-android-api.yml"
      - ".github/workflows/gh-pages-ios-api.yml"
      - ".github/workflows/ios-ci.yml"
      - ".github/workflows/ios-pre-release.yml"
      - ".github/workflows/ios-release.yml"
      - ".github/workflows/macos-ci.yml"
      - ".github/workflows/macos-release.yml"
      - ".github/workflows/node-ci.yml"
      - ".github/workflows/qt-ci.yml"
      - ".github/workflows/update-gl-js.yml"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-core:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - name: Windows
            static: OFF
            qt: 5.15.2
            qtarch: win64_msvc2019_64
            compiler: x64
          - name: Windows_static
            static: ON
            qt: 5.15.2
            qtarch: win64_msvc2019_64
            compiler: x64
          # - name: Windows
          #   static: ON
          #   qt: 6.2.2
          #   qtarch: win64_msvc2019_64
          #   compiler: x64
    env:
      BUILD_TYPE: Debug
      BUILD_MODE: ${{ matrix.static }}
      COMPILER_TYPE: ${{ matrix.compiler }}
      QT_VERSION: ${{ matrix.qt }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          fetch-depth: 0

      - name: Setup submodules
        shell: bash
        run: |
          cd source
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1 || true

      - name: Download Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          arch: ${{ matrix.qtarch }}

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.compiler }}

      - name: Build maplibre-gl-native (MSVC)
        run: |
          $env:Path = $env:Path -replace "C:\\ProgramData\\Chocolatey\\bin;",""
          $env:Path = "$env:IQTA_TOOLS\$env:COMPILER_TYPE\bin;$env:Path"
          echo "$env:Path"
          mkdir build
          cd build
          $BuildType = "$env:BUILD_TYPE"
          $BuildMode = "$env:BUILD_MODE"
          cmake -S ../source/ `
            -G Ninja `
            -DCMAKE_BUILD_TYPE="$BuildType" `
            -DCMAKE_INSTALL_PREFIX="../install" `
            -DMBGL_WITH_QT=ON `
            -DMBGL_QT_LIBRARY_ONLY=ON `
            -DMBGL_QT_STATIC="$BuildMode" `
            -DMBGL_QT_WITH_INTERNAL_SQLITE=OFF
          ninja
          ninja install

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: maplibre-gl-native_${{ matrix.name }}_Qt${{ matrix.qt }}
          path: install
