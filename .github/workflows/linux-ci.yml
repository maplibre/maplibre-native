name: linux-ci

on:
  workflow_dispatch:
  push:
    tags-ignore:
      - '**'
    branches:
      - main
    paths-ignore:
      - "platform/android/**"
      - "platform/darwin/**"
      - "platform/glfw/**"
      - "platform/ios/**"
      - "platform/macos/**"
      - "platform/qt/**"

  pull_request:
    branches:
      - main
    paths-ignore:
      - "platform/android/**"
      - "platform/darwin/**"
      - "platform/glfw/**"
      - "platform/ios/**"
      - "platform/macos/**"
      - "platform/qt/**"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  linux-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install ccache cmake ninja-build pkg-config xvfb libcurl4-openssl-dev libglfw3-dev libuv1-dev g++-10 libc++-9-dev libc++abi-9-dev libpng-dev libgl1-mesa-dev libgl1-mesa-dri libjpeg-turbo8 libicu66


      - name: Prepare ccache
        if: runner.os == 'macOS'
        run: |
          ccache --clear
          ccache --set-config cache_dir=~/.ccache

      - name: Cache ccache
        uses: actions/cache@v2
        env:
          cache-name: ccache-v1
        with:
          path: ~/.ccache
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.name }}-${{ matrix.qt }}-${{ github.job }}-${{ github.ref }}-${{ github.sha }}-${{ github.head_ref }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.name }}-${{ matrix.qt }}-${{ github.job }}-${{ github.ref }}-${{ github.sha }}
            ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.name }}-${{ matrix.qt }}-${{ github.job }}-${{ github.ref }}
            ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.name }}-${{ matrix.qt }}-${{ github.job }}

      - name: Clear ccache statistics
        if: runner.os == 'macOS'
        run: |
          ccache --zero-stats
          ccache --max-size=2G
          ccache --show-stats -v

      - name: Build
        run: |
          pwd
          ls
          cmake . -B build -G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_CXX_COMPILER=g++-10
          cmake --build build -j $(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null)

      - name: Run render tests
        run: |
          xvfb-run -s "-ac -screen 0 1280x1024x24" ./build/mbgl-render-test-runner --manifestPath metrics/linux-clang8-release-style.json
