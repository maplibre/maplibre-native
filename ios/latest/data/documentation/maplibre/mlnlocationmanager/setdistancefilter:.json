{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"text":") ","kind":"text"},{"text":"setDistanceFilter:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CLLocationDistance","preciseIdentifier":"c:@T@CLLocationDistance","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"distanceFilter","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"name":"distanceFilter","content":[{"inlineContent":[{"type":"text","text":"The distance filter in meters."}],"type":"paragraph"}]}],"kind":"parameters"}],"abstract":[{"type":"text","text":"Sets the minimum update distance in meters."}],"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","title":"setDistanceFilter:","symbolKind":"method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setDistanceFilter:"}],"externalID":"c:objc(pl)MLNLocationManager(im)setDistanceFilter:","role":"symbol","navigatorTitle":[{"text":"setDistanceFilter:","kind":"identifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager\/setDistanceFilter:","interfaceLanguage":"occ"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlocationmanager\/setdistancefilter:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager/setDistanceFilter:":{"title":"setDistanceFilter:","type":"topic","kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setDistanceFilter:"}],"url":"\/documentation\/maplibre\/mlnlocationmanager\/setdistancefilter:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager\/setDistanceFilter:","abstract":[{"type":"text","text":"Sets the minimum update distance in meters."}],"role":"symbol","navigatorTitle":[{"text":"setDistanceFilter:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","url":"\/documentation\/maplibre","title":"MapLibre","role":"collection","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager":{"url":"\/documentation\/maplibre\/mlnlocationmanager","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","role":"symbol","fragments":[{"kind":"identifier","text":"MLNLocationManager"}],"abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","isActive":true},{"text":" protocol defines a set of methods that a class must","type":"text"},{"text":" ","type":"text"},{"text":"implement in order to serve as the location manager of an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":". A location"},{"type":"text","text":" "},{"type":"text","text":"manager is responsible for notifying the map view about location-related events,"},{"type":"text","text":" "},{"type":"text","text":"such as a change in the user’s location. This protocol is similar to the"},{"text":" ","type":"text"},{"text":"Core Location framework’s ","type":"text"},{"code":"CLLocationManager","type":"codeVoice"},{"type":"text","text":" class, but your implementation"},{"type":"text","text":" "},{"type":"text","text":"does not need to be based on "},{"type":"codeVoice","code":"CLLocationManager"},{"text":".","type":"text"}],"title":"MLNLocationManager","kind":"symbol"}}}