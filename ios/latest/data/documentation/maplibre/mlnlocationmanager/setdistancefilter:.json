{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlocationmanager\/setdistancefilter:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager\/setDistanceFilter:","interfaceLanguage":"occ"},"sections":[],"metadata":{"title":"setDistanceFilter:","symbolKind":"method","externalID":"c:objc(pl)MLNLocationManager(im)setDistanceFilter:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setDistanceFilter:"}],"navigatorTitle":[{"kind":"identifier","text":"setDistanceFilter:"}],"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":") "},{"kind":"identifier","text":"setDistanceFilter:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@T@CLLocationDistance","kind":"typeIdentifier","text":"CLLocationDistance"},{"kind":"text","text":") "},{"kind":"internalParam","text":"distanceFilter"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"parameters":[{"name":"distanceFilter","content":[{"type":"paragraph","inlineContent":[{"text":"The distance filter in meters.","type":"text"}]}]}],"kind":"parameters"}],"abstract":[{"type":"text","text":"Sets the minimum update distance in meters."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","role":"collection","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager/setDistanceFilter:":{"type":"topic","title":"setDistanceFilter:","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"setDistanceFilter:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager\/setDistanceFilter:","role":"symbol","url":"\/documentation\/maplibre\/mlnlocationmanager\/setdistancefilter:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setDistanceFilter:"}],"abstract":[{"type":"text","text":"Sets the minimum update distance in meters."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","title":"MLNLocationManager","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnlocationmanager","fragments":[{"text":"MLNLocationManager","kind":"identifier"}],"abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","type":"reference"},{"text":" protocol defines a set of methods that a class must","type":"text"},{"text":" ","type":"text"},{"text":"implement in order to serve as the location manager of an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":". A location","type":"text"},{"text":" ","type":"text"},{"text":"manager is responsible for notifying the map view about location-related events,","type":"text"},{"text":" ","type":"text"},{"text":"such as a change in the user’s location. This protocol is similar to the","type":"text"},{"text":" ","type":"text"},{"text":"Core Location framework’s ","type":"text"},{"code":"CLLocationManager","type":"codeVoice"},{"text":" class, but your implementation","type":"text"},{"text":" ","type":"text"},{"text":"does not need to be based on ","type":"text"},{"code":"CLLocationManager","type":"codeVoice"},{"text":".","type":"text"}]}}}