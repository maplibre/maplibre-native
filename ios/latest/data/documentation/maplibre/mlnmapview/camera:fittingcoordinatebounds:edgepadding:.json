{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"camera:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"camera","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","text":"MLNCoordinateBounds","kind":"typeIdentifier","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"text":") ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"type":"text","text":" "},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}]}],"name":"camera"},{"name":"bounds","content":[{"inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}],"type":"paragraph"}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A camera object centered on the same location as the coordinate bounds","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"type":"text","text":" "},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"direction will be honored."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"text":" ","type":"text"},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"metadata":{"title":"camera:fittingCoordinateBounds:edgePadding:","roleHeading":"Instance Method","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"symbolKind":"method","modules":[{"name":"MapLibre"}],"role":"symbol","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:"},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"title":"MLNMapCamera","role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"title":"camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","type":"topic","abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"role":"symbol","title":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"type":"topic","url":"\/documentation\/maplibre\/mlncoordinatebounds","kind":"symbol","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}]}}}