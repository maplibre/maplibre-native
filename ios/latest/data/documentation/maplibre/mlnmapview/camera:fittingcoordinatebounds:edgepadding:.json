{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"metadata":{"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"symbolKind":"method","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","roleHeading":"Instance Method","role":"symbol","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"title":"camera:fittingCoordinateBounds:edgePadding:","modules":[{"name":"MapLibre"}]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"text":"(","kind":"text"},{"text":"MLNCoordinateBounds","kind":"typeIdentifier","preciseIdentifier":"c:@S@MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"bounds"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}],"name":"camera"},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The coordinate bounds to fit to the receiver’s viewport."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}]}],"name":"insets"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"text":" ","type":"text"},{"type":"text","text":"including the entire coordinate bounds. The initial camera’s pitch and"},{"text":" ","type":"text"},{"text":"direction will be honored.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"name":"Note","content":[{"inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" return value"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","fragments":[{"text":"MLNMapView","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"kind":"symbol","url":"\/documentation\/maplibre\/mlncoordinatebounds","role":"symbol","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"type":"topic","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","title":"MLNCoordinateBounds"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","role":"symbol","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"text":"possible.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"kind":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:"}}}