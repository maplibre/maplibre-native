{"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"role":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:","roleHeading":"Instance Method","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"symbolKind":"method","modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"possible."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@MLNCoordinateBounds","kind":"typeIdentifier","text":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds"},{"text":") ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}]},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The coordinate bounds to fit to the receiver’s viewport."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}],"name":"insets"}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"text":" ","type":"text"},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"direction will be honored."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}]}],"type":"aside"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"title":"MLNMapCamera","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","role":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":".","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNMapCamera"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","kind":"symbol","abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"title":"camera:fittingCoordinateBounds:edgePadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"title":"MLNCoordinateBounds","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","role":"symbol","url":"\/documentation\/maplibre\/mlncoordinatebounds"}}}