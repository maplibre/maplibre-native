{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","symbolKind":"method","title":"camera:fittingCoordinateBounds:edgePadding:","role":"symbol","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}]},"sections":[],"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"text":"MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","preciseIdentifier":"c:@S@MLNCoordinateBounds","text":"MLNCoordinateBounds","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"text":"edgePadding:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"camera","content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}],"type":"paragraph"}]},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}],"name":"insets"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A camera object centered on the same location as the coordinate bounds","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"text":" ","type":"text"},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"text":" ","type":"text"},{"text":"direction will be honored.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"title":"MLNMapCamera","kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"url":"\/documentation\/maplibre\/mlncoordinatebounds","kind":"symbol","title":"MLNCoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"fragments":[{"kind":"identifier","text":"MLNCoordinateBounds"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"type":"topic","abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"possible."}],"fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"title":"camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","type":"topic","title":"MLNMapView","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"fragments":[{"text":"MLNMapView","kind":"identifier"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","type":"topic","url":"\/documentation\/maplibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"}}}