{"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"possible."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"camera:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","text":"MLNCoordinateBounds","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets"},{"kind":"text","text":") "},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}],"name":"camera"},{"name":"bounds","content":[{"inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}],"type":"paragraph"}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"A camera object centered on the same location as the coordinate bounds","type":"text"},{"text":" ","type":"text"},{"text":"with zoom level as high (close to the ground) as possible while still","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including the entire coordinate bounds. The initial camera’s pitch and"},{"text":" ","type":"text"},{"text":"direction will be honored.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"title":"camera:fittingCoordinateBounds:edgePadding:","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","symbolKind":"method","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}]},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/maplibre\/mlnmapcamera","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"title":"MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"role":"symbol","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"title":"MLNCoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","url":"\/documentation\/maplibre\/mlncoordinatebounds","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","kind":"symbol","role":"symbol","title":"MLNMapView","type":"topic","fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","role":"symbol","abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"title":"camera:fittingCoordinateBounds:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"type":"topic","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}]}}}