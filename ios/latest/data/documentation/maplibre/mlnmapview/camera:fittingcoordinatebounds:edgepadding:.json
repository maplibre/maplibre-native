{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","title":"camera:fittingCoordinateBounds:edgePadding:","symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","roleHeading":"Instance Method"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"camera:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","text":"MLNCoordinateBounds","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgePadding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}],"name":"camera"},{"content":[{"inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}],"type":"paragraph"}],"name":"bounds"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}],"name":"insets"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"text":"with zoom level as high (close to the ground) as possible while still","type":"text"},{"text":" ","type":"text"},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"type":"text","text":" "},{"text":"direction will be honored.","type":"text"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"text":"; you may receive a ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"title":"MLNMapView","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","title":"MapLibre","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","type":"topic","kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","title":"camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"kind":"symbol","role":"symbol","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"title":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","url":"\/documentation\/maplibre\/mlncoordinatebounds","type":"topic","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"title":"MLNMapCamera","role":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true,"type":"reference"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":".","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"}}}