{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","modules":[{"name":"MapLibre"}],"role":"symbol","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"symbolKind":"method","remoteSource":{"fileName":"MLNMapView.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapView.h#L1505"},"title":"camera:fittingCoordinateBounds:edgePadding:","roleHeading":"Instance Method"},"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"camera:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"camera"},{"kind":"text","text":" "},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","text":"MLNCoordinateBounds","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"kind":"text","text":") "},{"kind":"internalParam","text":"bounds"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets"},{"kind":"text","text":") "},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"camera","content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}]},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The coordinate bounds to fit to the receiver’s viewport."}]}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"type":"text","text":" "},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A camera object centered on the same location as the coordinate bounds","type":"text"},{"text":" ","type":"text"},{"text":"with zoom level as high (close to the ground) as possible while still","type":"text"},{"text":" ","type":"text"},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"text":" ","type":"text"},{"text":"direction will be honored.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}]}]}],"kind":"content"}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","kind":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:","abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"title":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"MLNCoordinateBounds"}],"kind":"symbol","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"url":"\/documentation\/maplibre\/mlncoordinatebounds"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","type":"topic","url":"\/documentation\/maplibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}]}}}