{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"text":" ","type":"text"},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"text":"possible.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"camera"},{"kind":"text","text":" "},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"kind":"text","text":") "},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}],"name":"camera"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The coordinate bounds to fit to the receiver’s viewport."}]}],"name":"bounds"},{"content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}],"name":"insets"}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"text":" ","type":"text"},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"type":"text","text":" "},{"type":"text","text":"including the entire coordinate bounds. The initial camera’s pitch and"},{"type":"text","text":" "},{"text":"direction will be honored.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}]}]}]}],"metadata":{"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"symbolKind":"method","title":"camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","roleHeading":"Instance Method","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:"},"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"type":"text","text":" "},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"role":"symbol","title":"camera:fittingCoordinateBounds:edgePadding:","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"fragments":[{"text":"MLNMapView","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol","title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":".","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","title":"MLNMapCamera","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"MLNMapCamera","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"type":"topic","role":"symbol","title":"MLNCoordinateBounds","url":"\/documentation\/maplibre\/mlncoordinatebounds","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNCoordinateBounds"}]}}}