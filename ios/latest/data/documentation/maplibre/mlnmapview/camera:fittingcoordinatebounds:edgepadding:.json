{"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:"},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"camera:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingCoordinateBounds:"},{"text":"(","kind":"text"},{"text":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","kind":"typeIdentifier","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"kind":"text","text":") "},{"kind":"internalParam","text":"bounds"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"text":" ","type":"text"},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}]},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}]}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"text":" ","type":"text"},{"text":"including the entire coordinate bounds. The initial camera’s pitch and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"direction will be honored."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"text":"depending on the order of notification delivery.","type":"text"}]}],"style":"note","type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"text":" ","type":"text"},{"type":"text","text":"possible."}],"metadata":{"symbolKind":"method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}],"roleHeading":"Instance Method","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","modules":[{"name":"MapLibre"}],"title":"camera:fittingCoordinateBounds:edgePadding:"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"additional padding on each side, matching an existing camera as much as"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","title":"camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"type":"topic","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","title":"MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","role":"collection","kind":"symbol","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"type":"topic","title":"MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlncoordinatebounds","type":"topic","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","title":"MLNCoordinateBounds"}}}