{"abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","kind":"typeIdentifier","preciseIdentifier":"c:@S@MLNCoordinateBounds"},{"text":") ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}],"name":"camera"},{"content":[{"inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}],"type":"paragraph"}],"name":"bounds"},{"content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}],"name":"insets"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"type":"text","text":"with zoom level as high (close to the ground) as possible while still"},{"type":"text","text":" "},{"type":"text","text":"including the entire coordinate bounds. The initial camera’s pitch and"},{"type":"text","text":" "},{"type":"text","text":"direction will be honored."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"metadata":{"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"roleHeading":"Instance Method","role":"symbol","externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapView.h#L1505","fileName":"MLNMapView.h"},"symbolKind":"method","modules":[{"name":"MapLibre"}],"title":"camera:fittingCoordinateBounds:edgePadding:"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","kind":"symbol","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"type":"topic","abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"title":"camera:fittingCoordinateBounds:edgePadding:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"role":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapcamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"topic","abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","title":"MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"url":"\/documentation\/maplibre\/mlncoordinatebounds","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","title":"MLNCoordinateBounds","fragments":[{"text":"MLNCoordinateBounds","kind":"identifier"}]}}}