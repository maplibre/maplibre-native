{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:"]}],"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns the camera that best fits the given coordinate bounds with some"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"camera:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"text":"fittingCoordinateBounds:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@MLNCoordinateBounds","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","text":"MLNCoordinateBounds","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}],"name":"camera"},{"name":"bounds","content":[{"inlineContent":[{"text":"The coordinate bounds to fit to the receiver’s viewport.","type":"text"}],"type":"paragraph"}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}]}]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A camera object centered on the same location as the coordinate bounds"},{"type":"text","text":" "},{"text":"with zoom level as high (close to the ground) as possible while still","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including the entire coordinate bounds. The initial camera’s pitch and"},{"text":" ","type":"text"},{"text":"direction will be honored.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"}],"kind":"content"}],"kind":"symbol","metadata":{"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"title":"camera:fittingCoordinateBounds:edgePadding:","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingCoordinateBounds:edgePadding:","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingCoordinateBounds:edgePadding:"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingCoordinateBounds:edgePadding:":{"navigatorTitle":[{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}],"type":"topic","abstract":[{"text":"Returns the camera that best fits the given coordinate bounds with some","type":"text"},{"text":" ","type":"text"},{"text":"additional padding on each side, matching an existing camera as much as","type":"text"},{"type":"text","text":" "},{"text":"possible.","type":"text"}],"title":"camera:fittingCoordinateBounds:edgePadding:","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingcoordinatebounds:edgepadding:","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingCoordinateBounds:edgePadding:","role":"symbol","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingCoordinateBounds:edgePadding:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapcamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"symbol","type":"topic","title":"MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true,"type":"reference"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"title":"MLNMapView","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCoordinateBounds":{"type":"topic","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"title":"MLNCoordinateBounds","url":"\/documentation\/maplibre\/mlncoordinatebounds","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCoordinateBounds","role":"symbol","fragments":[{"kind":"identifier","text":"MLNCoordinateBounds"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","url":"\/documentation\/maplibre","type":"topic","kind":"symbol","title":"MapLibre"}}}