{"metadata":{"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","title":"camera:fittingShape:edgePadding:","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"symbolKind":"method","roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"camera:"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingShape:"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"text":"shape","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"parameters":[{"name":"camera","content":[{"inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"type":"text","text":" "},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}]}],"name":"shape"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}]}],"name":"insets"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A camera object centered on the shape’s center with zoom level as high","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"text":" ","type":"text"},{"text":"The initial camera’s pitch and direction will be honored.","type":"text"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"type":"topic","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"title":"camera:fittingShape:edgePadding:","role":"symbol","kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","title":"MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"type":"topic","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","url":"\/documentation\/maplibre\/mlnshape","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"type":"topic","role":"symbol","title":"MLNShape","fragments":[{"kind":"identifier","text":"MLNShape"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","type":"topic","title":"MapLibre"}}}