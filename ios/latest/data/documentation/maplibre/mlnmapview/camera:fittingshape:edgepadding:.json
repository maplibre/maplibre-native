{"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"title":"camera:fittingShape:edgePadding:","externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","remoteSource":{"fileName":"MLNMapView.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapView.h#L1526"},"navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"symbolKind":"method"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"fittingShape:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNShape","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"text":"shape","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"edgePadding:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"camera","content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}],"type":"paragraph"}]},{"name":"shape","content":[{"inlineContent":[{"text":"The shape to fit to the receiver’s viewport.","type":"text"}],"type":"paragraph"}]},{"name":"insets","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"type":"text","text":" "},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" return value","type":"text"},{"text":" ","type":"text"},{"text":"depending on the order of notification delivery.","type":"text"}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"role":"symbol","kind":"symbol","type":"topic","title":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","fragments":[{"text":"MLNShape","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"url":"\/documentation\/maplibre\/mlnshape"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","role":"collection","title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","role":"symbol","type":"topic","title":"camera:fittingShape:edgePadding:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","kind":"symbol","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true,"type":"reference"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","role":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","title":"MLNMapCamera","kind":"symbol"}}}