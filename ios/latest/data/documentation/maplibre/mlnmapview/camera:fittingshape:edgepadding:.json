{"metadata":{"role":"symbol","externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","symbolKind":"method","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"title":"camera:fittingShape:edgePadding:","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"camera:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"camera"},{"kind":"text","text":" "},{"text":"fittingShape:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape"},{"kind":"text","text":" *) "},{"text":"shape","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"parameters":[{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"text":" ","type":"text"},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}]}]},{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"text":"The shape to fit to the receiver’s viewport.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}],"name":"insets"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"content":[{"inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"text":"; you may receive a ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","interfaceLanguage":"occ"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"title":"camera:fittingShape:edgePadding:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","title":"MLNMapCamera","role":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"title":"MLNShape","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"text":"constitute the content of a map — not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"topic","role":"symbol","fragments":[{"text":"MLNShape","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnshape"}}}