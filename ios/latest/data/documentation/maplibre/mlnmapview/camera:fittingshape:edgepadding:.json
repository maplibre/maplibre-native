{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"camera:"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingShape:"},{"text":"(","kind":"text"},{"text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"shape"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"kind":"internalParam","text":"insets"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"camera","content":[{"inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}],"type":"paragraph"}]},{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"text":"The shape to fit to the receiver’s viewport.","type":"text"}]}]},{"name":"insets","content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"text":"A camera object centered on the shape’s center with zoom level as high","type":"text"},{"type":"text","text":" "},{"text":"(close to the ground) as possible while still including the entire shape.","type":"text"},{"text":" ","type":"text"},{"text":"The initial camera’s pitch and direction will be honored.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"text":"; you may receive a ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" return value","type":"text"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}]}],"name":"Note","style":"note"}]}],"abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"metadata":{"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"role":"symbol","symbolKind":"method","modules":[{"name":"MapLibre"}],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"title":"camera:fittingShape:edgePadding:"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","title":"camera:fittingShape:edgePadding:","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"fragments":[{"text":"MLNMapView","kind":"identifier"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol","title":"MLNMapView","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","fragments":[{"kind":"identifier","text":"MLNShape"}],"title":"MLNShape","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"url":"\/documentation\/maplibre\/mlnshape"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"role":"symbol","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","title":"MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","kind":"symbol"}}}