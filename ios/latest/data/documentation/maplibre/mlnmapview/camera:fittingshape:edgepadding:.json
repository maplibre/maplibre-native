{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"]}],"metadata":{"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","symbolKind":"method","title":"camera:fittingShape:edgePadding:","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}]},"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"camera:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"text":"fittingShape:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"text":"shape","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"type":"text","text":" "},{"type":"text","text":"on this camera will be manipulated except for pitch and direction."}]}]},{"name":"shape","content":[{"inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}],"type":"paragraph"}]},{"name":"insets","content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"text":" ","type":"text"},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"style":"note","content":[{"inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"type":"text","text":" "},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"text":"depending on the order of notification delivery.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","kind":"symbol","title":"MLNMapView","role":"symbol","type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"title":"MLNMapCamera","type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"url":"\/documentation\/maplibre\/mlnmapcamera","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"text":"constitute the content of a map — not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"url":"\/documentation\/maplibre\/mlnshape","title":"MLNShape","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"MLNShape","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"title":"camera:fittingShape:edgePadding:","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"}}}