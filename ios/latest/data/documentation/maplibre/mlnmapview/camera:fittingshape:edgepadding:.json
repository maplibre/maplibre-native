{"metadata":{"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"camera:fittingShape:edgePadding:"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:","title":"camera:fittingShape:edgePadding:","symbolKind":"method"},"sections":[],"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"camera"},{"text":" ","kind":"text"},{"text":"fittingShape:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"text":"shape","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets"},{"text":") ","kind":"text"},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The camera that the return camera should adhere to. All values","type":"text"},{"type":"text","text":" "},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}]}],"name":"camera"},{"name":"shape","content":[{"inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"type":"text","text":" "},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}],"name":"insets"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}]}],"type":"aside"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","isActive":true,"type":"reference"},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","title":"MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapCamera"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","kind":"symbol","title":"camera:fittingShape:edgePadding:","type":"topic","abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","type":"topic","kind":"symbol","role":"collection","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"fragments":[{"text":"MLNShape","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/maplibre\/mlnshape","title":"MLNShape","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"text":"constitute the content of a map — not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}]}}}