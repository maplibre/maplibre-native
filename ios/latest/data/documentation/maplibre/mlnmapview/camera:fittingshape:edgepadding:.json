{"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:"},"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","title":"camera:fittingShape:edgePadding:","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"symbolKind":"method","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"externalID":"c:objc(cs)MLNMapView(im)camera:fittingShape:edgePadding:"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"camera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fittingShape:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"shape"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"text":"insets","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera that the return camera should adhere to. All values"},{"type":"text","text":" "},{"text":"on this camera will be manipulated except for pitch and direction.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}],"type":"paragraph"}],"name":"shape"},{"name":"insets","content":[{"inlineContent":[{"type":"text","text":"The minimum padding (in screen points) that would be visible"},{"text":" ","type":"text"},{"type":"text","text":"around the returned camera object if it were set as the receiver’s camera."}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"type":"text","text":"The initial camera’s pitch and direction will be honored."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"content":[{"inlineContent":[{"text":"The behavior of this method is undefined if called in response to","type":"text"},{"text":" ","type":"text"},{"code":"UIApplicationWillTerminateNotification","type":"codeVoice"},{"text":"; you may receive a ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" return value"},{"text":" ","type":"text"},{"type":"text","text":"depending on the order of notification delivery."}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"}]}],"abstract":[{"text":"Returns the camera that best fits the given shape with some additional padding","type":"text"},{"text":" ","type":"text"},{"text":"on each side, matching an existing camera as much as possible.","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"url":"\/documentation\/maplibre\/mlnshape","fragments":[{"kind":"identifier","text":"MLNShape"}],"type":"topic","title":"MLNShape"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"kind":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"text":".","type":"text"}],"title":"MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/camera:fittingShape:edgePadding:":{"title":"camera:fittingShape:edgePadding:","abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"text":" ","type":"text"},{"type":"text","text":"on each side, matching an existing camera as much as possible."}],"fragments":[{"kind":"text","text":"- "},{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapview\/camera:fittingshape:edgepadding:","type":"topic","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/camera:fittingShape:edgePadding:","kind":"symbol","navigatorTitle":[{"text":"camera:fittingShape:edgePadding:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","type":"topic"}}}