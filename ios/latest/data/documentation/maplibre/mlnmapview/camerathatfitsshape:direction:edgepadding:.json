{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/cameraThatFitsShape:direction:edgePadding:","interfaceLanguage":"occ"},"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNMapView(im)cameraThatFitsShape:direction:edgePadding:","fragments":[{"text":"- ","kind":"text"},{"text":"cameraThatFitsShape:direction:edgePadding:","kind":"identifier"}],"remoteSource":{"fileName":"MLNMapView.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapView.h#L1547"},"role":"symbol","symbolKind":"method","title":"cameraThatFitsShape:direction:edgePadding:","navigatorTitle":[{"text":"cameraThatFitsShape:direction:edgePadding:","kind":"identifier"}],"roleHeading":"Instance Method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"type":"text","text":" "},{"type":"text","text":"on each side while looking in the specified direction."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"cameraThatFitsShape:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"text":"shape","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"direction:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@CLLocationDirection","text":"CLLocationDirection"},{"kind":"text","text":") "},{"kind":"internalParam","text":"direction"},{"kind":"text","text":" "},{"kind":"identifier","text":"edgePadding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets","text":"UIEdgeInsets"},{"kind":"text","text":") "},{"kind":"internalParam","text":"insets"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"shape","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shape to fit to the receiver’s viewport."}]}]},{"name":"direction","content":[{"inlineContent":[{"text":"The direction of the viewport, measured in degrees clockwise","type":"text"},{"text":" ","type":"text"},{"text":"from true north.","type":"text"}],"type":"paragraph"}]},{"name":"insets","content":[{"inlineContent":[{"text":"The minimum padding (in screen points) that would be visible","type":"text"},{"text":" ","type":"text"},{"text":"around the returned camera object if it were set as the receiver’s camera.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A camera object centered on the shape’s center with zoom level as high"},{"type":"text","text":" "},{"type":"text","text":"(close to the ground) as possible while still including the entire shape."},{"type":"text","text":" "},{"type":"text","text":"The camera object uses the current pitch."}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of this method is undefined if called in response to"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIApplicationWillTerminateNotification"},{"type":"text","text":"; you may receive a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" return value"},{"type":"text","text":" "},{"type":"text","text":"depending on the order of notification delivery."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/camerathatfitsshape:direction:edgepadding:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","kind":"symbol","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/cameraThatFitsShape:direction:edgePadding:":{"kind":"symbol","type":"topic","role":"symbol","title":"cameraThatFitsShape:direction:edgePadding:","abstract":[{"type":"text","text":"Returns the camera that best fits the given shape with some additional padding"},{"type":"text","text":" "},{"type":"text","text":"on each side while looking in the specified direction."}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"cameraThatFitsShape:direction:edgePadding:"}],"navigatorTitle":[{"kind":"identifier","text":"cameraThatFitsShape:direction:edgePadding:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/cameraThatFitsShape:direction:edgePadding:","url":"\/documentation\/maplibre\/mlnmapview\/camerathatfitsshape:direction:edgepadding:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"title":"MLNMapCamera","role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","url":"\/documentation\/maplibre\/mlnmapcamera","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"MLNMapCamera","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol","type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"role":"symbol","type":"topic","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map — not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"title":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","url":"\/documentation\/maplibre\/mlnshape","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}]}}}