{"abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"fragments":[{"kind":"text","text":"- "},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L51"},"symbolKind":"method","roleHeading":"Instance Method","title":"mapView:shouldChangeFromCamera:toCamera:","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"BOOL","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"kind":"identifier","text":"mapView:"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier","text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"oldCamera"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toCamera:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"newCamera","kind":"internalParam"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view that the user is manipulating."}]}],"name":"mapView"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The camera representing the viewpoint at the moment the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"gesture is recognized. If this method returns "},{"type":"codeVoice","code":"NO"},{"text":", the map view’s camera","type":"text"},{"type":"text","text":" "},{"type":"text","text":"continues to be this camera."}]}],"name":"oldCamera"},{"name":"newCamera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"type":"text","text":" "},{"type":"text","text":"method returns "},{"type":"codeVoice","code":"YES"},{"type":"text","text":", this camera becomes the map view’s camera."}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A Boolean value indicating whether the map view should stay at","type":"text"},{"type":"text","text":" "},{"code":"oldCamera","type":"codeVoice"},{"type":"text","text":" or change to "},{"code":"newCamera","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method is called as soon as the user gesture is recognized. It is not"},{"type":"text","text":" "},{"type":"text","text":"called in response to a programmatic camera change, such as by setting the"},{"text":" ","type":"text"},{"code":"centerCoordinate","type":"codeVoice"},{"type":"text","text":" property or calling "},{"type":"codeVoice","code":"-flyToCamera:completionHandler:"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is called many times during gesturing, so you should avoid performing"},{"text":" ","type":"text"},{"type":"text","text":"complex or performance-intensive tasks in your implementation."}]},{"type":"heading","text":"Related examples","anchor":"Related-examples","level":4},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","isActive":true}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:"]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"type":"topic","kind":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"title":"MLNMapViewDelegate"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","role":"collection","kind":"symbol","title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"title":"MLNMapCamera","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/maplibre\/mlnmapcamera","type":"topic","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","fragments":[{"text":"MLNMapView","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:":{"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:","abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"type":"text","text":" "},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"title":"mapView:shouldChangeFromCamera:toCamera:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample","abstract":[{"text":"Constrain the map to a certain area.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","title":"Blocking Gestures"}}}