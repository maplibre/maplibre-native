{"metadata":{"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:","navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L51","fileName":"MLNMapViewDelegate.h"},"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"title":"mapView:shouldChangeFromCamera:toCamera:","modules":[{"name":"MapLibre"}]},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","interfaceLanguage":"occ"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:@T@BOOL","text":"BOOL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"oldCamera"},{"kind":"text","text":" "},{"kind":"identifier","text":"toCamera:"},{"kind":"text","text":"("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera","text":"MLNMapCamera"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"newCamera"},{"kind":"text","text":";"}],"languages":["occ"]}],"kind":"declarations"},{"parameters":[{"name":"mapView","content":[{"type":"paragraph","inlineContent":[{"text":"The map view that the user is manipulating.","type":"text"}]}]},{"name":"oldCamera","content":[{"inlineContent":[{"type":"text","text":"The camera representing the viewpoint at the moment the"},{"type":"text","text":" "},{"type":"text","text":"gesture is recognized. If this method returns "},{"code":"NO","type":"codeVoice"},{"type":"text","text":", the map view’s camera"},{"type":"text","text":" "},{"type":"text","text":"continues to be this camera."}],"type":"paragraph"}]},{"name":"newCamera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"type":"text","text":" "},{"type":"text","text":"method returns "},{"type":"codeVoice","code":"YES"},{"type":"text","text":", this camera becomes the map view’s camera."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A Boolean value indicating whether the map view should stay at"},{"type":"text","text":" "},{"type":"codeVoice","code":"oldCamera"},{"type":"text","text":" or change to "},{"type":"codeVoice","code":"newCamera"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is called as soon as the user gesture is recognized. It is not"},{"type":"text","text":" "},{"type":"text","text":"called in response to a programmatic camera change, such as by setting the"},{"type":"text","text":" "},{"type":"codeVoice","code":"centerCoordinate"},{"type":"text","text":" property or calling "},{"type":"codeVoice","code":"-flyToCamera:completionHandler:"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"This method is called many times during gesturing, so you should avoid performing","type":"text"},{"text":" ","type":"text"},{"text":"complex or performance-intensive tasks in your implementation.","type":"text"}]},{"type":"heading","text":"Related examples","anchor":"Related-examples","level":4},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","type":"reference","isActive":true}],"type":"paragraph"}]}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"text":" ","type":"text"},{"text":"existing camera to the new camera in response to a user gesture.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:":{"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"type":"topic","title":"mapView:shouldChangeFromCamera:toCamera:","navigatorTitle":[{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"abstract":[{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"type":"text","text":" "},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"url":"\/documentation\/maplibre\/mlnmapcamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"type":"text","text":"some point on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"topic","title":"MLNMapCamera","kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"abstract":[{"text":"Constrain the map to a certain area.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","kind":"article","type":"topic","role":"article","title":"Blocking Gestures","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","title":"MapLibre","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"type":"topic","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"kind":"symbol","title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol"}}}