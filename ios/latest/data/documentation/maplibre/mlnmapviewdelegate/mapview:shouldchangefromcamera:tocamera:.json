{"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","interfaceLanguage":"occ"},"metadata":{"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:","title":"mapView:shouldChangeFromCamera:toCamera:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"symbolKind":"method","roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L51","fileName":"MLNMapViewDelegate.h"},"role":"symbol"},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"abstract":[{"text":"Asks the delegate whether the map view should be allowed to change from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"text":") ","kind":"text"},{"kind":"identifier","text":"mapView:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapCamera"},{"text":" *) ","kind":"text"},{"text":"oldCamera","kind":"internalParam"},{"kind":"text","text":" "},{"text":"toCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier","text":"MLNMapCamera","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera"},{"kind":"text","text":" *) "},{"text":"newCamera","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"mapView","content":[{"inlineContent":[{"type":"text","text":"The map view that the user is manipulating."}],"type":"paragraph"}]},{"name":"oldCamera","content":[{"type":"paragraph","inlineContent":[{"text":"The camera representing the viewpoint at the moment the","type":"text"},{"type":"text","text":" "},{"text":"gesture is recognized. If this method returns ","type":"text"},{"type":"codeVoice","code":"NO"},{"text":", the map view’s camera","type":"text"},{"type":"text","text":" "},{"text":"continues to be this camera.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"text":" ","type":"text"},{"text":"method returns ","type":"text"},{"code":"YES","type":"codeVoice"},{"type":"text","text":", this camera becomes the map view’s camera."}]}],"name":"newCamera"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A Boolean value indicating whether the map view should stay at","type":"text"},{"type":"text","text":" "},{"code":"oldCamera","type":"codeVoice"},{"text":" or change to ","type":"text"},{"code":"newCamera","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is called as soon as the user gesture is recognized. It is not"},{"type":"text","text":" "},{"type":"text","text":"called in response to a programmatic camera change, such as by setting the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"centerCoordinate"},{"text":" property or calling ","type":"text"},{"type":"codeVoice","code":"-flyToCamera:completionHandler:"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This method is called many times during gesturing, so you should avoid performing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"complex or performance-intensive tasks in your implementation."}],"type":"paragraph"},{"level":4,"anchor":"Related-examples","type":"heading","text":"Related examples"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample"}],"type":"paragraph"}]}]}],"kind":"content"}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:":{"title":"mapView:shouldChangeFromCamera:toCamera:","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:shouldChangeFromCamera:toCamera:","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:","abstract":[{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"type":"text","text":" "},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"kind":"symbol","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference"},{"type":"text","text":" object represents a viewpoint from which the user observes"},{"type":"text","text":" "},{"text":"some point on an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":".","type":"text"}],"title":"MLNMapCamera","fragments":[{"kind":"identifier","text":"MLNMapCamera"}],"url":"\/documentation\/maplibre\/mlnmapcamera"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","role":"symbol","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference","isActive":true},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"text":" ","type":"text"},{"text":"require the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"title":"MLNMapViewDelegate","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"type":"topic","abstract":[{"text":"Constrain the map to a certain area.","type":"text"}],"kind":"article","title":"Blocking Gestures","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","role":"article","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample"}}}