{"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"kind":"text","text":") "},{"kind":"identifier","text":"mapView:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","text":"MLNMapView"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mapView"},{"kind":"text","text":" "},{"kind":"identifier","text":"didSelectAnnotation:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","text":"id<MLNAnnotation>","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"annotation","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The map view containing the annotation.","type":"text"}]}],"name":"mapView"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The annotation that was selected.","type":"text"}]}],"name":"annotation"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"You can use this method to track changes in the selection state of annotations."}],"type":"paragraph"},{"inlineContent":[{"text":"If the annotation is associated with an annotation view, you can also implement","type":"text"},{"text":" ","type":"text"},{"code":"-mapView:didSelectAnnotationView:","type":"codeVoice"},{"text":", which is called immediately after this","type":"text"},{"text":" ","type":"text"},{"text":"method is called.","type":"text"}],"type":"paragraph"},{"text":"Related examples","anchor":"Related-examples","type":"heading","level":4},{"inlineContent":[{"text":"TODO: Dynamically style interactive points, learn how to remove an","type":"text"},{"text":" ","type":"text"},{"text":"annotation view if it has already been selected.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Tells the delegate that one of its annotations was selected."}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:didSelectAnnotation:"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:didselectannotation:"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"metadata":{"title":"mapView:didSelectAnnotation:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:didSelectAnnotation:"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:didSelectAnnotation:"}],"role":"symbol","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L789","fileName":"MLNMapViewDelegate.h"},"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:didSelectAnnotation:","symbolKind":"method"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","kind":"symbol","type":"topic","abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"text":"require the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"title":"MLNMapViewDelegate"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Appleâ€™s MapKit."}],"type":"topic","kind":"symbol","title":"MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:didSelectAnnotation:":{"kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:didSelectAnnotation:"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:didSelectAnnotation:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:didSelectAnnotation:","title":"mapView:didSelectAnnotation:","role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:didselectannotation:","type":"topic","abstract":[{"type":"text","text":"Tells the delegate that one of its annotations was selected."}]}}}