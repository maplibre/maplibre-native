{"abstract":[{"type":"text","text":":nodoc:"},{"type":"text","text":" "},{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"type":"text","text":" "},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:reason:"},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:reason:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","text":"MLNMapView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapView"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"shouldChangeFromCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"oldCamera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"toCamera:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","text":"MLNMapCamera","preciseIdentifier":"c:objc(cs)MLNMapCamera","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"newCamera","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"reason:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@E@MLNCameraChangeReason","text":"MLNCameraChangeReason","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCameraChangeReason"},{"text":") ","kind":"text"},{"text":"reason","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The map view that the user is manipulating."}],"type":"paragraph"}],"name":"mapView"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The camera representing the viewpoint at the moment the"},{"type":"text","text":" "},{"type":"text","text":"gesture is recognized. If this method returns "},{"type":"codeVoice","code":"NO"},{"type":"text","text":", the map view’s camera"},{"type":"text","text":" "},{"type":"text","text":"continues to be this camera."}]}],"name":"oldCamera"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected camera after the gesture completes. If this"},{"type":"text","text":" "},{"type":"text","text":"method returns "},{"type":"codeVoice","code":"YES"},{"type":"text","text":", the viewport of the map will transition to the new camera. Note that the new"},{"type":"text","text":" "},{"type":"text","text":"camera cannot be modified."}]}],"name":"newCamera"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The reason for the camera change."}]}],"name":"reason"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Boolean value indicating whether the map view should stay at"},{"type":"text","text":" "},{"type":"codeVoice","code":"oldCamera"},{"type":"text","text":" or transition to "},{"type":"codeVoice","code":"newCamera"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is called as soon as the user gesture is recognized. It is not","type":"text"},{"text":" ","type":"text"},{"text":"called in response to a programmatic camera change, such as by setting the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"centerCoordinate"},{"text":" property or calling ","type":"text"},{"type":"codeVoice","code":"-flyToCamera:completionHandler:"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This method is called many times during gesturing, so you should avoid performing","type":"text"},{"text":" ","type":"text"},{"text":"complex or performance-intensive tasks in your implementation.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"If this method is implemented ","type":"text"},{"type":"codeVoice","code":"-mapView:shouldChangeFromCamera:toCamera:"},{"text":" will not be","type":"text"},{"text":" ","type":"text"},{"text":"called.","type":"text"}]}],"style":"note","name":"Note"}]}],"metadata":{"modules":[{"name":"MapLibre"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L81"},"roleHeading":"Instance Method","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:shouldChangeFromCamera:toCamera:reason:","symbolKind":"method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}],"role":"symbol","title":"mapView:shouldChangeFromCamera:toCamera:reason:"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"title":"MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:reason:":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:reason:","kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:reason:"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:reason:","role":"symbol","abstract":[{"type":"text","text":":nodoc:"},{"type":"text","text":" "},{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"type":"text","text":" "},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"title":"mapView:shouldChangeFromCamera:toCamera:reason:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true,"type":"reference"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"text":"require the ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","title":"MLNMapViewDelegate","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCameraChangeReason":{"type":"topic","abstract":[{"type":"text","text":"Bitmask values that describe why a camera move occurred."}],"title":"MLNCameraChangeReason","url":"\/documentation\/maplibre\/mlncamerachangereason","fragments":[{"text":"MLNCameraChangeReason","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCameraChangeReason"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapCamera":{"title":"MLNMapCamera","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","type":"reference","isActive":true},{"text":" object represents a viewpoint from which the user observes","type":"text"},{"text":" ","type":"text"},{"text":"some point on an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapCamera","fragments":[{"text":"MLNMapCamera","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapcamera"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre","type":"topic","role":"collection"}}}