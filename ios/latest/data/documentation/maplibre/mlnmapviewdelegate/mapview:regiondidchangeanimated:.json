{"abstract":[{"text":"Tells the delegate that the viewpoint depicted by the map view has finished","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changing."}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:","interfaceLanguage":"occ"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"kind":"identifier","text":"regionDidChangeAnimated:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BOOL","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"animated"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"mapView","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view whose viewpoint has changed."}]}]},{"name":"animated","content":[{"inlineContent":[{"text":"Whether the change caused an animated effect on the map.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is called whenever the currently displayed map camera has finished","type":"text"},{"type":"text","text":" "},{"type":"text","text":"changing, after any calls to "},{"code":"-mapViewRegionIsChanging:","type":"codeVoice"},{"text":" due to animation. Therefore,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this method can be called before "},{"code":"-mapViewDidFinishLoadingMap:","type":"codeVoice"},{"text":" is called.","type":"text"}]}]}],"metadata":{"roleHeading":"Instance Method","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:regionDidChangeAnimated:","symbolKind":"method","navigatorTitle":[{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"title":"mapView:regionDidChangeAnimated:","role":"symbol","modules":[{"name":"MapLibre"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L165"}},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"role":"symbol","title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate","kind":"symbol","abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"type":"text","text":"individual annotations."}],"fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Appleâ€™s MapKit."}],"fragments":[{"kind":"identifier","text":"MLNMapView"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:regionDidChangeAnimated:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:","title":"mapView:regionDidChangeAnimated:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:","kind":"symbol","abstract":[{"type":"text","text":"Tells the delegate that the viewpoint depicted by the map view has finished"},{"type":"text","text":" "},{"text":"changing.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:regionDidChangeAnimated:"}],"type":"topic","role":"symbol"}}}