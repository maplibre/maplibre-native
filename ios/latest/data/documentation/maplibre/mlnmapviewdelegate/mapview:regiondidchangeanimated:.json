{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:"},"abstract":[{"text":"Tells the delegate that the viewpoint depicted by the map view has finished","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changing."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"mapView:","kind":"identifier"},{"kind":"text","text":"("},{"text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"kind":"text","text":" "},{"text":"regionDidChangeAnimated:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BOOL","preciseIdentifier":"c:@T@BOOL"},{"kind":"text","text":") "},{"kind":"internalParam","text":"animated"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"mapView","content":[{"inlineContent":[{"text":"The map view whose viewpoint has changed.","type":"text"}],"type":"paragraph"}]},{"name":"animated","content":[{"inlineContent":[{"text":"Whether the change caused an animated effect on the map.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"This method is called whenever the currently displayed map camera has finished","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"changing, after any calls to "},{"code":"-mapViewRegionIsChanging:","type":"codeVoice"},{"text":" due to animation. Therefore,","type":"text"},{"type":"text","text":" "},{"text":"this method can be called before ","type":"text"},{"type":"codeVoice","code":"-mapViewDidFinishLoadingMap:"},{"type":"text","text":" is called."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","metadata":{"title":"mapView:regionDidChangeAnimated:","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L165","fileName":"MLNMapViewDelegate.h"},"symbolKind":"method","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:regionDidChangeAnimated:","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:regionDidChangeAnimated:"}],"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"type":"topic","kind":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"text":"require the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"type":"text","text":" "},{"text":"individual annotations.","type":"text"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:regionDidChangeAnimated:":{"abstract":[{"type":"text","text":"Tells the delegate that the viewpoint depicted by the map view has finished"},{"type":"text","text":" "},{"type":"text","text":"changing."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:regionDidChangeAnimated:","title":"mapView:regionDidChangeAnimated:","type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:regiondidchangeanimated:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"navigatorTitle":[{"text":"mapView:regionDidChangeAnimated:","kind":"identifier"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Appleâ€™s MapKit.","type":"text"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","kind":"symbol","title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}