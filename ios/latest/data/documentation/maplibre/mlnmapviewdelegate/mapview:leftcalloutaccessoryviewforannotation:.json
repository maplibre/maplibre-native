{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"UIView","preciseIdentifier":"c:objc(cs)UIView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id<MLNAnnotation>","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"annotation","kind":"internalParam"},{"text":";","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The map view presenting the annotation callout.","type":"text"}]}],"name":"mapView"},{"content":[{"inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}],"type":"paragraph"}],"name":"annotation"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The accessory view to display."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"type":"text","text":" "},{"type":"text","text":"annotation or to link to custom information provided by your application."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"type":"text","text":" "},{"type":"text","text":"by implementing the "},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"type":"text","text":" "},{"type":"text","text":"method. If the view you specify does not descend from "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"type":"text","text":"responsible for handling any touch events within its bounds."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the"},{"type":"text","text":" "},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"type":"text","text":" "},{"type":"text","text":"of this method is ignored if "},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"type":"text","text":" is present in"},{"type":"text","text":" "},{"type":"text","text":"the delegate."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"type":"text","text":" "},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"type":"text","text":" method."}],"type":"paragraph"},{"level":4,"type":"heading","anchor":"Related-examples","text":"Related examples"},{"inlineContent":[{"text":"TODO: Default callout usage, learn how to modify the view that is","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"metadata":{"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","modules":[{"name":"MapLibre"}],"remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921","fileName":"MLNMapViewDelegate.h"}},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"topic","title":"MLNMapViewDelegate","kind":"symbol","role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference","isActive":true},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","kind":"symbol","title":"MLNMapView","role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:"}}}