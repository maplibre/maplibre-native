{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:objc(cs)UIView","text":"UIView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","text":"id<MLNAnnotation>","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"annotation","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}]}],"name":"mapView"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}]}],"name":"annotation"}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"The accessory view to display."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The left callout view is typically used to convey information about the","type":"text"},{"text":" ","type":"text"},{"text":"annotation or to link to custom information provided by your application.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"type":"text","text":" "},{"type":"text","text":"by implementing the "},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"type":"text","text":" "},{"type":"text","text":"method. If the view you specify does not descend from "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"type":"text","text":"responsible for handling any touch events within its bounds."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the"},{"type":"text","text":" "},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"type":"text","text":" "},{"type":"text","text":"of this method is ignored if "},{"code":"-mapView:calloutViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" is present in"},{"type":"text","text":" "},{"type":"text","text":"the delegate."}]},{"type":"paragraph","inlineContent":[{"text":"To display a view on the callout’s right side, implement the","type":"text"},{"text":" ","type":"text"},{"code":"-mapView:rightCalloutAccessoryViewForAnnotation:","type":"codeVoice"},{"text":" method.","type":"text"}]},{"anchor":"Related-examples","type":"heading","level":4,"text":"Related examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"type":"text","text":"displayed on the left side of the standard callout bubble."}]}],"kind":"content"}],"abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","interfaceLanguage":"occ"},"metadata":{"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","symbolKind":"method","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921","fileName":"MLNMapViewDelegate.h"},"roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","kind":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"title":"MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"topic","url":"\/documentation\/maplibre\/mlnmapview"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","title":"mapView:leftCalloutAccessoryViewForAnnotation:","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"kind":"symbol","title":"MLNMapViewDelegate","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"role":"symbol","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"topic"}}}