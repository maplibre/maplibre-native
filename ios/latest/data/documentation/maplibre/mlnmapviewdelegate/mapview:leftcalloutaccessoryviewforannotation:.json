{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"symbolKind":"method","title":"mapView:leftCalloutAccessoryViewForAnnotation:","role":"symbol","externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921","fileName":"MLNMapViewDelegate.h"}},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"kind":"symbol","abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"UIView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":" *) "},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leftCalloutAccessoryViewForAnnotation:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","text":"id<MLNAnnotation>"},{"kind":"text","text":") "},{"text":"annotation","kind":"internalParam"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}],"type":"paragraph"}],"name":"mapView"},{"content":[{"inlineContent":[{"text":"The object representing the annotation with the callout.","type":"text"}],"type":"paragraph"}],"name":"annotation"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The accessory view to display.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"type":"text","text":" "},{"text":"annotation or to link to custom information provided by your application.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"text":" ","type":"text"},{"text":"by implementing the ","type":"text"},{"code":"-mapView:annotation:calloutAccessoryControlTapped:","type":"codeVoice"},{"type":"text","text":" "},{"text":"method. If the view you specify does not descend from ","type":"text"},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"text":"responsible for handling any touch events within its bounds.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"type":"codeVoice","code":"nil"},{"text":", the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"type":"text","text":" "},{"type":"text","text":"of this method is ignored if "},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"type":"text","text":" is present in"},{"type":"text","text":" "},{"text":"the delegate.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"text":" method.","type":"text"}]},{"type":"heading","anchor":"Related-examples","text":"Related examples","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","type":"topic","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre","url":"\/documentation\/maplibre","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}],"title":"MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"kind":"symbol","title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"text":" ","type":"text"},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"type":"text","text":"individual annotations."}],"fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}]}}}