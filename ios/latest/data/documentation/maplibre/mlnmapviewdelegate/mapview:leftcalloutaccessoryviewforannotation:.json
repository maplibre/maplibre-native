{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","interfaceLanguage":"occ"},"metadata":{"title":"mapView:leftCalloutAccessoryViewForAnnotation:","remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921"},"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","symbolKind":"method","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method"},"abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"UIView","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"mapView:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mapView"},{"kind":"text","text":" "},{"kind":"identifier","text":"leftCalloutAccessoryViewForAnnotation:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"id<MLNAnnotation>","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"kind":"text","text":") "},{"kind":"internalParam","text":"annotation"},{"kind":"text","text":";"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"mapView","content":[{"inlineContent":[{"text":"The map view presenting the annotation callout.","type":"text"}],"type":"paragraph"}]},{"name":"annotation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The accessory view to display.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"type":"text","text":" "},{"type":"text","text":"annotation or to link to custom information provided by your application."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"type":"text","text":" "},{"type":"text","text":"by implementing the "},{"code":"-mapView:annotation:calloutAccessoryControlTapped:","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"method. If the view you specify does not descend from "},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"type":"text","text":"responsible for handling any touch events within its bounds."}],"type":"paragraph"},{"inlineContent":[{"text":"If this method is absent from the delegate, or if it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", the","type":"text"},{"text":" ","type":"text"},{"text":"standard callout view has no accessory view on its left side. The return value","type":"text"},{"text":" ","type":"text"},{"text":"of this method is ignored if ","type":"text"},{"code":"-mapView:calloutViewForAnnotation:","type":"codeVoice"},{"text":" is present in","type":"text"},{"text":" ","type":"text"},{"text":"the delegate.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To display a view on the callout’s right side, implement the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"text":" method.","type":"text"}],"type":"paragraph"},{"text":"Related examples","anchor":"Related-examples","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"type":"text","text":"displayed on the left side of the standard callout bubble."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true,"type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"title":"MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","role":"symbol","kind":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","title":"mapView:leftCalloutAccessoryViewForAnnotation:","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"type":"topic","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"title":"MLNMapView","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"url":"\/documentation\/maplibre\/mlnmapview","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"type":"topic","role":"symbol"}}}