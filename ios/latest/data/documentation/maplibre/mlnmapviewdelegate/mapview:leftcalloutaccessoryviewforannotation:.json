{"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921","fileName":"MLNMapViewDelegate.h"},"symbolKind":"method","title":"mapView:leftCalloutAccessoryViewForAnnotation:","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"role":"symbol"},"abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"UIView","preciseIdentifier":"c:objc(cs)UIView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"mapView:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","text":"MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mapView"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leftCalloutAccessoryViewForAnnotation:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","text":"id<MLNAnnotation>","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"annotation"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}],"type":"paragraph"}],"name":"mapView"},{"name":"annotation","content":[{"type":"paragraph","inlineContent":[{"text":"The object representing the annotation with the callout.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The accessory view to display."}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"text":" ","type":"text"},{"type":"text","text":"annotation or to link to custom information provided by your application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"type":"text","text":" "},{"type":"text","text":"by implementing the "},{"code":"-mapView:annotation:calloutAccessoryControlTapped:","type":"codeVoice"},{"text":" ","type":"text"},{"text":"method. If the view you specify does not descend from ","type":"text"},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"text":" ","type":"text"},{"type":"text","text":"responsible for handling any touch events within its bounds."}]},{"inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"code":"nil","type":"codeVoice"},{"text":", the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"text":" ","type":"text"},{"text":"of this method is ignored if ","type":"text"},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"type":"text","text":" is present in"},{"text":" ","type":"text"},{"type":"text","text":"the delegate."}],"type":"paragraph"},{"inlineContent":[{"text":"To display a view on the callout’s right side, implement the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"type":"text","text":" method."}],"type":"paragraph"},{"type":"heading","level":4,"text":"Related examples","anchor":"Related-examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","title":"MLNMapViewDelegate"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"title":"MLNMapView","type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","title":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"symbol","type":"topic","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol"}}}