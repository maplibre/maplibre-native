{"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"sections":[],"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921"},"symbolKind":"method","title":"mapView:leftCalloutAccessoryViewForAnnotation:"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"UIView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":" *) "},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","preciseIdentifier":"c:objc(cs)MLNMapView","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"mapView","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"leftCalloutAccessoryViewForAnnotation:"},{"kind":"text","text":"("},{"text":"id<MLNAnnotation>","kind":"typeIdentifier","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"kind":"text","text":") "},{"text":"annotation","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The map view presenting the annotation callout.","type":"text"}]}],"name":"mapView"},{"name":"annotation","content":[{"inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The accessory view to display."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The left callout view is typically used to convey information about the","type":"text"},{"type":"text","text":" "},{"text":"annotation or to link to custom information provided by your application.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If the view you specify is a descendant of the ","type":"text"},{"code":"UIControl","type":"codeVoice"},{"type":"text","text":" class, you can use"},{"type":"text","text":" "},{"text":"the map view’s delegate to receive notifications when your control is tapped,","type":"text"},{"type":"text","text":" "},{"text":"by implementing the ","type":"text"},{"code":"-mapView:annotation:calloutAccessoryControlTapped:","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"method. If the view you specify does not descend from "},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"type":"text","text":" "},{"type":"text","text":"responsible for handling any touch events within its bounds."}]},{"inlineContent":[{"type":"text","text":"If this method is absent from the delegate, or if it returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the"},{"type":"text","text":" "},{"text":"standard callout view has no accessory view on its left side. The return value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of this method is ignored if "},{"code":"-mapView:calloutViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" is present in"},{"type":"text","text":" "},{"type":"text","text":"the delegate."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-mapView:rightCalloutAccessoryViewForAnnotation:"},{"type":"text","text":" method."}]},{"anchor":"Related-examples","level":4,"text":"Related examples","type":"heading"},{"inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"text":" ","type":"text"},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"type":"topic","fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"kind":"symbol","title":"mapView:leftCalloutAccessoryViewForAnnotation:","navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"topic","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true,"type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"type":"text","text":" "},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"type":"text","text":" "},{"text":"individual annotations.","type":"text"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","title":"MLNMapViewDelegate","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnmapview","kind":"symbol","title":"MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}