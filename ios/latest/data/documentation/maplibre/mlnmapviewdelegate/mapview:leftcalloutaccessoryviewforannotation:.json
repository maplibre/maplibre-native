{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"metadata":{"fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","roleHeading":"Instance Method","symbolKind":"method","remoteSource":{"fileName":"MLNMapViewDelegate.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921"},"role":"symbol","title":"mapView:leftCalloutAccessoryViewForAnnotation:","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"UIView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":" *) "},{"text":"mapView:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)MLNMapView","text":"MLNMapView","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"kind":"text","text":"("},{"text":"id<MLNAnnotation>","kind":"typeIdentifier","preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation"},{"kind":"text","text":") "},{"kind":"internalParam","text":"annotation"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The map view presenting the annotation callout.","type":"text"}]}],"name":"mapView"},{"content":[{"inlineContent":[{"text":"The object representing the annotation with the callout.","type":"text"}],"type":"paragraph"}],"name":"annotation"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"The accessory view to display.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"type":"text","text":" "},{"type":"text","text":"annotation or to link to custom information provided by your application."}]},{"inlineContent":[{"type":"text","text":"If the view you specify is a descendant of the "},{"code":"UIControl","type":"codeVoice"},{"text":" class, you can use","type":"text"},{"text":" ","type":"text"},{"text":"the map view’s delegate to receive notifications when your control is tapped,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"by implementing the "},{"type":"codeVoice","code":"-mapView:annotation:calloutAccessoryControlTapped:"},{"text":" ","type":"text"},{"text":"method. If the view you specify does not descend from ","type":"text"},{"type":"codeVoice","code":"UIControl"},{"type":"text","text":", your view is"},{"text":" ","type":"text"},{"text":"responsible for handling any touch events within its bounds.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If this method is absent from the delegate, or if it returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the"},{"type":"text","text":" "},{"type":"text","text":"standard callout view has no accessory view on its left side. The return value"},{"text":" ","type":"text"},{"type":"text","text":"of this method is ignored if "},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"text":" is present in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the delegate."}]},{"type":"paragraph","inlineContent":[{"text":"To display a view on the callout’s right side, implement the","type":"text"},{"text":" ","type":"text"},{"code":"-mapView:rightCalloutAccessoryViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" method."}]},{"level":4,"anchor":"Related-examples","type":"heading","text":"Related examples"},{"inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"text":"displayed on the left side of the standard callout bubble.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:","role":"symbol","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"title":"MLNMapViewDelegate","abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"text":" ","type":"text"},{"type":"text","text":"require the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true,"type":"reference"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"type":"text","text":" "},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","type":"topic","url":"\/documentation\/maplibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"type":"topic","kind":"symbol","role":"symbol"}}}