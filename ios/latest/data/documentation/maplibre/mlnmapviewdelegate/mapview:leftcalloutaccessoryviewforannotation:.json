{"kind":"symbol","abstract":[{"text":"Returns the view to display on the left side of the standard callout bubble.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"]]},"metadata":{"title":"mapView:leftCalloutAccessoryViewForAnnotation:","fragments":[{"kind":"text","text":"- "},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"navigatorTitle":[{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"externalID":"c:objc(pl)MLNMapViewDelegate(im)mapView:leftCalloutAccessoryViewForAnnotation:","symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNMapViewDelegate.h#L921","fileName":"MLNMapViewDelegate.h"},"role":"symbol","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:objc(cs)UIView","text":"UIView","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"mapView:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNMapView","kind":"typeIdentifier","text":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" *) ","kind":"text"},{"text":"mapView","kind":"internalParam"},{"kind":"text","text":" "},{"text":"leftCalloutAccessoryViewForAnnotation:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:Qoobjc(pl)MLNAnnotation","text":"id<MLNAnnotation>","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"annotation"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The map view presenting the annotation callout."}],"type":"paragraph"}],"name":"mapView"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The object representing the annotation with the callout."}]}],"name":"annotation"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"The accessory view to display."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The left callout view is typically used to convey information about the"},{"type":"text","text":" "},{"type":"text","text":"annotation or to link to custom information provided by your application."}],"type":"paragraph"},{"inlineContent":[{"text":"If the view you specify is a descendant of the ","type":"text"},{"code":"UIControl","type":"codeVoice"},{"text":" class, you can use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the map view’s delegate to receive notifications when your control is tapped,"},{"type":"text","text":" "},{"type":"text","text":"by implementing the "},{"code":"-mapView:annotation:calloutAccessoryControlTapped:","type":"codeVoice"},{"text":" ","type":"text"},{"text":"method. If the view you specify does not descend from ","type":"text"},{"type":"codeVoice","code":"UIControl"},{"text":", your view is","type":"text"},{"type":"text","text":" "},{"text":"responsible for handling any touch events within its bounds.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If this method is absent from the delegate, or if it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", the"},{"type":"text","text":" "},{"text":"standard callout view has no accessory view on its left side. The return value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of this method is ignored if "},{"type":"codeVoice","code":"-mapView:calloutViewForAnnotation:"},{"type":"text","text":" is present in"},{"text":" ","type":"text"},{"text":"the delegate.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display a view on the callout’s right side, implement the"},{"type":"text","text":" "},{"code":"-mapView:rightCalloutAccessoryViewForAnnotation:","type":"codeVoice"},{"type":"text","text":" method."}]},{"type":"heading","text":"Related examples","level":4,"anchor":"Related-examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Default callout usage, learn how to modify the view that is"},{"type":"text","text":" "},{"type":"text","text":"displayed on the left side of the standard callout bubble."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:"]}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"title":"MLNMapView","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}]},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","type":"topic","title":"MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:leftCalloutAccessoryViewForAnnotation:":{"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:leftCalloutAccessoryViewForAnnotation:","kind":"identifier"}],"type":"topic","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:leftcalloutaccessoryviewforannotation:","navigatorTitle":[{"kind":"identifier","text":"mapView:leftCalloutAccessoryViewForAnnotation:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:leftCalloutAccessoryViewForAnnotation:","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns the view to display on the left side of the standard callout bubble."}],"title":"mapView:leftCalloutAccessoryViewForAnnotation:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate","title":"MLNMapViewDelegate","abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"type":"text","text":" "},{"text":"require the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"type":"text","text":" "},{"text":"individual annotations.","type":"text"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","kind":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"type":"topic"}}}