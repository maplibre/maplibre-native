{"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"text":" * ","kind":"text"},{"text":"textIgnoresPlacement","kind":"identifier"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"type":"codeVoice","code":"NO"},{"type":"text","text":". Set"},{"type":"text","text":" "},{"text":"this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":". Otherwise,"},{"text":" ","type":"text"},{"text":"it is ignored.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This attribute corresponds to the ","type":"text"},{"type":"text","text":"text-ignore-placement"},{"text":" ","type":"text"},{"text":"layout property in the MapLibre Style Spec.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"text":"Constant Boolean values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"text":" ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"text":" ","type":"text"},{"text":"attributes.","type":"text"}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textIgnoresPlacement","interfaceLanguage":"occ"},"metadata":{"title":"textIgnoresPlacement","roleHeading":"Instance Property","fragments":[{"text":"textIgnoresPlacement","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"textIgnoresPlacement","kind":"identifier"}],"symbolKind":"property","role":"symbol","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textIgnoresPlacement"},"sections":[],"abstract":[{"type":"text","text":"If true, other symbols can be visible even if they collide with the text."}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textignoresplacement"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"type":"text","text":" is a style layer that renders icon and text labels"},{"type":"text","text":" "},{"text":"at points or along lines on the map.","type":"text"}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer","kind":"symbol","title":"MLNSymbolStyleLayer","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","fragments":[{"kind":"identifier","text":"MLNSymbolStyleLayer"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textIgnoresPlacement":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textIgnoresPlacement","fragments":[{"text":"textIgnoresPlacement","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textignoresplacement","abstract":[{"type":"text","text":"If true, other symbols can be visible even if they collide with the text."}],"type":"topic","title":"textIgnoresPlacement","role":"symbol"}}}