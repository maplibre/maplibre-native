{"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes","roleHeading":"Instance Property","role":"symbol","title":"textWritingModes","fragments":[{"kind":"identifier","text":"textWritingModes"}],"navigatorTitle":[{"text":"textWritingModes","kind":"identifier"}],"symbolKind":"property"},"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","interfaceLanguage":"occ"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"kind":"identifier","text":"textWritingModes"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"text":", and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"symbolPlacement"},{"text":" is set to an expression that evaluates to or","type":"text"},{"text":" ","type":"text"},{"code":"MLNSymbolPlacementPoint","type":"codeVoice"},{"type":"text","text":". Otherwise, it is ignored."}]},{"inlineContent":[{"type":"text","text":"This attribute corresponds to the "},{"type":"text","text":"text-writing-mode"},{"text":" ","type":"text"},{"text":"layout property in the MapLibre Style Spec.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"inlineContent":[{"text":"Constant ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","type":"reference"},{"type":"text","text":" array values"},{"type":"text","text":" "},{"type":"text","text":"Constant array, in which each element is any of the following constant string"},{"type":"text","text":" "},{"text":"values:","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"horizontal"},{"type":"text","text":": If a text’s language supports horizontal writing mode,"},{"text":" ","type":"text"},{"text":"symbols with point placement would be laid out horizontally.","type":"text"},{"type":"text","text":" "},{"code":"vertical","type":"codeVoice"},{"type":"text","text":": If a text’s language supports vertical writing mode, symbols"},{"type":"text","text":" "},{"type":"text","text":"with point placement would be laid out vertically."},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable"}],"type":"paragraph"},{"inlineContent":[{"text":"This property does not support applying interpolation functions to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"text":" ","type":"text"},{"type":"text","text":"attributes."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"type":"text","text":" "},{"text":"order for the placement of an orientation variant.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","title":"textWritingModes","role":"symbol","fragments":[{"text":"textWritingModes","kind":"identifier"}],"type":"topic","abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"text":" ","type":"text"},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"url":"\/documentation\/maplibre\/mlntextwritingmode","abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"text":" ","type":"text"},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"type":"text","text":" "},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","title":"MLNTextWritingMode","fragments":[{"kind":"identifier","text":"MLNTextWritingMode"}],"role":"symbol","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","type":"topic","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","type":"reference","isActive":true},{"type":"text","text":" is a style layer that renders icon and text labels"},{"type":"text","text":" "},{"text":"at points or along lines on the map.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","title":"MLNSymbolStyleLayer"}}}