{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"textWritingModes","kind":"identifier"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"symbolPlacement"},{"type":"text","text":" is set to an expression that evaluates to or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MLNSymbolPlacementPoint"},{"text":". Otherwise, it is ignored.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This attribute corresponds to the "},{"type":"text","text":"text-writing-mode"},{"type":"text","text":" "},{"text":"layout property in the MapLibre Style Spec.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"text":"Constant ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode"},{"type":"text","text":" array values"},{"text":" ","type":"text"},{"type":"text","text":"Constant array, in which each element is any of the following constant string"},{"text":" ","type":"text"},{"type":"text","text":"values:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"horizontal"},{"text":": If a text’s language supports horizontal writing mode,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"symbols with point placement would be laid out horizontally."},{"type":"text","text":" "},{"type":"codeVoice","code":"vertical"},{"type":"text","text":": If a text’s language supports vertical writing mode, symbols"},{"text":" ","type":"text"},{"type":"text","text":"with point placement would be laid out vertically."},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"text":" ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"text":" ","type":"text"},{"type":"text","text":"attributes."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes"],"traits":[{"interfaceLanguage":"occ"}]}],"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"English point symbol will be rendered horizontally even if array value contains"},{"text":" ","type":"text"},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"type":"text","text":" "},{"type":"text","text":"order for the placement of an orientation variant."}],"metadata":{"modules":[{"name":"MapLibre"}],"fragments":[{"text":"textWritingModes","kind":"identifier"}],"symbolKind":"property","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textWritingModes","navigatorTitle":[{"text":"textWritingModes","kind":"identifier"}],"role":"symbol","title":"textWritingModes","roleHeading":"Instance Property"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNTextWritingMode":{"abstract":[{"text":"The property allows control over a symbol’s orientation. Note that the property","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values act as a hint, so that a symbol whose language doesn’t support the"},{"type":"text","text":" "},{"type":"text","text":"provided orientation will be laid out in its natural orientation. Example:"},{"type":"text","text":" "},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"type":"text","text":" "},{"text":"single ‘vertical’ enum value. The order of elements in an array define priority","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"order for the placement of an orientation variant."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNTextWritingMode","url":"\/documentation\/maplibre\/mlntextwritingmode","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"MLNTextWritingMode","kind":"identifier"}],"title":"MLNTextWritingMode"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","kind":"symbol","title":"MLNSymbolStyleLayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","isActive":true},{"text":" is a style layer that renders icon and text labels","type":"text"},{"type":"text","text":" "},{"text":"at points or along lines on the map.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","role":"symbol","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textWritingModes":{"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"textWritingModes"}],"abstract":[{"type":"text","text":"The property allows control over a symbol’s orientation. Note that the property"},{"text":" ","type":"text"},{"text":"values act as a hint, so that a symbol whose language doesn’t support the","type":"text"},{"type":"text","text":" "},{"text":"provided orientation will be laid out in its natural orientation. Example:","type":"text"},{"type":"text","text":" "},{"text":"English point symbol will be rendered horizontally even if array value contains","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"single ‘vertical’ enum value. The order of elements in an array define priority"},{"text":" ","type":"text"},{"type":"text","text":"order for the placement of an orientation variant."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textWritingModes","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textwritingmodes","title":"textWritingModes","kind":"symbol"}}}