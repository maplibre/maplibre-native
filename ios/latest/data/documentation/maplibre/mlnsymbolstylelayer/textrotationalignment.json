{"abstract":[{"type":"text","text":"In combination with "},{"type":"codeVoice","code":"symbolPlacement"},{"text":", determines the rotation behavior of the","type":"text"},{"text":" ","type":"text"},{"text":"individual glyphs forming the text.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"textRotationAlignment"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"code":"auto","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"code":"text","type":"codeVoice"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"text":". Otherwise,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it is ignored."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"inlineContent":[{"text":"Constant ","type":"text"},{"code":"MLNTextRotationAlignment","type":"codeVoice"},{"type":"text","text":" values"},{"type":"text","text":" "},{"type":"text","text":"Any of the following constant string values:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":": When "},{"code":"symbol-placement","type":"codeVoice"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"point"},{"type":"text","text":", aligns text east-west."},{"type":"text","text":" "},{"text":"When ","type":"text"},{"type":"codeVoice","code":"symbol-placement"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"line"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"line-center"},{"type":"text","text":", aligns text x-axes"},{"type":"text","text":" "},{"text":"with the line.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"viewport"},{"text":": Produces glyphs whose x-axes are aligned with the x-axis of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"viewport, regardless of the value of "},{"type":"codeVoice","code":"symbol-placement"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"auto"},{"type":"text","text":": When "},{"type":"codeVoice","code":"symbol-placement"},{"text":" is set to ","type":"text"},{"code":"point","type":"codeVoice"},{"type":"text","text":", this is equivalent to"},{"text":" ","type":"text"},{"code":"viewport","type":"codeVoice"},{"type":"text","text":". When "},{"code":"symbol-placement","type":"codeVoice"},{"type":"text","text":" is set to "},{"code":"line","type":"codeVoice"},{"type":"text","text":" or "},{"code":"line-center","type":"codeVoice"},{"type":"text","text":", this is"},{"type":"text","text":" "},{"text":"equivalent to ","type":"text"},{"code":"map","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"text":" ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable or applying interpolation or step functions to feature"},{"type":"text","text":" "},{"type":"text","text":"attributes."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"text":"textRotationAlignment","kind":"identifier"}],"roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"navigatorTitle":[{"text":"textRotationAlignment","kind":"identifier"}],"role":"symbol","symbolKind":"property","title":"textRotationAlignment","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textRotationAlignment"},"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textrotationalignment"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textRotationAlignment","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"kind":"symbol","title":"MLNSymbolStyleLayer","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders icon and text labels","type":"text"},{"type":"text","text":" "},{"type":"text","text":"at points or along lines on the map."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","type":"topic","role":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textRotationAlignment":{"type":"topic","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textrotationalignment","kind":"symbol","role":"symbol","abstract":[{"text":"In combination with ","type":"text"},{"code":"symbolPlacement","type":"codeVoice"},{"text":", determines the rotation behavior of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"individual glyphs forming the text."}],"title":"textRotationAlignment","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textRotationAlignment","fragments":[{"text":"textRotationAlignment","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","role":"collection","title":"MapLibre","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre"}}}