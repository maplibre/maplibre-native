{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"kind":"identifier","text":"textPitchAlignment"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"code":"auto","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Set this property to "},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"code":"text","type":"codeVoice"},{"text":" is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":". Otherwise,"},{"type":"text","text":" "},{"type":"text","text":"it is ignored."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"text":"Constant ","type":"text"},{"type":"codeVoice","code":"MLNTextPitchAlignment"},{"type":"text","text":" values"},{"text":" ","type":"text"},{"text":"Any of the following constant string values:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"map"},{"text":": The text is aligned to the plane of the map.","type":"text"},{"text":" ","type":"text"},{"code":"viewport","type":"codeVoice"},{"type":"text","text":": The text is aligned to the plane of the viewport."},{"type":"text","text":" "},{"type":"codeVoice","code":"auto"},{"type":"text","text":": Automatically matches the value of "},{"code":"text-rotation-alignment","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This property does not support applying interpolation functions to the","type":"text"},{"type":"text","text":" "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"text":" ","type":"text"},{"text":"attributes.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textPitchAlignment"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"property","title":"textPitchAlignment","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","navigatorTitle":[{"text":"textPitchAlignment","kind":"identifier"}],"externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textPitchAlignment","fragments":[{"text":"textPitchAlignment","kind":"identifier"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textpitchalignment"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"abstract":[{"text":"Orientation of text when map is pitched.","type":"text"}],"sections":[],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer","title":"MLNSymbolStyleLayer","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"},{"type":"text","text":" is a style layer that renders icon and text labels"},{"text":" ","type":"text"},{"type":"text","text":"at points or along lines on the map."}],"fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textPitchAlignment":{"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textpitchalignment","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textPitchAlignment","type":"topic","role":"symbol","title":"textPitchAlignment","abstract":[{"type":"text","text":"Orientation of text when map is pitched."}],"fragments":[{"kind":"identifier","text":"textPitchAlignment"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","type":"topic"}}}