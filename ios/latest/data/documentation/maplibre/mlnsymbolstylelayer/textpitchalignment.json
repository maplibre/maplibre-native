{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"textPitchAlignment"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to ","type":"text"},{"code":"auto","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Set this property to "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to reset it to the default value."}]},{"inlineContent":[{"type":"text","text":"This property is only applied to the style if "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is non-"},{"code":"nil","type":"codeVoice"},{"text":". Otherwise,","type":"text"},{"text":" ","type":"text"},{"text":"it is ignored.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant "},{"code":"MLNTextPitchAlignment","type":"codeVoice"},{"text":" values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Any of the following constant string values:"},{"type":"text","text":" "},{"code":"map","type":"codeVoice"},{"text":": The text is aligned to the plane of the map.","type":"text"},{"type":"text","text":" "},{"code":"viewport","type":"codeVoice"},{"type":"text","text":": The text is aligned to the plane of the viewport."},{"type":"text","text":" "},{"code":"auto","type":"codeVoice"},{"type":"text","text":": Automatically matches the value of "},{"code":"text-rotation-alignment","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property does not support applying interpolation functions to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable or applying interpolation or step functions to feature","type":"text"},{"type":"text","text":" "},{"text":"attributes.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/maplibre\/mlnsymbolstylelayer\/textpitchalignment"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"metadata":{"fragments":[{"text":"textPitchAlignment","kind":"identifier"}],"roleHeading":"Instance Property","navigatorTitle":[{"text":"textPitchAlignment","kind":"identifier"}],"role":"symbol","title":"textPitchAlignment","externalID":"c:objc(cs)MLNSymbolStyleLayer(py)textPitchAlignment","modules":[{"name":"MapLibre"}],"symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer"]]},"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textPitchAlignment","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Orientation of text when map is pitched.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textPitchAlignment":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textPitchAlignment","fragments":[{"text":"textPitchAlignment","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textpitchalignment","title":"textPitchAlignment","abstract":[{"text":"Orientation of text when map is pitched.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer":{"url":"\/documentation\/maplibre\/mlnsymbolstylelayer","fragments":[{"text":"MLNSymbolStyleLayer","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","kind":"symbol","title":"MLNSymbolStyleLayer","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer","isActive":true,"type":"reference"},{"text":" is a style layer that renders icon and text labels","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"at points or along lines on the map."}]}}}