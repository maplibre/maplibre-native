{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"UIEdgeInsets","preciseIdentifier":"c:@S@UIEdgeInsets","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@CGRect","text":"CGRect","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rect","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Rect that the callout is presented from. This should be the same as the one passed in","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:","type":"reference","isActive":true}]}],"name":"rect"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"code":"UIEdgeInsets","type":"codeVoice"},{"text":" representing the margins. Values should be negative.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are used to determine positioning. Currently only the top and bottom properties of the return"},{"text":" ","type":"text"},{"type":"text","text":"value are used. For example, "},{"type":"codeVoice","code":"{ .top = -50.0, .left = -10.0, .bottom = 0.0, .right = -10.0 }"},{"text":" ","type":"text"},{"text":"indicates a 50 point margin above the presentation origin rect (and 10 point margins to the left","type":"text"},{"text":" ","type":"text"},{"text":"and the right) in which the callout is assumed to be displayed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"There are no assumed defaults for these margins, as they should be calculated from the callout that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is to be presented. For example, "},{"type":"codeVoice","code":"SMCalloutView"},{"type":"text","text":" generates the top margin from the callout height,"},{"type":"text","text":" "},{"type":"text","text":"but the left and right margins from a minimum width that the callout should have."}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView"]]},"variants":[{"paths":["\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"abstract":[{"type":"text","text":"If implemented, should provide margins to expand the rect the callout is presented from."}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:"},"metadata":{"title":"marginInsetsHintForPresentationFromRect:","roleHeading":"Instance Method","externalID":"c:objc(pl)MLNCalloutView(im)marginInsetsHintForPresentationFromRect:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"modules":[{"name":"MapLibre"}],"symbolKind":"method","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNCalloutView.h#L89","fileName":"MLNCalloutView.h"}},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/marginInsetsHintForPresentationFromRect:":{"navigatorTitle":[{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:","title":"marginInsetsHintForPresentationFromRect:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"abstract":[{"type":"text","text":"If implemented, should provide margins to expand the rect the callout is presented from."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/presentCalloutFromRect:inView:constrainedToRect:animated:":{"navigatorTitle":[{"kind":"identifier","text":"presentCalloutFromRect:inView:constrainedToRect:animated:"}],"url":"\/documentation\/maplibre\/mlncalloutview\/presentcalloutfromrect:inview:constrainedtorect:animated:","title":"presentCalloutFromRect:inView:constrainedToRect:animated:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:","fragments":[{"kind":"text","text":"- "},{"text":"presentCalloutFromRect:inView:constrainedToRect:animated:","kind":"identifier"}],"abstract":[{"text":"Presents a callout view by adding it to ","type":"text"},{"code":"view","type":"codeVoice"},{"type":"text","text":" and pointing at the given rect"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"view"},{"type":"text","text":"â€™s bounds. Constrains the callout to the rect in the space of "},{"code":"view","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView","abstract":[{"type":"text","text":"A protocol for a "},{"type":"codeVoice","code":"UIView"},{"type":"text","text":" subclass that displays information about a selected"},{"type":"text","text":" "},{"type":"text","text":"annotation near that annotation."}],"kind":"symbol","url":"\/documentation\/maplibre\/mlncalloutview","fragments":[{"text":"MLNCalloutView","kind":"identifier"}],"role":"symbol","title":"MLNCalloutView"}}}