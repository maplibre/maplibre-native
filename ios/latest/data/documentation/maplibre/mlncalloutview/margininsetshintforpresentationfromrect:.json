{"variants":[{"paths":["\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"UIEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"c:@S@UIEdgeInsets"},{"text":") ","kind":"text"},{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CGRect","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect"},{"text":") ","kind":"text"},{"text":"rect","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"rect","content":[{"inlineContent":[{"type":"text","text":"Rect that the callout is presented from. This should be the same as the one passed in"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:","isActive":true}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"code":"UIEdgeInsets","type":"codeVoice"},{"text":" representing the margins. Values should be negative.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are used to determine positioning. Currently only the top and bottom properties of the return"},{"type":"text","text":" "},{"type":"text","text":"value are used. For example, "},{"type":"codeVoice","code":"{ .top = -50.0, .left = -10.0, .bottom = 0.0, .right = -10.0 }"},{"type":"text","text":" "},{"type":"text","text":"indicates a 50 point margin above the presentation origin rect (and 10 point margins to the left"},{"type":"text","text":" "},{"type":"text","text":"and the right) in which the callout is assumed to be displayed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no assumed defaults for these margins, as they should be calculated from the callout that"},{"type":"text","text":" "},{"type":"text","text":"is to be presented. For example, "},{"code":"SMCalloutView","type":"codeVoice"},{"type":"text","text":" generates the top margin from the callout height,"},{"type":"text","text":" "},{"type":"text","text":"but the left and right margins from a minimum width that the callout should have."}]}],"kind":"content"}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"text":"- ","kind":"text"},{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"}],"symbolKind":"method","remoteSource":{"fileName":"MLNCalloutView.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/ios\/src\/MLNCalloutView.h#L89"},"externalID":"c:objc(pl)MLNCalloutView(im)marginInsetsHintForPresentationFromRect:","navigatorTitle":[{"text":"marginInsetsHintForPresentationFromRect:","kind":"identifier"}],"roleHeading":"Instance Method","title":"marginInsetsHintForPresentationFromRect:","role":"symbol","modules":[{"name":"MapLibre"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"If implemented, should provide margins to expand the rect the callout is presented from."}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView","title":"MLNCalloutView","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"MLNCalloutView"}],"url":"\/documentation\/maplibre\/mlncalloutview","abstract":[{"type":"text","text":"A protocol for a "},{"code":"UIView","type":"codeVoice"},{"type":"text","text":" subclass that displays information about a selected"},{"type":"text","text":" "},{"type":"text","text":"annotation near that annotation."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/presentCalloutFromRect:inView:constrainedToRect:animated:":{"role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlncalloutview\/presentcalloutfromrect:inview:constrainedtorect:animated:","navigatorTitle":[{"kind":"identifier","text":"presentCalloutFromRect:inView:constrainedToRect:animated:"}],"title":"presentCalloutFromRect:inView:constrainedToRect:animated:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"presentCalloutFromRect:inView:constrainedToRect:animated:"}],"type":"topic","abstract":[{"type":"text","text":"Presents a callout view by adding it to "},{"type":"codeVoice","code":"view"},{"type":"text","text":" and pointing at the given rect"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"view"},{"type":"text","text":"â€™s bounds. Constrains the callout to the rect in the space of "},{"type":"codeVoice","code":"view"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/presentCalloutFromRect:inView:constrainedToRect:animated:"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","role":"collection","title":"MapLibre","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCalloutView/marginInsetsHintForPresentationFromRect:":{"title":"marginInsetsHintForPresentationFromRect:","role":"symbol","url":"\/documentation\/maplibre\/mlncalloutview\/margininsetshintforpresentationfromrect:","navigatorTitle":[{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"abstract":[{"type":"text","text":"If implemented, should provide margins to expand the rect the callout is presented from."}],"type":"topic","kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"marginInsetsHintForPresentationFromRect:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCalloutView\/marginInsetsHintForPresentationFromRect:"}}}