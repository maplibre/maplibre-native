{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNHeatmapStyleLayer"]]},"kind":"symbol","sections":[],"metadata":{"externalID":"c:objc(cs)MLNHeatmapStyleLayer(py)heatmapColor","role":"symbol","symbolKind":"property","roleHeading":"Instance Property","fragments":[{"text":"heatmapColor","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"navigatorTitle":[{"kind":"identifier","text":"heatmapColor"}],"title":"heatmapColor"},"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"heatmapColor","kind":"identifier"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to a rainbow","type":"text"},{"text":" ","type":"text"},{"text":"color scale from blue to red. Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the","type":"text"},{"text":" ","type":"text"},{"text":"default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"inlineContent":[{"text":"Constant ","type":"text"},{"type":"codeVoice","code":"UIColor"},{"text":" values","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$heatmapDensity"},{"text":" variable","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This property does not support applying interpolation or step functions to"},{"type":"text","text":" "},{"type":"text","text":"feature attributes."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/maplibre\/mlnheatmapstylelayer\/heatmapcolor"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNHeatmapStyleLayer\/heatmapColor","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"The color of each screen point based on its density value in a heatmap. This"},{"type":"text","text":" "},{"type":"text","text":"property is normally set to an interpolation or step expression with the"},{"type":"text","text":" "},{"code":"$heatmapDensity","type":"codeVoice"},{"type":"text","text":" value as its input."}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNHeatmapStyleLayer":{"type":"topic","title":"MLNHeatmapStyleLayer","kind":"symbol","role":"symbol","url":"\/documentation\/maplibre\/mlnheatmapstylelayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNHeatmapStyleLayer","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNHeatmapStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders a "},{"type":"text","text":"heatmap"},{"type":"text","text":"."}],"fragments":[{"text":"MLNHeatmapStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNHeatmapStyleLayer/heatmapColor":{"role":"symbol","title":"heatmapColor","abstract":[{"text":"The color of each screen point based on its density value in a heatmap. This","type":"text"},{"text":" ","type":"text"},{"text":"property is normally set to an interpolation or step expression with the","type":"text"},{"text":" ","type":"text"},{"code":"$heatmapDensity","type":"codeVoice"},{"text":" value as its input.","type":"text"}],"fragments":[{"text":"heatmapColor","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnheatmapstylelayer\/heatmapcolor","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNHeatmapStyleLayer\/heatmapColor"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","role":"collection","title":"MapLibre","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"}}}