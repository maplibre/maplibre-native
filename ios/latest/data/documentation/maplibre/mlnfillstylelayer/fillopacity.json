{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"fillOpacity","kind":"identifier"},{"text":";","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer\/fillOpacity","interfaceLanguage":"occ"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnfillstylelayer\/fillopacity"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer"]]},"metadata":{"symbolKind":"property","title":"fillOpacity","role":"symbol","fragments":[{"text":"fillOpacity","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNFillStyleLayer(py)fillOpacity","navigatorTitle":[{"kind":"identifier","text":"fillOpacity"}],"roleHeading":"Instance Property"},"abstract":[{"type":"text","text":"The opacity of the entire fill layer. In contrast to the "},{"type":"codeVoice","code":"fillColor"},{"type":"text","text":", this"},{"type":"text","text":" "},{"type":"text","text":"value will also affect the 1pt stroke around the fill, if the stroke is used."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNFillStyleLayer":{"title":"MLNFillStyleLayer","type":"topic","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer","role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer"},{"type":"text","text":" is a style layer that renders one or more filled (and"},{"type":"text","text":" "},{"type":"text","text":"optionally stroked) polygons on the map."}],"fragments":[{"text":"MLNFillStyleLayer","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnfillstylelayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNFillStyleLayer/fillOpacity":{"kind":"symbol","type":"topic","abstract":[{"text":"The opacity of the entire fill layer. In contrast to the ","type":"text"},{"type":"codeVoice","code":"fillColor"},{"text":", this","type":"text"},{"text":" ","type":"text"},{"text":"value will also affect the 1pt stroke around the fill, if the stroke is used.","type":"text"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnfillstylelayer\/fillopacity","fragments":[{"text":"fillOpacity","kind":"identifier"}],"title":"fillOpacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNFillStyleLayer\/fillOpacity"}}}