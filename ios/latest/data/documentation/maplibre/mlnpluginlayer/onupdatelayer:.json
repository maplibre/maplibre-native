{"abstract":[{"type":"text","text":"Called when the layer is updated in the render loop.  This would update animations\/etc"}],"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnpluginlayer\/onupdatelayer:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","externalID":"c:objc(cs)MLNPluginLayer(im)onUpdateLayer:","remoteSource":{"fileName":"MLNPluginLayer.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/darwin\/src\/MLNPluginLayer.h#L101"},"navigatorTitle":[{"text":"onUpdateLayer:","kind":"identifier"}],"roleHeading":"Instance Method","symbolKind":"method","title":"onUpdateLayer:","modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onUpdateLayer:"}]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer\/onUpdateLayer:"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"onUpdateLayer:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@MLNPluginLayerDrawingContext","text":"MLNPluginLayerDrawingContext","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayerDrawingContext"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"drawingContext"},{"text":";","kind":"text"}],"languages":["occ"]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCustomStyleLayer":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCustomStyleLayer","url":"\/documentation\/maplibre\/mlncustomstylelayer","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNCustomStyleLayer"}],"abstract":[{"type":"text","text":"A style layer that is rendered by Metal code that you provide."}],"title":"MLNCustomStyleLayer","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayerDrawingContext":{"abstract":[{"type":"text","text":"A structure containing context needed to draw a frame in an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCustomStyleLayer"},{"type":"text","text":"."}],"url":"\/documentation\/maplibre\/mlnpluginlayerdrawingcontext","title":"MLNPluginLayerDrawingContext","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayerDrawingContext","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNPluginLayerDrawingContext"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayer":{"url":"\/documentation\/maplibre\/mlnpluginlayer","title":"MLNPluginLayer","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MLNPluginLayer"}],"abstract":[]},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayer/onUpdateLayer:":{"url":"\/documentation\/maplibre\/mlnpluginlayer\/onupdatelayer:","role":"symbol","kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onUpdateLayer:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer\/onUpdateLayer:","type":"topic","navigatorTitle":[{"text":"onUpdateLayer:","kind":"identifier"}],"abstract":[{"text":"Called when the layer is updated in the render loop.  This would update animations\/etc","type":"text"}],"title":"onUpdateLayer:"}}}