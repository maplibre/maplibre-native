{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:v","text":"void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"onUpdateLayer:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@MLNPluginLayerDrawingContext","text":"MLNPluginLayerDrawingContext","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayerDrawingContext","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"drawingContext","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnpluginlayer\/onupdatelayer:"]}],"metadata":{"modules":[{"name":"MapLibre"}],"symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"text":"onUpdateLayer:","kind":"identifier"}],"remoteSource":{"fileName":"MLNPluginLayer.h","url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/darwin\/src\/MLNPluginLayer.h#L101"},"title":"onUpdateLayer:","roleHeading":"Instance Method","role":"symbol","externalID":"c:objc(cs)MLNPluginLayer(im)onUpdateLayer:","navigatorTitle":[{"text":"onUpdateLayer:","kind":"identifier"}]},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer\/onUpdateLayer:"},"abstract":[{"text":"Called when the layer is updated in the render loop.  This would update animations\/etc","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNCustomStyleLayer":{"fragments":[{"text":"MLNCustomStyleLayer","kind":"identifier"}],"kind":"symbol","title":"MLNCustomStyleLayer","abstract":[{"type":"text","text":"A style layer that is rendered by Metal code that you provide."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCustomStyleLayer","url":"\/documentation\/maplibre\/mlncustomstylelayer","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayerDrawingContext":{"abstract":[{"text":"A structure containing context needed to draw a frame in an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCustomStyleLayer","type":"reference"},{"text":".","type":"text"}],"role":"symbol","title":"MLNPluginLayerDrawingContext","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayerDrawingContext","kind":"symbol","url":"\/documentation\/maplibre\/mlnpluginlayerdrawingcontext","fragments":[{"kind":"identifier","text":"MLNPluginLayerDrawingContext"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","title":"MapLibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayer":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer","abstract":[],"kind":"symbol","fragments":[{"text":"MLNPluginLayer","kind":"identifier"}],"title":"MLNPluginLayer","type":"topic","url":"\/documentation\/maplibre\/mlnpluginlayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayer/onUpdateLayer:":{"title":"onUpdateLayer:","url":"\/documentation\/maplibre\/mlnpluginlayer\/onupdatelayer:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onUpdateLayer:"}],"abstract":[{"type":"text","text":"Called when the layer is updated in the render loop.  This would update animations\/etc"}],"type":"topic","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer\/onUpdateLayer:","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"onUpdateLayer:"}]}}}