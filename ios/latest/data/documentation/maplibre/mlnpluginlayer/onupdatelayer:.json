{"kind":"symbol","variants":[{"paths":["\/documentation\/maplibre\/mlnpluginlayer\/onupdatelayer:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNPluginLayer(im)onUpdateLayer:","title":"onUpdateLayer:","remoteSource":{"url":"https:\/\/github.com\/maplibre\/maplibre-native\/blob\/main\/platform\/darwin\/src\/MLNPluginLayer.h#L101","fileName":"MLNPluginLayer.h"},"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"onUpdateLayer:","kind":"identifier"}],"symbolKind":"method","roleHeading":"Instance Method","navigatorTitle":[{"text":"onUpdateLayer:","kind":"identifier"}]},"abstract":[{"type":"text","text":"Called when the layer is updated in the render loop.  This would update animations\/etc"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"text":"onUpdateLayer:","kind":"identifier"},{"kind":"text","text":"("},{"text":"MLNPluginLayerDrawingContext","preciseIdentifier":"c:@S@MLNPluginLayerDrawingContext","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayerDrawingContext"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"drawingContext"},{"text":";","kind":"text"}]}]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer\/onUpdateLayer:"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayer":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer","fragments":[{"text":"MLNPluginLayer","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnpluginlayer","role":"symbol","kind":"symbol","abstract":[],"type":"topic","title":"MLNPluginLayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayerDrawingContext":{"role":"symbol","title":"MLNPluginLayerDrawingContext","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayerDrawingContext","type":"topic","kind":"symbol","fragments":[{"text":"MLNPluginLayerDrawingContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure containing context needed to draw a frame in an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCustomStyleLayer","type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/maplibre\/mlnpluginlayerdrawingcontext"},"doc://org.swift.MyProject/documentation/MapLibre/MLNCustomStyleLayer":{"kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNCustomStyleLayer","title":"MLNCustomStyleLayer","abstract":[{"type":"text","text":"A style layer that is rendered by Metal code that you provide."}],"url":"\/documentation\/maplibre\/mlncustomstylelayer","role":"symbol","fragments":[{"text":"MLNCustomStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","title":"MapLibre","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNPluginLayer/onUpdateLayer:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPluginLayer\/onUpdateLayer:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"onUpdateLayer:"}],"url":"\/documentation\/maplibre\/mlnpluginlayer\/onupdatelayer:","role":"symbol","navigatorTitle":[{"text":"onUpdateLayer:","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Called when the layer is updated in the render loop.  This would update animations\/etc"}],"type":"topic","title":"onUpdateLayer:"}}}