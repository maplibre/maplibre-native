{"metadata":{"roleHeading":"Instance Property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"symbolKind":"property","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"title":"lineOpacity","role":"symbol"},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"sections":[],"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}],"type":"paragraph"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","kind":"symbol","title":"MLNLineStyleLayer","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true,"type":"reference"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"role":"symbol"}}}