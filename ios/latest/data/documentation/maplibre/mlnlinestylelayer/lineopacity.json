{"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","symbolKind":"property","modules":[{"name":"MapLibre"}],"title":"lineOpacity"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"platforms":["iOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}],"type":"paragraph"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"type":"topic","url":"\/documentation\/maplibre\/mlnlinestylelayer","role":"symbol","title":"MLNLineStyleLayer","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","title":"MapLibre","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","type":"topic","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","kind":"symbol","title":"lineOpacity","role":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}]}}}