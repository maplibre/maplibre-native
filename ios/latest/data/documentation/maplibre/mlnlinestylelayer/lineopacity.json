{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","fragments":[{"kind":"identifier","text":"lineOpacity"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity","role":"symbol"},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"text":" ","type":"text"},{"type":"text","text":"feature attributes"}]}]}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"kind":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","title":"MLNLineStyleLayer","type":"topic","role":"symbol","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"lineOpacity"}],"title":"lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre"}}}