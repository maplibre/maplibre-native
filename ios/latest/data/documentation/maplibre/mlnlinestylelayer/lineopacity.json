{"kind":"symbol","variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"lineOpacity","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","roleHeading":"Instance Property","symbolKind":"property","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","modules":[{"name":"MapLibre"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}],"kind":"content"}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"url":"\/documentation\/maplibre\/mlnlinestylelayer","title":"MLNLineStyleLayer","type":"topic","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"lineOpacity"}],"title":"lineOpacity","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"}}}