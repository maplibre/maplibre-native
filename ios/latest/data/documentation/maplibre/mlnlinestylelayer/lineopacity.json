{"metadata":{"roleHeading":"Instance Property","title":"lineOpacity","fragments":[{"kind":"identifier","text":"lineOpacity"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","symbolKind":"property","modules":[{"name":"MapLibre"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"type":"topic","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"type":"text","text":"polylines on the map."}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","title":"MLNLineStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"title":"lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","fragments":[{"kind":"identifier","text":"lineOpacity"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","type":"topic","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"role":"symbol","kind":"symbol"}}}