{"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"metadata":{"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property","fragments":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","title":"lineOpacity","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","fragments":[{"kind":"identifier","text":"lineOpacity"}],"type":"topic","title":"lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","role":"symbol","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"kind":"symbol","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"title":"MLNLineStyleLayer","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","url":"\/documentation\/maplibre\/mlnlinestylelayer"}}}