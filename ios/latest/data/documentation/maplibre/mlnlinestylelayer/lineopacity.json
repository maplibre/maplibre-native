{"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","fragments":[{"kind":"identifier","text":"lineOpacity"}],"role":"symbol","title":"lineOpacity","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"type":"text","text":". Set this property to "},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}]},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}],"kind":"content"}],"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"type":"topic","title":"MLNLineStyleLayer","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"type":"topic","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","kind":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","role":"symbol","title":"lineOpacity"}}}