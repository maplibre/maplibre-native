{"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"kind":"symbol","identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"fragments":[{"text":"lineOpacity","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"role":"symbol","symbolKind":"property","title":"lineOpacity","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"type":"text","text":"feature attributes"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"title":"MLNLineStyleLayer","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true,"type":"reference"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","kind":"symbol","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"type":"topic","title":"lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","role":"collection"}}}