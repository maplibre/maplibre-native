{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"title":"lineOpacity","roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"fragments":[{"kind":"identifier","text":"lineOpacity"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"title":"MLNLineStyleLayer","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","fragments":[{"kind":"identifier","text":"lineOpacity"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","title":"lineOpacity","type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","url":"\/documentation\/maplibre","role":"collection","type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}