{"metadata":{"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property","modules":[{"name":"MapLibre"}],"title":"lineOpacity","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","roleHeading":"Instance Property","fragments":[{"kind":"identifier","text":"lineOpacity"}]},"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"text":") ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"kind":"text","text":";"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"code":"nil","type":"codeVoice"},{"text":" to reset it to the default value.","type":"text"}]},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable and\/or"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","title":"MLNLineStyleLayer","type":"topic","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders one or more stroked","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"polylines on the map."}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","title":"lineOpacity","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"lineOpacity","kind":"identifier"}]}}}