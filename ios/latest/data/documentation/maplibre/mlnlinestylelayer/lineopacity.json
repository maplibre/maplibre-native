{"metadata":{"role":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","roleHeading":"Instance Property","modules":[{"name":"MapLibre"}],"symbolKind":"property","title":"lineOpacity"},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"text":" ","type":"text"},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"title":"lineOpacity"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"title":"MLNLineStyleLayer","type":"topic","url":"\/documentation\/maplibre\/mlnlinestylelayer","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"text":" is a style layer that renders one or more stroked","type":"text"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","url":"\/documentation\/maplibre","type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"}}}