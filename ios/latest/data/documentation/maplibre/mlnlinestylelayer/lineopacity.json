{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"text":" * ","kind":"text"},{"text":"lineOpacity","kind":"identifier"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"sections":[],"kind":"symbol","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","title":"lineOpacity","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"symbolKind":"property","role":"symbol"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"url":"\/documentation\/maplibre\/mlnlinestylelayer","title":"MLNLineStyleLayer","type":"topic","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"text":" is a style layer that renders one or more stroked","type":"text"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","type":"topic","kind":"symbol","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"title":"lineOpacity","fragments":[{"kind":"identifier","text":"lineOpacity"}],"type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","kind":"symbol","role":"symbol"}}}