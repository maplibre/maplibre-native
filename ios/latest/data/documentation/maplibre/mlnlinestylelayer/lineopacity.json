{"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constant numeric values between 0 and 1 inclusive"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable and\/or"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Instance Property","fragments":[{"text":"lineOpacity","kind":"identifier"}],"title":"lineOpacity","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"modules":[{"name":"MapLibre"}],"role":"symbol"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","type":"topic","title":"lineOpacity","fragments":[{"text":"lineOpacity","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true,"type":"reference"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"title":"MLNLineStyleLayer","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"role":"collection"}}}