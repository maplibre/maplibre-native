{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"kind":"typeIdentifier","text":"NSExpression","preciseIdentifier":"c:objc(cs)NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}],"platforms":["iOS"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable and\/or"},{"text":" ","type":"text"},{"text":"feature attributes","type":"text"}]}],"kind":"content"}],"metadata":{"modules":[{"name":"MapLibre"}],"symbolKind":"property","role":"symbol","title":"lineOpacity","roleHeading":"Instance Property","fragments":[{"text":"lineOpacity","kind":"identifier"}],"navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}],"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity"},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","fragments":[{"kind":"identifier","text":"MLNLineStyleLayer"}],"type":"topic","title":"MLNLineStyleLayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","title":"lineOpacity","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"type":"topic","role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"}}}