{"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"text":" ","type":"text"},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"text":" variable and\/or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"feature attributes"}]}]}],"metadata":{"externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","symbolKind":"property","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"fragments":[{"kind":"identifier","text":"lineOpacity"}],"modules":[{"name":"MapLibre"}],"title":"lineOpacity","roleHeading":"Instance Property"},"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"fragments":[{"kind":"identifier","text":"lineOpacity"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"title":"lineOpacity","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","title":"MapLibre","url":"\/documentation\/maplibre","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"topic","url":"\/documentation\/maplibre\/mlnlinestylelayer","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference","isActive":true},{"type":"text","text":" is a style layer that renders one or more stroked"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"title":"MLNLineStyleLayer","role":"symbol"}}}