{"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"metadata":{"title":"shapeWithData:encoding:error:","roleHeading":"Type Method","symbolKind":"method","role":"symbol","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:"},"abstract":[{"type":"text","text":"Returns an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"+ ("},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"typeIdentifier","text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"kind":"text","text":" *) "},{"text":"shapeWithData:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSData","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encoding:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@T@NSStringEncoding","kind":"typeIdentifier","text":"NSStringEncoding"},{"kind":"text","text":") "},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"error:"},{"text":"(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * *) ","kind":"text"},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"encoding"},{"content":[{"inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}],"type":"paragraph"}],"name":"outError"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"type":"text","text":" "},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"text":" object describing the problem.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" that conforms to the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"text":"collection object, the returned value is an instance of","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Example","level":3,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"url":"\/documentation\/maplibre\/mlnshape","kind":"symbol","title":"MLNShape","role":"symbol","fragments":[{"text":"MLNShape","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"topic","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"title":"MLNShapeCollectionFeature","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"text":" object associates a shape collection with an","type":"text"},{"type":"text","text":" "},{"text":"optional identifier and attributes.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"title":"shapeWithData:encoding:error:","kind":"symbol","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","role":"symbol","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","type":"topic","abstract":[{"type":"text","text":"Returns an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","title":"MapLibre","kind":"symbol","role":"collection","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}]}}}