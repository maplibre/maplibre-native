{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"metadata":{"fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"roleHeading":"Type Method","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","role":"symbol","symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"title":"shapeWithData:encoding:error:"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"+ (","kind":"text"},{"text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"kind":"text","text":" *) "},{"text":"shapeWithData:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"encoding"},{"text":" ","kind":"text"},{"text":"error:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * *) ","kind":"text"},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}]}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"outError","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" object representation of ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"text":" if ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" could"},{"type":"text","text":" "},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" that conforms to the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"text":"collection object, the returned value is an instance of","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference","isActive":true},{"text":".","type":"text"}]},{"level":3,"anchor":"Example","type":"heading","text":"Example"},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","role":"collection","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"kind":"symbol","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","title":"shapeWithData:encoding:error:","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}],"type":"topic","title":"MLNShapeCollectionFeature","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","title":"MLNShape","url":"\/documentation\/maplibre\/mlnshape","role":"symbol"}}}