{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"abstract":[{"type":"text","text":"Returns an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"metadata":{"symbolKind":"method","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"title":"shapeWithData:encoding:error:","role":"symbol","modules":[{"name":"MapLibre"}],"roleHeading":"Type Method"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"+ ("},{"text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"shapeWithData:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"data"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"encoding","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"error:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier","text":"NSError"},{"text":" * *) ","kind":"text"},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"data","content":[{"inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}],"type":"paragraph"}]},{"name":"encoding","content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"outError","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the error. Pass in ","type":"text"},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"text":" could","type":"text"},{"type":"text","text":" "},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"text":" contains an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the problem."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" that conforms to the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"text":" ","type":"text"},{"text":"collection object, the returned value is an instance of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"Example","anchor":"Example"},{"code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"text":"optional identifier and attributes.","type":"text"}],"fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"title":"MLNShapeCollectionFeature"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","title":"MapLibre","url":"\/documentation\/maplibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"role":"symbol","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"kind":"symbol","title":"shapeWithData:encoding:error:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"fragments":[{"kind":"identifier","text":"MLNShape"}],"type":"topic","title":"MLNShape","url":"\/documentation\/maplibre\/mlnshape","kind":"symbol"}}}