{"metadata":{"modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"title":"shapeWithData:encoding:error:","role":"symbol","symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","roleHeading":"Type Method"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"abstract":[{"type":"text","text":"Returns an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"+ ("},{"text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"text":" *) ","kind":"text"},{"text":"shapeWithData:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData","text":"NSData"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSStringEncoding","preciseIdentifier":"c:@T@NSStringEncoding"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"error:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"text":" * *) ","kind":"text"},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}]}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}]},{"name":"outError","content":[{"type":"paragraph","inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"code":"NULL","type":"codeVoice"},{"type":"text","text":" to ignore any error."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"If the GeoJSON object is a geometry, the returned value is a kind of","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" that conforms to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"text":"collection object, the returned value is an instance of","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"Example","level":3,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"title":"shapeWithData:encoding:error:","fragments":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","type":"topic","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","abstract":[{"type":"text","text":"Returns an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"url":"\/documentation\/maplibre\/mlnshape","kind":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"role":"symbol","title":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"topic","fragments":[{"text":"MLNShape","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","type":"topic","role":"collection","url":"\/documentation\/maplibre","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"title":"MLNShapeCollectionFeature","kind":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference","isActive":true},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}],"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol"}}}