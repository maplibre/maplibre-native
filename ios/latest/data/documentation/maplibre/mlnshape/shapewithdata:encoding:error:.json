{"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"metadata":{"title":"shapeWithData:encoding:error:","modules":[{"name":"MapLibre"}],"symbolKind":"method","roleHeading":"Type Method","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"role":"symbol","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}]},"abstract":[{"type":"text","text":"Returns an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"+ ("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"kind":"text","text":" *) "},{"text":"shapeWithData:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSData","preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"encoding"},{"text":" ","kind":"text"},{"kind":"identifier","text":"error:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * *) "},{"text":"outError","kind":"internalParam"},{"kind":"text","text":";"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}],"type":"paragraph"}],"name":"data"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"text":".","type":"text"}]}],"name":"encoding"},{"content":[{"inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}],"type":"paragraph"}],"name":"outError"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object representation of "},{"code":"data","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" could","type":"text"},{"type":"text","text":" "},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"text":" contains an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" that conforms to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" protocol. If it is a feature","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":"."}],"type":"paragraph"},{"level":3,"text":"Example","type":"heading","anchor":"Example"},{"syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","role":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","type":"topic","title":"MLNShapeCollectionFeature","abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"text":" ","type":"text"},{"type":"text","text":"optional identifier and attributes."}],"kind":"symbol","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","url":"\/documentation\/maplibre","title":"MapLibre","role":"collection","kind":"symbol","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"type":"topic","role":"symbol","title":"MLNShape","url":"\/documentation\/maplibre\/mlnshape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"kind":"symbol","fragments":[{"text":"MLNShape","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","type":"topic","title":"shapeWithData:encoding:error:","role":"symbol","fragments":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Returns an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}]}}}