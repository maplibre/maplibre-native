{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"metadata":{"modules":[{"name":"MapLibre"}],"title":"shapeWithData:encoding:error:","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"role":"symbol","symbolKind":"method","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"roleHeading":"Type Method","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"+ (","kind":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"shapeWithData:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSData","text":"NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"error:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSError","text":"NSError","kind":"typeIdentifier"},{"text":" * *) ","kind":"text"},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}]}]},{"parameters":[{"name":"data","content":[{"inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}],"type":"paragraph"}]},{"name":"encoding","content":[{"inlineContent":[{"text":"The encoding used by ","type":"text"},{"code":"data","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"outError","content":[{"inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"text":" object describing the error. Pass in ","type":"text"},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"type":"text","text":" "},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the problem."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"If the GeoJSON object is a geometry, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" that conforms to the ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" protocol. If it is a feature","type":"text"},{"text":" ","type":"text"},{"text":"collection object, the returned value is an instance of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Example","level":3,"text":"Example","type":"heading"},{"type":"codeListing","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"syntax":"swift"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"role":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}],"title":"MLNShape","type":"topic","url":"\/documentation\/maplibre\/mlnshape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"abstract":[{"text":"Returns an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"role":"symbol","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"kind":"symbol","title":"shapeWithData:encoding:error:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","type":"topic","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","title":"MLNShapeCollectionFeature","type":"topic","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true,"type":"reference"},{"text":" object associates a shape collection with an","type":"text"},{"text":" ","type":"text"},{"text":"optional identifier and attributes.","type":"text"}],"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"}}}