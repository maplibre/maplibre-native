{"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Type Method","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","symbolKind":"method","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"fragments":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"title":"shapeWithData:encoding:error:","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Returns an "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"+ (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"shapeWithData:"},{"text":"(","kind":"text"},{"text":"NSData","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData"},{"kind":"text","text":" *) "},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding"},{"kind":"text","text":") "},{"kind":"internalParam","text":"encoding"},{"text":" ","kind":"text"},{"text":"error:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * *) ","kind":"text"},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}]}],"name":"data"},{"content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"encoding"},{"content":[{"inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"text":" object describing the error. Pass in ","type":"text"},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}],"type":"paragraph"}],"name":"outError"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" could"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"outError"},{"text":" contains an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" that conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"text":"Example","level":3,"anchor":"Example","type":"heading"},{"code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","url":"\/documentation\/maplibre","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"role":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"text":" ","type":"text"},{"type":"text","text":"optional identifier and attributes."}],"title":"MLNShapeCollectionFeature","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","role":"symbol","kind":"symbol","abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"title":"shapeWithData:encoding:error:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"role":"symbol","title":"MLNShape","url":"\/documentation\/maplibre\/mlnshape","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}],"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}]}}}