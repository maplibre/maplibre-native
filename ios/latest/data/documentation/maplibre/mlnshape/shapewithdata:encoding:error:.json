{"abstract":[{"text":"Returns an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"sections":[],"metadata":{"modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"roleHeading":"Type Method","role":"symbol","title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"+ ("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","text":"MLNShape"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"shapeWithData:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData","text":"NSData"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"data"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding"},{"kind":"text","text":") "},{"kind":"internalParam","text":"encoding"},{"kind":"text","text":" "},{"kind":"identifier","text":"error:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}],"type":"paragraph"}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}]},{"name":"outError","content":[{"inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"type":"text","text":" "},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the problem."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" that conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":"."}]},{"type":"heading","text":"Example","level":3,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","role":"collection","kind":"symbol","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"title":"MLNShape","type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"text":" ","type":"text"},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"text":" ","type":"text"},{"text":"the content that forms the base map.","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"MLNShape"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","url":"\/documentation\/maplibre\/mlnshape","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","role":"symbol","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}],"title":"MLNShapeCollectionFeature","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","kind":"symbol","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"type":"topic","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"title":"shapeWithData:encoding:error:"}}}