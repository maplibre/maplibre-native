{"metadata":{"title":"shapeWithData:encoding:error:","symbolKind":"method","modules":[{"name":"MapLibre"}],"roleHeading":"Type Method","role":"symbol","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"kind":"symbol","abstract":[{"text":"Returns an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"text":"+ (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"shapeWithData:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSData","text":"NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"kind":"text","text":" "},{"text":"encoding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"encoding"},{"kind":"text","text":" "},{"text":"error:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * *) ","kind":"text"},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The encoding used by ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"encoding"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}]}],"name":"outError"}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":", or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"text":" ","type":"text"},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the problem."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If the GeoJSON object is a geometry, the returned value is a kind of","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" that conforms to the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" protocol. If it is a feature"},{"text":" ","type":"text"},{"type":"text","text":"collection object, the returned value is an instance of"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"type":"text","text":"."}]},{"text":"Example","level":3,"type":"heading","anchor":"Example"},{"syntax":"swift","type":"codeListing","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"title":"MLNShape","url":"\/documentation\/maplibre\/mlnshape","role":"symbol","type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","fragments":[{"text":"MLNShape","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","url":"\/documentation\/maplibre","type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","title":"shapeWithData:encoding:error:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"title":"MLNShapeCollectionFeature","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}]}}}