{"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"metadata":{"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","modules":[{"name":"MapLibre"}],"symbolKind":"method","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"title":"shapeWithData:encoding:error:","role":"symbol","roleHeading":"Type Method"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"+ ("},{"preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"shapeWithData:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"kind":"text","text":" *) "},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encoding:"},{"text":"(","kind":"text"},{"text":"NSStringEncoding","preciseIdentifier":"c:@T@NSStringEncoding","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"internalParam","text":"encoding"},{"kind":"text","text":" "},{"text":"error:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSError","text":"NSError","kind":"typeIdentifier"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"outError"},{"text":";","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}],"type":"paragraph"}],"name":"data"},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}]},{"name":"outError","content":[{"type":"paragraph","inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if ","type":"text"},{"code":"data","type":"codeVoice"},{"text":" could","type":"text"},{"type":"text","text":" "},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"code":"nil","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"outError"},{"type":"text","text":" contains an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"text":" object describing the problem.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" that conforms to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"text":"collection object, the returned value is an instance of","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Example","text":"Example","type":"heading"},{"code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"fragments":[{"text":"MLNShape","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshape","kind":"symbol","title":"MLNShape","role":"symbol","type":"topic","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic","abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"text":" ","type":"text"},{"type":"text","text":"optional identifier and attributes."}],"role":"symbol","title":"MLNShapeCollectionFeature","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"kind":"symbol","title":"shapeWithData:encoding:error:","role":"symbol","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","abstract":[{"text":"Returns an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}]}}}