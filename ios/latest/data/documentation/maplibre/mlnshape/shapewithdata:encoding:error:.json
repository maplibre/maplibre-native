{"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Type Method","title":"shapeWithData:encoding:error:","role":"symbol","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","fragments":[{"text":"+ ","kind":"text"},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"modules":[{"name":"MapLibre"}]},"abstract":[{"type":"text","text":"Returns an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"+ (","kind":"text"},{"text":"MLNShape","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"text":"shapeWithData:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSData","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSStringEncoding","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"error:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * *) ","kind":"text"},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}],"type":"paragraph"}],"name":"data"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]}],"name":"encoding"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}]}],"name":"outError"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object representation of "},{"code":"data","type":"codeVoice"},{"type":"text","text":", or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if "},{"code":"data","type":"codeVoice"},{"type":"text","text":" could"},{"type":"text","text":" "},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"type":"text","text":" object describing the problem."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" that conforms to the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Example","level":3,"type":"heading","anchor":"Example"},{"code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","role":"collection","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","title":"MLNShapeCollectionFeature","kind":"symbol","role":"symbol","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference","isActive":true},{"type":"text","text":" object associates a shape collection with an"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"kind":"symbol","title":"MLNShape","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"type":"text","text":"the content that forms the base map."}],"url":"\/documentation\/maplibre\/mlnshape","fragments":[{"kind":"identifier","text":"MLNShape"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"kind":"symbol","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","type":"topic","title":"shapeWithData:encoding:error:","abstract":[{"text":"Returns an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"role":"symbol"}}}