{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Type Method","symbolKind":"method","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","title":"shapeWithData:encoding:error:","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"role":"symbol"},"abstract":[{"type":"text","text":"Returns an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"text":"string containing a GeoJSON object.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"text":"+ (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"shapeWithData:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"data"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSStringEncoding","preciseIdentifier":"c:@T@NSStringEncoding"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"error:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSError","text":"NSError","kind":"typeIdentifier"},{"text":" * *) ","kind":"text"},{"text":"outError","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}],"type":"paragraph"}],"name":"data"},{"name":"encoding","content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSError"},{"text":" object describing the error. Pass in ","type":"text"},{"code":"NULL","type":"codeVoice"},{"text":" to ignore any error.","type":"text"}]}],"name":"outError"}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" object representation of "},{"code":"data","type":"codeVoice"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"text":" if ","type":"text"},{"code":"data","type":"codeVoice"},{"text":" could","type":"text"},{"text":" ","type":"text"},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"code":"outError","type":"codeVoice"},{"text":" contains an","type":"text"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"text":" object describing the problem.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"text":" that conforms to the ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"type":"text","text":"collection object, the returned value is an instance of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Example","type":"heading","level":3,"text":"Example"},{"syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"],"type":"codeListing"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"type":"topic","title":"shapeWithData:encoding:error:","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"type":"topic","url":"\/documentation\/maplibre\/mlnshape","fragments":[{"text":"MLNShape","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","role":"symbol","abstract":[{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"type":"text","text":" "},{"text":"the content that forms the base map.","type":"text"}],"title":"MLNShape"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","url":"\/documentation\/maplibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"kind":"symbol","title":"MLNShapeCollectionFeature","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"text":" object associates a shape collection with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}],"url":"\/documentation\/maplibre\/mlnshapecollectionfeature"}}}