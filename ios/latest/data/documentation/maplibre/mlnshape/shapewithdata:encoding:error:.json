{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" object initialized with the given data interpreted as a"},{"text":" ","type":"text"},{"type":"text","text":"string containing a GeoJSON object."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"role":"symbol","roleHeading":"Type Method","symbolKind":"method","fragments":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","modules":[{"name":"MapLibre"}],"title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}]},"kind":"symbol","identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"+ ("},{"kind":"typeIdentifier","text":"MLNShape","preciseIdentifier":"c:objc(cs)MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"shapeWithData:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSData","preciseIdentifier":"c:objc(cs)NSData"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"data"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"encoding","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"error:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"outError"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}],"type":"paragraph"}],"name":"data"},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"text":"The encoding used by ","type":"text"},{"code":"data","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"outError","content":[{"inlineContent":[{"text":"Upon return, if an error has occurred, a pointer to an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"text":" object describing the error. Pass in ","type":"text"},{"type":"codeVoice","code":"NULL"},{"text":" to ignore any error.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object representation of ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"type":"codeVoice","code":"data"},{"type":"text","text":" could"},{"type":"text","text":" "},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"type":"codeVoice","code":"outError"},{"text":" contains an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the problem."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" that conforms to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference"},{"type":"text","text":" protocol. If it is a feature"},{"text":" ","type":"text"},{"text":"collection object, the returned value is an instance of","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Example","type":"heading","text":"Example","level":3},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"type":"topic","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" is an abstract class that represents a shape or annotation. Shapes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnshape","fragments":[{"text":"MLNShape","kind":"identifier"}],"title":"MLNShape"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature"},{"text":" object associates a shape collection with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"optional identifier and attributes."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","fragments":[{"text":"MLNShapeCollectionFeature","kind":"identifier"}],"title":"MLNShapeCollectionFeature"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","type":"topic","title":"shapeWithData:encoding:error:","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","type":"reference","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}]}}}