{"abstract":[{"text":"Deletes the existing database, which includes both the ambient cache and","type":"text"},{"text":" ","type":"text"},{"text":"offline packs, then reinitializes it.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","interfaceLanguage":"occ"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":" (^"},{"text":")(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"text":" * ","kind":"text"},{"kind":"internalParam","text":"error"},{"text":")) ","kind":"text"},{"kind":"internalParam","text":"completion"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"name":"completion","content":[{"inlineContent":[{"type":"text","text":"The completion handler to call once the pack has database has"},{"text":" ","type":"text"},{"type":"text","text":"been reset. This handler is executed asynchronously on the main queue."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You typically do not need to call this method."}]}]}],"metadata":{"roleHeading":"Instance Method","externalID":"c:objc(cs)MLNOfflineStorage(im)resetDatabaseWithCompletionHandler:","modules":[{"name":"MapLibre"}],"symbolKind":"method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"resetDatabaseWithCompletionHandler:"}],"title":"resetDatabaseWithCompletionHandler:","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"resetDatabaseWithCompletionHandler:"}]},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/resetDatabaseWithCompletionHandler:":{"fragments":[{"text":"- ","kind":"text"},{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/resetdatabasewithcompletionhandler:","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/resetDatabaseWithCompletionHandler:","navigatorTitle":[{"text":"resetDatabaseWithCompletionHandler:","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Deletes the existing database, which includes both the ambient cache and"},{"type":"text","text":" "},{"text":"offline packs, then reinitializes it.","type":"text"}],"title":"resetDatabaseWithCompletionHandler:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"title":"MapLibre","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"title":"MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","kind":"symbol","fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}],"abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"type":"topic"}}}