{"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/databaseurl"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databaseURL"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":", "},{"kind":"keyword","text":"copy"},{"text":", ","kind":"text"},{"text":"readonly","kind":"keyword"},{"text":") ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSURL","kind":"typeIdentifier","text":"NSURL"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"databaseURL"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To customize this path, specify the"},{"type":"text","text":" "},{"type":"codeVoice","code":"MLNOfflineStorageDatabasePath"},{"type":"text","text":" key in Info.plist, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Info.plist_Keys"},{"type":"text","text":"."}]}]}],"sections":[],"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","symbolKind":"property","title":"databaseURL","externalID":"c:objc(cs)MLNOfflineStorage(py)databaseURL","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"databaseURL"}],"fragments":[{"text":"databaseURL","kind":"identifier"}]},"abstract":[{"text":"The file URL at which offline packs and the ambient cache are stored.","type":"text"}],"kind":"symbol","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/databaseURL":{"fragments":[{"kind":"identifier","text":"databaseURL"}],"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnofflinestorage\/databaseurl","title":"databaseURL","role":"symbol","abstract":[{"type":"text","text":"The file URL at which offline packs and the ambient cache are stored."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databaseURL"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"role":"symbol","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"type":"topic","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","title":"MLNOfflineStorage","kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/Info.plist_Keys":{"kind":"article","title":"Info.plist Keys","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Info.plist_Keys","url":"\/documentation\/maplibre-native-for-ios\/info.plist_keys","abstract":[{"type":"text","text":"MapLibre Native for iOS supports custom "},{"code":"Info.plist","type":"codeVoice"},{"type":"text","text":" keys in your application in order to configure various settings."}],"type":"topic","role":"article"}}}