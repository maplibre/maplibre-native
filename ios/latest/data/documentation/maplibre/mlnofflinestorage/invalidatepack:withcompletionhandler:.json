{"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidatepack:withcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"text":"invalidatePack:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLNOfflinePack","text":"MLNOfflinePack","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflinePack"},{"text":" *) ","kind":"text"},{"text":"pack","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"withCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":" (^","kind":"text"},{"kind":"text","text":")("},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * "},{"text":"","kind":"internalParam"},{"text":")) ","kind":"text"},{"kind":"internalParam","text":"completion"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The offline pack to be invalidated."}]}],"name":"pack"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The completion handler to call once the pack has been"},{"text":" ","type":"text"},{"type":"text","text":"removed. This handler is executed asynchronously on the main queue."}]}],"name":"completion"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This is more efficient than deleting the offline pack and downloading it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"again. If the data stored locally matches that on the server, new data will"},{"type":"text","text":" "},{"text":"not be downloaded.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidatePack:withCompletionHandler:","interfaceLanguage":"occ"},"sections":[],"abstract":[{"type":"text","text":"Invalidates the specified offline pack. This method checks that the tiles"},{"type":"text","text":" "},{"text":"in the specified offline pack match those from the server. Local tiles that","type":"text"},{"text":" ","type":"text"},{"text":"do not match the latest version on the server are updated.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"title":"invalidatePack:withCompletionHandler:","fragments":[{"kind":"text","text":"- "},{"text":"invalidatePack:withCompletionHandler:","kind":"identifier"}],"symbolKind":"method","modules":[{"name":"MapLibre"}],"role":"symbol","roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"invalidatePack:withCompletionHandler:"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidatePack:withCompletionHandler:"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidatePack:withCompletionHandler:":{"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"invalidatePack:withCompletionHandler:"}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidatepack:withcompletionhandler:","title":"invalidatePack:withCompletionHandler:","type":"topic","abstract":[{"type":"text","text":"Invalidates the specified offline pack. This method checks that the tiles"},{"text":" ","type":"text"},{"text":"in the specified offline pack match those from the server. Local tiles that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"do not match the latest version on the server are updated."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"invalidatePack:withCompletionHandler:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidatePack:withCompletionHandler:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}],"type":"topic","title":"MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflinePack":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinepack","type":"topic","role":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflinePack"},{"text":" represents a collection of resources necessary for viewing","type":"text"},{"type":"text","text":" "},{"text":"a region offline to a local database.","type":"text"}],"fragments":[{"text":"MLNOfflinePack","kind":"identifier"}],"title":"MLNOfflinePack","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflinePack"},"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","kind":"symbol","title":"MapLibre","type":"topic","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}