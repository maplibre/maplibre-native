{"metadata":{"roleHeading":"Instance Method","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","modules":[{"name":"MapLibre"}],"title":"invalidateAmbientCacheWithCompletionHandler:","fragments":[{"kind":"text","text":"- "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"symbolKind":"method","role":"symbol"},"abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"text":" ","type":"text"},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"text":") ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":" (^"},{"text":")(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"text":" * ","kind":"text"},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}]}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"type":"text","text":" "},{"type":"text","text":"because valid local tiles will not be downloaded again."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Resources shared with offline packs will not be affected by this method."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","role":"collection","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","type":"topic","url":"\/documentation\/maplibre\/mlnofflinestorage","kind":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"text":" property.","type":"text"}],"title":"MLNOfflineStorage"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","type":"topic","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","title":"invalidateAmbientCacheWithCompletionHandler:","fragments":[{"kind":"text","text":"- "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"text":"those on the server, they are re-downloaded.","type":"text"}]}}}