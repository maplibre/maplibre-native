{"abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"type":"text","text":"those on the server, they are re-downloaded."}],"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":") "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":" (^)("},{"preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier","text":"NSError"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"text":"been revalidated. This handler is executed asynchronously on the main queue.","type":"text"}]}],"name":"completion"}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"text":" ","type":"text"},{"text":"because valid local tiles will not be downloaded again.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Resources shared with offline packs will not be affected by this method."}]}],"kind":"content"}],"metadata":{"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"role":"symbol","title":"invalidateAmbientCacheWithCompletionHandler:","roleHeading":"Instance Method","modules":[{"name":"MapLibre"}],"symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"title":"invalidateAmbientCacheWithCompletionHandler:","abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"type":"text","text":"those on the server, they are re-downloaded."}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","type":"topic","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","role":"collection","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"title":"MLNOfflineStorage","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"type":"topic","url":"\/documentation\/maplibre\/mlnofflinestorage","role":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"code":"packs","type":"codeVoice"},{"text":" property.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"}}}