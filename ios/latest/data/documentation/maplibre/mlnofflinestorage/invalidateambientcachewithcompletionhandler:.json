{"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"type":"text","text":"those on the server, they are re-downloaded."}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"fragments":[{"kind":"text","text":"- "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"roleHeading":"Instance Method","symbolKind":"method","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"role":"symbol","title":"invalidateAmbientCacheWithCompletionHandler:","externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":" (^","kind":"text"},{"text":")(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier","text":"NSError"},{"text":" * ","kind":"text"},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}],"type":"paragraph"}],"name":"completion"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is recommended over clearing the cache or resetting the database"},{"type":"text","text":" "},{"text":"because valid local tiles will not be downloaded again.","type":"text"}]},{"inlineContent":[{"text":"Resources shared with offline packs will not be affected by this method.","type":"text"}],"type":"paragraph"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","role":"collection","title":"MapLibre","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"role":"symbol","abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","title":"invalidateAmbientCacheWithCompletionHandler:","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"role":"symbol","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","title":"MLNOfflineStorage","type":"topic","abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"type":"text","text":" "},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}]}}}