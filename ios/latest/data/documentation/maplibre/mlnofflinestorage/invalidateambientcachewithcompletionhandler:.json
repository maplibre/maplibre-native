{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","roleHeading":"Instance Method","title":"invalidateAmbientCacheWithCompletionHandler:","symbolKind":"method"},"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"text":" ","type":"text"},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"kind":"text","text":") "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:v","text":"void"},{"kind":"text","text":" (^)("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"text":"been revalidated. This handler is executed asynchronously on the main queue.","type":"text"}],"type":"paragraph"}],"name":"completion"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"text":" ","type":"text"},{"text":"because valid local tiles will not be downloaded again.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Resources shared with offline packs will not be affected by this method."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"kind":"symbol","fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}],"title":"MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","role":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"text":" property.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","kind":"symbol","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"kind":"symbol","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"type":"text","text":"those on the server, they are re-downloaded."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","role":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"title":"invalidateAmbientCacheWithCompletionHandler:"}}}