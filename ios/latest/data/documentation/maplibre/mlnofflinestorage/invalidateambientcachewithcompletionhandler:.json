{"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","symbolKind":"method","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"title":"invalidateAmbientCacheWithCompletionHandler:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"modules":[{"name":"MapLibre"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"text":" ","type":"text"},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:v","text":"void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"text":" (^","kind":"text"},{"kind":"text","text":")("},{"preciseIdentifier":"c:objc(cs)NSError","text":"NSError","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"completion","content":[{"inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"type":"text","text":" "},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This is recommended over clearing the cache or resetting the database"},{"type":"text","text":" "},{"type":"text","text":"because valid local tiles will not be downloaded again."}],"type":"paragraph"},{"inlineContent":[{"text":"Resources shared with offline packs will not be affected by this method.","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"type":"text","text":" "},{"text":"those on the server, they are re-downloaded.","type":"text"}],"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"title":"invalidateAmbientCacheWithCompletionHandler:","url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","type":"topic","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"role":"symbol","fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}],"kind":"symbol","abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"type":"text","text":" "},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"type":"text","text":" "},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"code":"packs","type":"codeVoice"},{"type":"text","text":" property."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage","title":"MLNOfflineStorage","type":"topic"}}}