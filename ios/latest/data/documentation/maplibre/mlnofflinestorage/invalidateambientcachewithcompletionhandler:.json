{"metadata":{"title":"invalidateAmbientCacheWithCompletionHandler:","modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"roleHeading":"Instance Method","role":"symbol","externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"text":" ","type":"text"},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"kind":"text","text":" (^)("},{"kind":"typeIdentifier","text":"NSError","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}]}]},{"kind":"parameters","parameters":[{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The completion handler to call once the ambient cache has"},{"type":"text","text":" "},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"text":" ","type":"text"},{"text":"because valid local tiles will not be downloaded again.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Resources shared with offline packs will not be affected by this method."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"title":"invalidateAmbientCacheWithCompletionHandler:","url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"text":" ","type":"text"},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","kind":"symbol","title":"MLNOfflineStorage","role":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage","type":"topic","abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"type":"codeVoice","code":"packs"},{"type":"text","text":" property."}],"fragments":[{"kind":"identifier","text":"MLNOfflineStorage"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection","title":"MapLibre","kind":"symbol"}}}