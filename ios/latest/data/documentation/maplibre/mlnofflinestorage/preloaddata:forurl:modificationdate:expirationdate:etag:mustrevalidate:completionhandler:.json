{"metadata":{"role":"symbol","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","title":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:"}],"navigatorTitle":[{"text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","kind":"identifier"}],"externalID":"c:objc(cs)MLNOfflineStorage(im)preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"sections":[],"kind":"symbol","abstract":[{"text":"Inserts the provided resource into the ambient cache, calling a completion","type":"text"},{"type":"text","text":" "},{"type":"text","text":"handler when finished."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/preloaddata:forurl:modificationdate:expirationdate:etag:mustrevalidate:completionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","interfaceLanguage":"occ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"kind":"identifier","text":"preloadData:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forURL:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSURL","preciseIdentifier":"c:objc(cs)NSURL"},{"text":" *) ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"modificationDate:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSDate","text":"NSDate"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"modified"},{"text":" ","kind":"text"},{"text":"expirationDate:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSDate","text":"NSDate"},{"kind":"text","text":" *) "},{"text":"expires","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eTag:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"eTag","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"mustRevalidate:","kind":"identifier"},{"kind":"text","text":"("},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"mustRevalidate"},{"kind":"text","text":" "},{"kind":"identifier","text":"completionHandler:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:BFv(#*$objc(cs)NSURL#*$objc(cs)NSError)","text":"void (^)(NSURL *, NSError *)","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"Response data to store for this resource. The data is expected to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be uncompressed; internally, the cache will compress data as necessary."}]}]},{"name":"url","content":[{"inlineContent":[{"type":"text","text":"The URL at which the data can normally be found."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The date the resource was last modified."}]}],"name":"modified"},{"name":"expires","content":[{"type":"paragraph","inlineContent":[{"text":"The date after which the resource is no longer valid.","type":"text"}]}]},{"name":"eTag","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An HTTP entity tag."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A Boolean value indicating whether the data is still"},{"type":"text","text":" "},{"type":"text","text":"usable past the expiration date."}],"type":"paragraph"}],"name":"mustRevalidate"},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"The completion handler to call once the data has been","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preloaded. This handler is executed asynchronously on the main queue."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This method is asynchronous. The data is available for in-progress requests as","type":"text"},{"type":"text","text":" "},{"text":"soon as the completion handler is called.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is asynchronous; the data may not be immediately available for"},{"type":"text","text":" "},{"text":"in-progress requests, though subsequent requests should have access to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"cached data."}]}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:":{"navigatorTitle":[{"kind":"identifier","text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:"}],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:"}],"kind":"symbol","abstract":[{"text":"Inserts the provided resource into the ambient cache, calling a completion","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"handler when finished."}],"type":"topic","url":"\/documentation\/maplibre\/mlnofflinestorage\/preloaddata:forurl:modificationdate:expirationdate:etag:mustrevalidate:completionhandler:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","title":"preloadData:forURL:modificationDate:expirationDate:eTag:mustRevalidate:completionHandler:","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"title":"MLNOfflineStorage","kind":"symbol","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"type":"text","text":" "},{"type":"text","text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,"},{"type":"text","text":" "},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"text":" property.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","url":"\/documentation\/maplibre\/mlnofflinestorage","type":"topic","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","title":"MapLibre","kind":"symbol","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}]}}}