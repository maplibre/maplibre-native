{"sections":[],"primaryContentSections":[{"content":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses SwiftUI."}]}],"type":"aside","style":"note","name":"Note"},{"inlineContent":[{"text":"To constrain the map to a certain area, you need to implement the ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:","type":"reference","isActive":true},{"text":" method of ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference","isActive":true},{"text":". By returning a boolean you can either allow or disallow a camera change.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Denver, Colorado","private let center = CLLocationCoordinate2D(latitude: 39.748947, longitude: -104.995882)","","\/\/ Colorado’s bounds","private let colorado = MLNCoordinateBounds(","    sw: CLLocationCoordinate2D(latitude: 36.986207, longitude: -109.049896),","    ne: CLLocationCoordinate2D(latitude: 40.989329, longitude: -102.062592)",")","","struct BlockingGesturesExample: UIViewRepresentable {","    class Coordinator: NSObject, MLNMapViewDelegate {","        func mapView(_ mapView: MLNMapView, shouldChangeFrom _: MLNMapCamera, to newCamera: MLNMapCamera) -> Bool {","            \/\/ Get the current camera to restore it after.","            let currentCamera = mapView.camera","","            \/\/ From the new camera obtain the center to test if it’s inside the boundaries.","            let newCameraCenter = newCamera.centerCoordinate","","            \/\/ Set the map’s visible bounds to newCamera.","            mapView.camera = newCamera","            let newVisibleCoordinates = mapView.visibleCoordinateBounds","","            \/\/ Revert the camera.","            mapView.camera = currentCamera","","            \/\/ Test if the newCameraCenter and newVisibleCoordinates are inside self.colorado.","            let inside = MLNCoordinateInCoordinateBounds(newCameraCenter, colorado)","            let intersects = MLNCoordinateInCoordinateBounds(newVisibleCoordinates.ne, colorado) && MLNCoordinateInCoordinateBounds(newVisibleCoordinates.sw, colorado)","","            return inside && intersects","        }","    }","","    func makeUIView(context: Context) -> MLNMapView {","        let mapView = MLNMapView(frame: .zero, styleURL: VERSATILES_COLORFUL_STYLE)","        mapView.setCenter(center, zoomLevel: 10, direction: 0, animated: false)","        mapView.delegate = context.coordinator","","        return mapView","    }","","    func updateUIView(_: MLNMapView, context _: Context) {}","","    func makeCoordinator() -> Coordinator {","        Coordinator()","    }","}"]},{"inlineContent":[{"text":"The style used in this example can be found here: ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/ExampleStyles","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/blockinggesturesexample"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","interfaceLanguage":"occ"},"metadata":{"role":"article","title":"Blocking Gestures","modules":[{"name":"MapLibre"}],"roleHeading":"Article"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample"],"generated":true,"title":"Map Interaction","anchor":"Map-Interaction"}],"abstract":[{"type":"text","text":"Constrain the map to a certain area."}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","url":"\/documentation\/maplibre"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/LineOnUserTap":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","title":"Add Line on User Tap","abstract":[{"type":"text","text":"Demonstrating adding "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline"},{"type":"text","text":" annotations and responding to user input."}],"kind":"article","type":"topic","url":"\/documentation\/maplibre-native-for-ios\/lineonusertap","role":"article"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/ExampleStyles":{"title":"Styles in Examples","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/ExampleStyles","type":"topic","url":"\/documentation\/maplibre-native-for-ios\/examplestyles","abstract":[{"type":"text","text":"The following styles are used in the examples:"}],"role":"article"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPolyline":{"abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","type":"reference"},{"text":" object represents a shape consisting of two or more vertices,","type":"text"},{"text":" ","type":"text"},{"text":"specified as ","type":"text"},{"code":"CLLocationCoordinate2D","type":"codeVoice"},{"text":" instances, and the line segments that","type":"text"},{"text":" ","type":"text"},{"text":"connect them. For example, you could use an polyline to represent a road or the","type":"text"},{"text":" ","type":"text"},{"text":"path along which something moves.","type":"text"}],"fragments":[{"text":"MLNPolyline","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnpolyline","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","kind":"symbol","role":"symbol","type":"topic","title":"MLNPolyline"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"kind":"symbol","type":"topic","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BuildingLightExample":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample","kind":"article","abstract":[{"text":"Add a fill extrustion layer and adjust the light dynamically with a slider.","type":"text"}],"role":"article","url":"\/documentation\/maplibre-native-for-ios\/buildinglightexample","type":"topic","title":"Fill Extrustion Layer"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"abstract":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"text":"require the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","title":"MLNMapViewDelegate","url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:shouldChangeFromCamera:toCamera:":{"navigatorTitle":[{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"role":"symbol","type":"topic","kind":"symbol","title":"mapView:shouldChangeFromCamera:toCamera:","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:shouldchangefromcamera:tocamera:","abstract":[{"type":"text","text":"Asks the delegate whether the map view should be allowed to change from the"},{"type":"text","text":" "},{"type":"text","text":"existing camera to the new camera in response to a user gesture."}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:shouldChangeFromCamera:toCamera:"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:shouldChangeFromCamera:toCamera:"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/AnnotationViewExample":{"url":"\/documentation\/maplibre-native-for-ios\/annotationviewexample","abstract":[{"text":"Add a custom annotation view","type":"text"}],"type":"topic","title":"Custom Annotation View","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample","role":"article"}}}