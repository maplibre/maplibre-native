{"kind":"article","variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/lineonusertap"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"abstract":[{"type":"text","text":"Demonstrating adding "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","type":"reference"},{"type":"text","text":" annotations and responding to user input."}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample"],"title":"Map Interaction"}],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"MapLibre"}],"title":"Add Line on User Tap"},"primaryContentSections":[{"content":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses SwiftUI."}]}],"type":"aside","style":"note","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example draws a line from the tapped location to the center of the map. Handling the tap is done by the "},{"code":"Coordinator","type":"codeVoice"},{"type":"text","text":" class. It converts the location on the view to a geographic coordinate. It removes existing annotations before adding the new line."}]},{"syntax":"swift","type":"codeListing","code":["struct LineTapMap: UIViewRepresentable {","    func makeUIView(context: Context) -> MLNMapView {","        let mapView = MLNMapView()","","        \/\/ Add a single tap gesture recognizer","        let singleTap = UITapGestureRecognizer(","            target: context.coordinator,","            action: #selector(Coordinator.handleMapTap(sender:))","        )","        for recognizer in mapView.gestureRecognizers! where recognizer is UITapGestureRecognizer {","            singleTap.require(toFail: recognizer)","        }","        mapView.addGestureRecognizer(singleTap)","        return mapView","    }","","    func updateUIView(_: MLNMapView, context _: Context) {}","","    func makeCoordinator() -> Coordinator {","        Coordinator(self)","    }","","    class Coordinator: NSObject {","        var parent: LineTapMap","","        init(_ parent: LineTapMap) {","            self.parent = parent","        }","","        @objc func handleMapTap(sender: UITapGestureRecognizer) {","            guard let mapView = sender.view as? MLNMapView else { return }","","            \/\/ Convert tap location (CGPoint) to geographic coordinate (CLLocationCoordinate2D).","            let tapPoint: CGPoint = sender.location(in: mapView)","            let tapCoordinate: CLLocationCoordinate2D = mapView.convert(tapPoint, toCoordinateFrom: nil)","            print(\"You tapped at: \\(tapCoordinate.latitude), \\(tapCoordinate.longitude)\")","","            \/\/ Create an array of coordinates for our polyline, starting at the center of the map and ending at the tap coordinate.","            var coordinates: [CLLocationCoordinate2D] = [mapView.centerCoordinate, tapCoordinate]","","            \/\/ Remove any existing polyline(s) from the map.","            if let existingAnnotations = mapView.annotations {","                mapView.removeAnnotations(existingAnnotations)","            }","","            \/\/ Add a polyline with the new coordinates.","            let polyline = MLNPolyline(coordinates: &coordinates, count: UInt(coordinates.count))","            mapView.addAnnotation(polyline)","        }","    }","}"]},{"inlineContent":[{"identifier":"polyline.gif","type":"image"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"url":"\/documentation\/maplibre","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Constrain the map to a certain area."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample","title":"Blocking Gestures"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPolyline":{"title":"MLNPolyline","fragments":[{"kind":"identifier","text":"MLNPolyline"}],"kind":"symbol","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","isActive":true},{"type":"text","text":" object represents a shape consisting of two or more vertices,"},{"text":" ","type":"text"},{"type":"text","text":"specified as "},{"code":"CLLocationCoordinate2D","type":"codeVoice"},{"type":"text","text":" instances, and the line segments that"},{"text":" ","type":"text"},{"type":"text","text":"connect them. For example, you could use an polyline to represent a road or the"},{"type":"text","text":" "},{"type":"text","text":"path along which something moves."}],"url":"\/documentation\/maplibre\/mlnpolyline","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","type":"topic","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BuildingLightExample":{"role":"article","abstract":[{"type":"text","text":"Add a fill extrustion layer and adjust the light dynamically with a slider."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/buildinglightexample","title":"Fill Extrustion Layer"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/AnnotationViewExample":{"url":"\/documentation\/maplibre-native-for-ios\/annotationviewexample","kind":"article","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample","role":"article","title":"Custom Annotation View","abstract":[{"type":"text","text":"Add a custom annotation view"}]},"polyline.gif":{"alt":null,"type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/polyline@2x.gif"}],"identifier":"polyline.gif"}}}