{"seeAlsoSections":[{"title":"Map Interaction","identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample"],"generated":true}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"text":"This example uses SwiftUI.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"This example draws a line from the tapped location to the center of the map. Handling the tap is done by the ","type":"text"},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" class. It converts the location on the view to a geographic coordinate. It removes existing annotations before adding the new line."}]},{"syntax":"swift","type":"codeListing","code":["struct LineTapMap: UIViewRepresentable {","    func makeUIView(context: Context) -> MLNMapView {","        let mapView = MLNMapView()","","        \/\/ Add a single tap gesture recognizer","        let singleTap = UITapGestureRecognizer(","            target: context.coordinator,","            action: #selector(Coordinator.handleMapTap(sender:))","        )","        for recognizer in mapView.gestureRecognizers! where recognizer is UITapGestureRecognizer {","            singleTap.require(toFail: recognizer)","        }","        mapView.addGestureRecognizer(singleTap)","        return mapView","    }","","    func updateUIView(_: MLNMapView, context _: Context) {}","","    func makeCoordinator() -> Coordinator {","        Coordinator(self)","    }","","    class Coordinator: NSObject {","        var parent: LineTapMap","","        init(_ parent: LineTapMap) {","            self.parent = parent","        }","","        @objc func handleMapTap(sender: UITapGestureRecognizer) {","            guard let mapView = sender.view as? MLNMapView else { return }","","            \/\/ Convert tap location (CGPoint) to geographic coordinate (CLLocationCoordinate2D).","            let tapPoint: CGPoint = sender.location(in: mapView)","            let tapCoordinate: CLLocationCoordinate2D = mapView.convert(tapPoint, toCoordinateFrom: nil)","            print(\"You tapped at: \\(tapCoordinate.latitude), \\(tapCoordinate.longitude)\")","","            \/\/ Create an array of coordinates for our polyline, starting at the center of the map and ending at the tap coordinate.","            var coordinates: [CLLocationCoordinate2D] = [mapView.centerCoordinate, tapCoordinate]","","            \/\/ Remove any existing polyline(s) from the map.","            if let existingAnnotations = mapView.annotations {","                mapView.removeAnnotations(existingAnnotations)","            }","","            \/\/ Add a polyline with the new coordinates.","            let polyline = MLNPolyline(coordinates: &coordinates, count: UInt(coordinates.count))","            mapView.addAnnotation(polyline)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"polyline.gif"}]}]}],"variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/lineonusertap"],"traits":[{"interfaceLanguage":"occ"}]}],"abstract":[{"text":"Demonstrating adding ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline"},{"type":"text","text":" annotations and responding to user input."}],"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"MapLibre"}],"title":"Add Line on User Tap"},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"type":"topic","abstract":[{"text":"Constrain the map to a certain area.","type":"text"}],"title":"Blocking Gestures","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","kind":"article","role":"article","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/AnnotationViewExample":{"url":"\/documentation\/maplibre-native-for-ios\/annotationviewexample","kind":"article","type":"topic","title":"Custom Annotation View","role":"article","abstract":[{"type":"text","text":"Add a custom annotation view"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPolyline":{"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","title":"MLNPolyline","type":"topic","kind":"symbol","url":"\/documentation\/maplibre\/mlnpolyline","fragments":[{"kind":"identifier","text":"MLNPolyline"}],"abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline"},{"text":" object represents a shape consisting of two or more vertices,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified as "},{"type":"codeVoice","code":"CLLocationCoordinate2D"},{"text":" instances, and the line segments that","type":"text"},{"type":"text","text":" "},{"text":"connect them. For example, you could use an polyline to represent a road or the","type":"text"},{"type":"text","text":" "},{"text":"path along which something moves.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BuildingLightExample":{"title":"Fill Extrustion Layer","abstract":[{"text":"Add a fill extrustion layer and adjust the light dynamically with a slider.","type":"text"}],"type":"topic","role":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample","url":"\/documentation\/maplibre-native-for-ios\/buildinglightexample","kind":"article"},"polyline.gif":{"identifier":"polyline.gif","type":"image","alt":null,"variants":[{"traits":["2x","light"],"url":"\/images\/polyline@2x.gif"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol","role":"collection","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","type":"topic"}}}