{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Info.plist_Keys"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre-native-for-ios\/info.plist_keys"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","sections":[],"metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Article","title":"Info.plist Keys","role":"article"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"MLNApiKey","type":"heading","text":"MLNApiKey","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If it is required by the tileserver you use, set the API key to be used by all instances of "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" in the current application."}]},{"anchor":"MLNAccuracyAuthorizationDescription","type":"heading","text":"MLNAccuracyAuthorizationDescription","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set the accuracy authorization description string as an element of "},{"type":"codeVoice","code":"NSLocationTemporaryUsageDescriptionDictionary"},{"type":"text","text":" to be used by the map to request authorization when the "},{"type":"codeVoice","code":"MLNLocationManager.accuracyAuthorization"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":"CLAccuracyAuthorizationReducedAccuracy"},{"type":"text","text":". Requesting accuracy authorization is available for devices running iOS 14.0 and above."}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"type":"codeListing","syntax":"xml","code":["<key>NSLocationTemporaryUsageDescriptionDictionary<\/key>"," <dict>","  <key>MLNAccuracyAuthorizationDescription<\/key>","  <string>We require your precise location to help you navigate the map.<\/string>"," <\/dict>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove "},{"type":"codeVoice","code":"MLNAccuracyAuthorizationDescription"},{"type":"text","text":" if you want to control when to request for accuracy authorization."}]},{"anchor":"MLNIdeographicFontFamilyName","type":"heading","text":"MLNIdeographicFontFamilyName","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This key configures a global fallback font or fonts for "},{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"client-side text rendering"}],"overridingTitle":"client-side text rendering","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Customizing_Fonts"},{"type":"text","text":" of Chinese hanzi, Japanese kana, and Korean hangul characters (CJK) that appear in text labels."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the fonts you specify in the "},{"type":"codeVoice","code":"MLNSymbolStyleLayer.textFontNames"},{"type":"text","text":" property are all unavailable or lack a glyph for rendering a given CJK character, the map uses the contents of this key to choose a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/fonts\/system-fonts\/"},{"type":"text","text":" or a font "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/text_display_and_fonts\/adding_a_custom_font_to_your_app"},{"type":"text","text":". This key specifies a fallback for all style layers in all map views and map snapshots. If you do not specify this key or none of the font names matches, the map applies a font from the system’s font cascade list, which may vary based on the device model and system language."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This key can either be set to a single string or an array of strings, which the map tries to apply in order from most preferred to least preferred. Each string can be a family name (for example, “PingFang TC”), display name (“PingFang TC Ultralight”), or PostScript name (“PingFangTC-Ultralight”)."}]},{"type":"paragraph","inlineContent":[{"text":"To disable client-side rendering of CJK characters in favor of ","type":"text"},{"identifier":"customizing-fonts.html#server-side-fonts","isActive":true,"type":"reference"},{"text":", set this key to the Boolean value ","type":"text"},{"code":"NO","type":"codeVoice"},{"text":".","type":"text"}]},{"anchor":"MLNOfflineStorageDatabasePath","type":"heading","text":"MLNOfflineStorageDatabasePath","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This key customizes the file path at which "},{"type":"codeVoice","code":"MLNOfflineStorage"},{"type":"text","text":" keeps the offline map database, which contains any offline packs as well as the ambient cache. Most applications should not need to customize this path; however, you could customize it to implement a migration path between different versions of your application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The key is interpreted as either an absolute file path or a file path relative to the main bundle’s resource folder, resolving any tilde or symbolic link. The path must be writable. If a database does not exist at the path you specify, one will be created automatically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An offline map database can consume a significant amount of the user’s bandwidth and iCloud storage due to iCloud backups. To exclude the database from backups, set the containing directory’s "},{"type":"codeVoice","code":"NSURLIsExcludedFromBackupKey"},{"type":"text","text":" resource property to the Boolean value "},{"type":"codeVoice","code":"YES"},{"type":"text","text":" using the "},{"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/nsurl\/1413819-setresourcevalue","type":"reference","isActive":true},{"type":"text","text":" method. The entire directory will be affected, not just the database file. If the user restores the application from a backup, your application will need to restore any offline packs that had been previously downloaded."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At runtime, you can obtain the value of this key using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databasePath"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databaseURL"},{"type":"text","text":" properties."}]},{"anchor":"MLNCollisionBehaviorPre40","type":"heading","text":"MLNCollisionBehaviorPre4_0","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this key is set to YES ("},{"type":"codeVoice","code":"true"},{"type":"text","text":"), collision detection is performed only between symbol style layers based on the same source, as in versions 2.0–3.7 of the MapLibre Native iOS. In other words, symbols in an "},{"type":"codeVoice","code":"MLNSymbolStyleLayer"},{"type":"text","text":" based on one source (for example, an "},{"type":"codeVoice","code":"MLNShapeSource"},{"type":"text","text":") may overlap with symbols in another layer that is based on a different source. This is the case regardless of the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconAllowsOverlap","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconIgnoresPlacement","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textAllowsOverlap","isActive":true},{"type":"text","text":", and "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textIgnoresPlacement","isActive":true},{"type":"text","text":" properties."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Beginning in version 4.0, the SDK also performs collision detection between style layers based on different sources by default. For the default behavior, omit the "},{"code":"MLNCollisionBehaviorPre4_0","type":"codeVoice"},{"type":"text","text":" key or set it to NO ("},{"code":"false","type":"codeVoice"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"text":"This property may also be set using ","type":"text"},{"code":"[[NSUserDefaults standardUserDefaults] setObject:@(YES) forKey:@\"MLNCollisionBehaviorPre4_0\"]","type":"codeVoice"},{"text":"; it will override any value specified in the ","type":"text"},{"code":"Info.plist","type":"codeVoice"},{"text":".","type":"text"}]}]}],"abstract":[{"text":"MapLibre Native for iOS supports custom ","type":"text"},{"code":"Info.plist","type":"codeVoice"},{"text":" keys in your application in order to configure various settings.","type":"text"}],"seeAlsoSections":[{"title":"Other Articles","generated":true,"anchor":"Other-Articles","identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Customizing_Fonts","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/GestureRecognizers","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/MultipleImagesExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Predicates_and_Expressions","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Tile_URL_Templates","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/For_Style_Authors"]}],"references":{"https://developer.apple.com/documentation/foundation/nsurl/1413819-setresourcevalue":{"titleInlineContent":[{"type":"codeVoice","code":"NSURL\/setResourceValue:forKey:error:"}],"type":"link","title":"NSURL\/setResourceValue:forKey:error:","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/nsurl\/1413819-setresourcevalue","url":"https:\/\/developer.apple.com\/documentation\/foundation\/nsurl\/1413819-setresourcevalue"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/Predicates_and_Expressions":{"abstract":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"NSPredicate"},{"type":"text","text":" with MapLibre iOS"}],"type":"topic","title":"Predicates and expressions","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Predicates_and_Expressions","url":"\/documentation\/maplibre-native-for-ios\/predicates_and_expressions","role":"article"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/MultipleImagesExample":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/MultipleImagesExample","url":"\/documentation\/maplibre-native-for-ios\/multipleimagesexample","kind":"article","title":"Adding Multiple Images","role":"article","abstract":[{"type":"text","text":"Adding images to the map and assigning them to POI types"}]},"customizing-fonts.html#server-side-fonts":{"titleInlineContent":[{"text":"server-side rendering","type":"text"}],"type":"link","title":"server-side rendering","identifier":"customizing-fonts.html#server-side-fonts","url":"customizing-fonts.html#server-side-fonts"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/Tile_URL_Templates":{"type":"topic","kind":"article","abstract":[{"type":"text","text":"Using URL Templates when defining tile sources"}],"title":"Tile URL Templates","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Tile_URL_Templates","role":"article","url":"\/documentation\/maplibre-native-for-ios\/tile_url_templates"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","kind":"symbol","title":"MLNMapView","url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"role":"symbol","fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/databasePath":{"fragments":[{"text":"databasePath","kind":"identifier"}],"title":"databasePath","kind":"symbol","abstract":[{"type":"text","text":"The file path at which offline packs and the ambient cache are stored."}],"type":"topic","url":"\/documentation\/maplibre\/mlnofflinestorage\/databasepath","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databasePath","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/GestureRecognizers":{"abstract":[{"text":"Learn how to work with gesture recognizers","type":"text"}],"url":"\/documentation\/maplibre-native-for-ios\/gesturerecognizers","title":"User Interactions","type":"topic","role":"article","kind":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/GestureRecognizers"},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/For_Style_Authors":{"abstract":[],"url":"\/documentation\/maplibre-native-for-ios\/for_style_authors","role":"article","kind":"article","title":"Information for Style Authors","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/For_Style_Authors"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/Customizing_Fonts":{"title":"Customizing Fonts","url":"\/documentation\/maplibre-native-for-ios\/customizing_fonts","role":"article","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/Customizing_Fonts","type":"topic","kind":"article","abstract":[{"text":"Using custom fonts","type":"text"}]},"https://developer.apple.com/fonts/system-fonts/":{"titleInlineContent":[{"text":"system font","type":"text"}],"type":"link","title":"system font","identifier":"https:\/\/developer.apple.com\/fonts\/system-fonts\/","url":"https:\/\/developer.apple.com\/fonts\/system-fonts\/"},"https://developer.apple.com/documentation/uikit/text_display_and_fonts/adding_a_custom_font_to_your_app":{"titleInlineContent":[{"text":"bundled with your application","type":"text"}],"type":"link","title":"bundled with your application","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/text_display_and_fonts\/adding_a_custom_font_to_your_app","url":"https:\/\/developer.apple.com\/documentation\/uikit\/text_display_and_fonts\/adding_a_custom_font_to_your_app"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textAllowsOverlap":{"fragments":[{"text":"textAllowsOverlap","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textallowsoverlap","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textAllowsOverlap","kind":"symbol","role":"symbol","type":"topic","title":"textAllowsOverlap","abstract":[{"text":"If true, the text will be visible even if it collides with other previously","type":"text"},{"text":" ","type":"text"},{"text":"drawn symbols.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/iconIgnoresPlacement":{"kind":"symbol","type":"topic","title":"iconIgnoresPlacement","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/iconignoresplacement","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconIgnoresPlacement","fragments":[{"kind":"identifier","text":"iconIgnoresPlacement"}],"abstract":[{"text":"If true, other symbols can be visible even if they collide with the icon.","type":"text"}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/databaseURL":{"role":"symbol","title":"databaseURL","fragments":[{"text":"databaseURL","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The file URL at which offline packs and the ambient cache are stored.","type":"text"}],"url":"\/documentation\/maplibre\/mlnofflinestorage\/databaseurl","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/databaseURL"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/textIgnoresPlacement":{"fragments":[{"text":"textIgnoresPlacement","kind":"identifier"}],"title":"textIgnoresPlacement","type":"topic","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/textignoresplacement","abstract":[{"type":"text","text":"If true, other symbols can be visible even if they collide with the text."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/textIgnoresPlacement"},"doc://org.swift.MyProject/documentation/MapLibre/MLNSymbolStyleLayer/iconAllowsOverlap":{"type":"topic","title":"iconAllowsOverlap","url":"\/documentation\/maplibre\/mlnsymbolstylelayer\/iconallowsoverlap","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNSymbolStyleLayer\/iconAllowsOverlap","kind":"symbol","fragments":[{"kind":"identifier","text":"iconAllowsOverlap"}],"abstract":[{"text":"If true, the icon will be visible even if it collides with other previously","type":"text"},{"text":" ","type":"text"},{"text":"drawn symbols.","type":"text"}],"role":"symbol"}}}