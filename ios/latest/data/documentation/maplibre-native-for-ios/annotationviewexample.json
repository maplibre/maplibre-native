{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre-native-for-ios\/annotationviewexample"]}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This examples shows how you can implement and use a custom "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You need to implement "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:viewForAnnotation:","type":"reference","isActive":true},{"type":"text","text":" of "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"text":" which will be called when you add an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","isActive":true,"type":"reference"},{"type":"text","text":" to the example. In this case, three "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation"},{"type":"text","text":"s are added to the map. When one is selected selected "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView\/setSelected:animated:","type":"reference"},{"type":"text","text":" will be called."}]},{"code":["class AnnotationViewExample: UIViewController, MLNMapViewDelegate {","    override func viewDidLoad() {","        super.viewDidLoad()","","        let mapView = MLNMapView(frame: view.bounds)","        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]","        mapView.attributionButton.isHidden = true","        mapView.tintColor = .lightGray","        mapView.centerCoordinate = CLLocationCoordinate2D(latitude: 0, longitude: 66)","        mapView.zoomLevel = 2","        mapView.delegate = self","        view.addSubview(mapView)","","        \/\/ Specify coordinates for our annotations.","        let coordinates = [","            CLLocationCoordinate2D(latitude: 0, longitude: 33),","            CLLocationCoordinate2D(latitude: 0, longitude: 66),","            CLLocationCoordinate2D(latitude: 0, longitude: 99),","        ]","","        \/\/ Fill an array with point annotations and add it to the map.","        var pointAnnotations = [MLNPointAnnotation]()","        for coordinate in coordinates {","            let point = MLNPointAnnotation()","            point.coordinate = coordinate","            point.title = \"\\(coordinate.latitude), \\(coordinate.longitude)\"","            pointAnnotations.append(point)","        }","","        mapView.addAnnotations(pointAnnotations)","    }","","    \/\/ MARK: - MLNMapViewDelegate methods","","    \/\/ This delegate method is where you tell the map to load a view for a specific annotation. To load a static MLNAnnotationImage, you would use `-mapView:imageForAnnotation:`.","    func mapView(_ mapView: MLNMapView, viewFor annotation: MLNAnnotation) -> MLNAnnotationView? {","        \/\/ This example is only concerned with point annotations.","        guard annotation is MLNPointAnnotation else {","            return nil","        }","","        \/\/ Use the point annotation’s longitude value (as a string) as the reuse identifier for its view.","        let reuseIdentifier = \"\\(annotation.coordinate.longitude)\"","","        \/\/ For better performance, always try to reuse existing annotations.","        var annotationView = mapView.dequeueReusableAnnotationView(withIdentifier: reuseIdentifier)","","        \/\/ If there’s no reusable annotation view available, initialize a new one.","        if annotationView == nil {","            annotationView = CustomAnnotationView(reuseIdentifier: reuseIdentifier)","            annotationView!.bounds = CGRect(x: 0, y: 0, width: 40, height: 40)","","            \/\/ Set the annotation view’s background color to a value determined by its longitude.","            let hue = CGFloat(annotation.coordinate.longitude) \/ 100","            annotationView!.backgroundColor = UIColor(hue: hue, saturation: 0.5, brightness: 1, alpha: 1)","        }","","        return annotationView","    }","","    func mapView(_: MLNMapView, annotationCanShowCallout _: MLNAnnotation) -> Bool {","        true","    }","}","","\/\/","\/\/ MLNAnnotationView subclass","class CustomAnnotationView: MLNAnnotationView {","    override func layoutSubviews() {","        super.layoutSubviews()","","        \/\/ Use CALayer’s corner radius to turn this view into a circle.","        layer.cornerRadius = bounds.width \/ 2","        layer.borderWidth = 2","        layer.borderColor = UIColor.white.cgColor","    }","","    override func setSelected(_ selected: Bool, animated: Bool) {","        super.setSelected(selected, animated: animated)","","        \/\/ Animate the border width in\/out, creating an iris effect.","        let animation = CABasicAnimation(keyPath: \"borderWidth\")","        animation.duration = 0.1","        layer.borderWidth = selected ? bounds.width \/ 4 : 2","        layer.add(animation, forKey: \"borderWidth\")","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"AnnotationViewExample.png"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample"},"abstract":[{"type":"text","text":"Add a custom annotation view"}],"metadata":{"roleHeading":"Article","modules":[{"name":"MapLibre"}],"title":"Custom Annotation View","role":"article"},"seeAlsoSections":[{"title":"Map Interaction","identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample"],"generated":true}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"url":"\/documentation\/maplibre\/mlnmapviewdelegate","kind":"symbol","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","role":"symbol","abstract":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"text":" protocol defines a set of optional methods that you","type":"text"},{"type":"text","text":" "},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"type":"text","text":" "},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"title":"MLNMapViewDelegate"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:viewForAnnotation:":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:viewforannotation:","kind":"symbol","title":"mapView:viewForAnnotation:","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:viewForAnnotation:","navigatorTitle":[{"text":"mapView:viewForAnnotation:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"mapView:viewForAnnotation:","kind":"identifier"}],"abstract":[{"text":"Returns a view object to mark the given point annotation object on the map.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNAnnotationView/setSelected:animated:":{"title":"setSelected:animated:","type":"topic","abstract":[{"text":"Sets the selection state of the annotation view with an optional animation.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView\/setSelected:animated:","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setSelected:animated:"}],"url":"\/documentation\/maplibre\/mlnannotationview\/setselected:animated:","navigatorTitle":[{"kind":"identifier","text":"setSelected:animated:"}]},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/LineOnUserTap":{"title":"Add Line on User Tap","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/lineonusertap","role":"article","abstract":[{"type":"text","text":"Demonstrating adding "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","type":"reference","isActive":true},{"text":" annotations and responding to user input.","type":"text"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPointAnnotation":{"title":"MLNPointAnnotation","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","kind":"symbol","url":"\/documentation\/maplibre\/mlnpointannotation","fragments":[{"text":"MLNPointAnnotation","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","isActive":true},{"text":" object represents a one-dimensional shape located at a","type":"text"},{"type":"text","text":" "},{"text":"single geographical coordinate. Depending on how it is used, an","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","type":"reference"},{"type":"text","text":" object is known as a point annotation or point shape. For"},{"text":" ","type":"text"},{"text":"example, you could use a point shape to represent a city at low zoom levels, an","type":"text"},{"type":"text","text":" "},{"text":"address at high zoom levels, or the location of a long press gesture.","type":"text"}],"type":"topic"},"AnnotationViewExample.png":{"identifier":"AnnotationViewExample.png","alt":null,"type":"image","variants":[{"url":"\/images\/AnnotationViewExample@2x.png","traits":["2x","light"]}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNAnnotation":{"url":"\/documentation\/maplibre\/mlnannotation","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","fragments":[{"text":"MLNAnnotation","kind":"identifier"}],"title":"MLNAnnotation","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","isActive":true,"type":"reference"},{"type":"text","text":" protocol is used to provide annotation-related information"},{"type":"text","text":" "},{"text":"to a map view. To use this protocol, you adopt it in any custom objects that","type":"text"},{"text":" ","type":"text"},{"text":"store or represent annotation data. Each object then serves as the source of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"information about a single map annotation and provides critical information,"},{"type":"text","text":" "},{"type":"text","text":"such as the annotation’s location on the map. Annotation objects do not provide"},{"type":"text","text":" "},{"type":"text","text":"the visual representation of the annotation but typically coordinate (in"},{"text":" ","type":"text"},{"type":"text","text":"conjunction with the map view’s delegate) the creation of an appropriate"},{"type":"text","text":" "},{"type":"text","text":"objects to handle the display."}]},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"abstract":[{"type":"text","text":"Constrain the map to a certain area."}],"role":"article","type":"topic","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample","title":"Blocking Gestures","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","kind":"article"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","fragments":[{"text":"MLNMapView","kind":"identifier"}],"type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","title":"MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPolyline":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","fragments":[{"kind":"identifier","text":"MLNPolyline"}],"kind":"symbol","title":"MLNPolyline","url":"\/documentation\/maplibre\/mlnpolyline","abstract":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","isActive":true,"type":"reference"},{"type":"text","text":" object represents a shape consisting of two or more vertices,"},{"text":" ","type":"text"},{"text":"specified as ","type":"text"},{"type":"codeVoice","code":"CLLocationCoordinate2D"},{"type":"text","text":" instances, and the line segments that"},{"type":"text","text":" "},{"text":"connect them. For example, you could use an polyline to represent a road or the","type":"text"},{"text":" ","type":"text"},{"text":"path along which something moves.","type":"text"}],"type":"topic","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNAnnotationView":{"abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView","isActive":true},{"type":"text","text":" class is responsible for marking a point annotation"},{"type":"text","text":" "},{"type":"text","text":"with a view. Annotation views represent an annotation object, which is an"},{"text":" ","type":"text"},{"type":"text","text":"object that corresponds to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","type":"reference"},{"type":"text","text":" protocol. When an annotation’s"},{"type":"text","text":" "},{"type":"text","text":"geographic coordinate is visible in the map view, the map view asks its"},{"text":" ","type":"text"},{"text":"delegate to a corresponding annotation view. If an annotation view is created","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with a reuse identifier, the map view may recycle the view when it goes"},{"text":" ","type":"text"},{"type":"text","text":"offscreen."}],"kind":"symbol","title":"MLNAnnotationView","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView","role":"symbol","fragments":[{"text":"MLNAnnotationView","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnannotationview"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BuildingLightExample":{"role":"article","url":"\/documentation\/maplibre-native-for-ios\/buildinglightexample","kind":"article","title":"Fill Extrustion Layer","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample","abstract":[{"type":"text","text":"Add a fill extrustion layer and adjust the light dynamically with a slider."}]}}}