{"abstract":[{"type":"text","text":"Add a custom annotation view"}],"primaryContentSections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"This examples shows how you can implement and use a custom ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You need to implement "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:viewForAnnotation:","isActive":true},{"type":"text","text":" of "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"type":"text","text":" which will be called when you add an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","isActive":true},{"type":"text","text":" to the example. In this case, three "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","isActive":true},{"type":"text","text":"s are added to the map. When one is selected selected "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView\/setSelected:animated:","isActive":true},{"type":"text","text":" will be called."}]},{"syntax":"swift","type":"codeListing","code":["class AnnotationViewExample: UIViewController, MLNMapViewDelegate {","    override func viewDidLoad() {","        super.viewDidLoad()","","        let mapView = MLNMapView(frame: view.bounds)","        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]","        mapView.attributionButton.isHidden = true","        mapView.tintColor = .lightGray","        mapView.centerCoordinate = CLLocationCoordinate2D(latitude: 0, longitude: 66)","        mapView.zoomLevel = 2","        mapView.delegate = self","        view.addSubview(mapView)","","        \/\/ Specify coordinates for our annotations.","        let coordinates = [","            CLLocationCoordinate2D(latitude: 0, longitude: 33),","            CLLocationCoordinate2D(latitude: 0, longitude: 66),","            CLLocationCoordinate2D(latitude: 0, longitude: 99),","        ]","","        \/\/ Fill an array with point annotations and add it to the map.","        var pointAnnotations = [MLNPointAnnotation]()","        for coordinate in coordinates {","            let point = MLNPointAnnotation()","            point.coordinate = coordinate","            point.title = \"\\(coordinate.latitude), \\(coordinate.longitude)\"","            pointAnnotations.append(point)","        }","","        mapView.addAnnotations(pointAnnotations)","    }","","    \/\/ MARK: - MLNMapViewDelegate methods","","    \/\/ This delegate method is where you tell the map to load a view for a specific annotation. To load a static MLNAnnotationImage, you would use `-mapView:imageForAnnotation:`.","    func mapView(_ mapView: MLNMapView, viewFor annotation: MLNAnnotation) -> MLNAnnotationView? {","        \/\/ This example is only concerned with point annotations.","        guard annotation is MLNPointAnnotation else {","            return nil","        }","","        \/\/ Use the point annotation’s longitude value (as a string) as the reuse identifier for its view.","        let reuseIdentifier = \"\\(annotation.coordinate.longitude)\"","","        \/\/ For better performance, always try to reuse existing annotations.","        var annotationView = mapView.dequeueReusableAnnotationView(withIdentifier: reuseIdentifier)","","        \/\/ If there’s no reusable annotation view available, initialize a new one.","        if annotationView == nil {","            annotationView = CustomAnnotationView(reuseIdentifier: reuseIdentifier)","            annotationView!.bounds = CGRect(x: 0, y: 0, width: 40, height: 40)","","            \/\/ Set the annotation view’s background color to a value determined by its longitude.","            let hue = CGFloat(annotation.coordinate.longitude) \/ 100","            annotationView!.backgroundColor = UIColor(hue: hue, saturation: 0.5, brightness: 1, alpha: 1)","        }","","        return annotationView","    }","","    func mapView(_: MLNMapView, annotationCanShowCallout _: MLNAnnotation) -> Bool {","        true","    }","}","","\/\/","\/\/ MLNAnnotationView subclass","class CustomAnnotationView: MLNAnnotationView {","    override func layoutSubviews() {","        super.layoutSubviews()","","        \/\/ Use CALayer’s corner radius to turn this view into a circle.","        layer.cornerRadius = bounds.width \/ 2","        layer.borderWidth = 2","        layer.borderColor = UIColor.white.cgColor","    }","","    override func setSelected(_ selected: Bool, animated: Bool) {","        super.setSelected(selected, animated: animated)","","        \/\/ Animate the border width in\/out, creating an iris effect.","        let animation = CABasicAnimation(keyPath: \"borderWidth\")","        animation.duration = 0.1","        layer.borderWidth = selected ? bounds.width \/ 4 : 2","        layer.add(animation, forKey: \"borderWidth\")","    }","}"]},{"type":"paragraph","inlineContent":[{"identifier":"AnnotationViewExample.png","type":"image"}]}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample"],"anchor":"Map-Interaction","title":"Map Interaction","generated":true}],"sections":[],"metadata":{"modules":[{"name":"MapLibre"}],"role":"article","roleHeading":"Article","title":"Custom Annotation View"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre-native-for-ios\/annotationviewexample"]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/AnnotationViewExample","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate/mapView:viewForAnnotation:":{"title":"mapView:viewForAnnotation:","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"mapView:viewForAnnotation:"}],"abstract":[{"text":"Returns a view object to mark the given point annotation object on the map.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate\/mapView:viewForAnnotation:","url":"\/documentation\/maplibre\/mlnmapviewdelegate\/mapview:viewforannotation:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"mapView:viewForAnnotation:"}],"type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BlockingGesturesExample":{"abstract":[{"text":"Constrain the map to a certain area.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BlockingGesturesExample","kind":"article","type":"topic","role":"article","title":"Blocking Gestures","url":"\/documentation\/maplibre-native-for-ios\/blockinggesturesexample"},"AnnotationViewExample.png":{"identifier":"AnnotationViewExample.png","variants":[{"url":"\/images\/org.swift.MyProject\/AnnotationViewExample@2x.png","traits":["2x","light"]}],"type":"image","alt":null},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","role":"collection","title":"MapLibre","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNPolyline":{"title":"MLNPolyline","url":"\/documentation\/maplibre\/mlnpolyline","fragments":[{"kind":"identifier","text":"MLNPolyline"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","type":"reference"},{"type":"text","text":" object represents a shape consisting of two or more vertices,"},{"type":"text","text":" "},{"type":"text","text":"specified as "},{"code":"CLLocationCoordinate2D","type":"codeVoice"},{"type":"text","text":" instances, and the line segments that"},{"type":"text","text":" "},{"type":"text","text":"connect them. For example, you could use an polyline to represent a road or the"},{"type":"text","text":" "},{"type":"text","text":"path along which something moves."}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/BuildingLightExample":{"type":"topic","abstract":[{"type":"text","text":"Add a fill extrustion layer and adjust the light dynamically with a slider."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/BuildingLightExample","title":"Fill Extrustion Layer","kind":"article","url":"\/documentation\/maplibre-native-for-ios\/buildinglightexample","role":"article"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"type":"topic","url":"\/documentation\/maplibre\/mlnmapview","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","title":"MLNMapView","kind":"symbol","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"fragments":[{"text":"MLNMapView","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNAnnotationView":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView","role":"symbol","fragments":[{"kind":"identifier","text":"MLNAnnotationView"}],"url":"\/documentation\/maplibre\/mlnannotationview","abstract":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView","isActive":true},{"type":"text","text":" class is responsible for marking a point annotation"},{"type":"text","text":" "},{"type":"text","text":"with a view. Annotation views represent an annotation object, which is an"},{"type":"text","text":" "},{"type":"text","text":"object that corresponds to the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","isActive":true},{"type":"text","text":" protocol. When an annotation’s"},{"type":"text","text":" "},{"type":"text","text":"geographic coordinate is visible in the map view, the map view asks its"},{"type":"text","text":" "},{"type":"text","text":"delegate to a corresponding annotation view. If an annotation view is created"},{"type":"text","text":" "},{"type":"text","text":"with a reuse identifier, the map view may recycle the view when it goes"},{"type":"text","text":" "},{"type":"text","text":"offscreen."}],"title":"MLNAnnotationView","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNAnnotation":{"type":"topic","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation"},{"type":"text","text":" protocol is used to provide annotation-related information"},{"type":"text","text":" "},{"type":"text","text":"to a map view. To use this protocol, you adopt it in any custom objects that"},{"type":"text","text":" "},{"type":"text","text":"store or represent annotation data. Each object then serves as the source of"},{"type":"text","text":" "},{"type":"text","text":"information about a single map annotation and provides critical information,"},{"type":"text","text":" "},{"type":"text","text":"such as the annotation’s location on the map. Annotation objects do not provide"},{"type":"text","text":" "},{"type":"text","text":"the visual representation of the annotation but typically coordinate (in"},{"type":"text","text":" "},{"type":"text","text":"conjunction with the map view’s delegate) the creation of an appropriate"},{"type":"text","text":" "},{"type":"text","text":"objects to handle the display."}],"kind":"symbol","title":"MLNAnnotation","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotation","fragments":[{"kind":"identifier","text":"MLNAnnotation"}],"url":"\/documentation\/maplibre\/mlnannotation","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNPointAnnotation":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","title":"MLNPointAnnotation","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","isActive":true},{"type":"text","text":" object represents a one-dimensional shape located at a"},{"type":"text","text":" "},{"type":"text","text":"single geographical coordinate. Depending on how it is used, an"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPointAnnotation","isActive":true},{"type":"text","text":" object is known as a point annotation or point shape. For"},{"type":"text","text":" "},{"type":"text","text":"example, you could use a point shape to represent a city at low zoom levels, an"},{"type":"text","text":" "},{"type":"text","text":"address at high zoom levels, or the location of a long press gesture."}],"url":"\/documentation\/maplibre\/mlnpointannotation","fragments":[{"text":"MLNPointAnnotation","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/LineOnUserTap":{"type":"topic","title":"Add Line on User Tap","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LineOnUserTap","kind":"article","role":"article","abstract":[{"type":"text","text":"Demonstrating adding "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNPolyline"},{"type":"text","text":" annotations and responding to user input."}],"url":"\/documentation\/maplibre-native-for-ios\/lineonusertap"},"doc://org.swift.MyProject/documentation/MapLibre/MLNAnnotationView/setSelected:animated:":{"role":"symbol","kind":"symbol","url":"\/documentation\/maplibre\/mlnannotationview\/setselected:animated:","navigatorTitle":[{"kind":"identifier","text":"setSelected:animated:"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNAnnotationView\/setSelected:animated:","title":"setSelected:animated:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setSelected:animated:"}],"abstract":[{"text":"Sets the selection state of the annotation view with an optional animation.","type":"text"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"type":"topic","abstract":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"type":"text","text":" "},{"type":"text","text":"can use to receive map-related update messages. Because many map operations"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"type":"text","text":" "},{"type":"text","text":"these methods to notify your application when specific operations complete. The"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"type":"text","text":" "},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"type":"text","text":" "},{"type":"text","text":"individual annotations."}],"kind":"symbol","title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","role":"symbol"}}}