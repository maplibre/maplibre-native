{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"metadata":{"modules":[{"name":"MapLibre"}],"role":"article","title":"User Location & Location Privacy","roleHeading":"Article"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LocationPrivacyExample","interfaceLanguage":"occ"},"seeAlsoSections":[{"identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/StaticSnapshotExample"],"generated":true,"title":"Features"}],"sections":[],"kind":"article","abstract":[{"text":"Requesting precise location with ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"content","content":[{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses SwiftUI."}]}]},{"inlineContent":[{"text":"This example shows how to request a precise location with ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s prepare your "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":":"}]},{"type":"paragraph","inlineContent":[{"text":"First, provide a description why your app needs to access location:","type":"text"}]},{"type":"codeListing","syntax":"plist","code":["<key>NSLocationWhenInUseUsageDescription<\/key>","<string>Dummy Location When In Use Description<\/string>"]},{"inlineContent":[{"type":"text","text":"Second, add a description why your app needs precise location:"}],"type":"paragraph"},{"syntax":"plist","code":["<key>NSLocationTemporaryUsageDescriptionDictionary<\/key>","<dict>","  <key>MLNAccuracyAuthorizationDescription<\/key>","  <string>Dummy Precise Location Description<\/string>","<\/dict>"],"type":"codeListing"},{"inlineContent":[{"text":"Third and finally, specify your app only needs reduced location access by default (until you request precise accuracy in the example):","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"plist","code":["<key>NSLocationDefaultAccuracyReduced<\/key>","<true\/>"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"Coordinator","type":"codeVoice"},{"type":"text","text":" defined below is also the "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference","isActive":true},{"type":"text","text":". When the location manager authorization changes it will call the relevant method. If precise location has not been granted, a button is shown at the bottom of the map."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"ImpreciseLocation.png"}]},{"inlineContent":[{"type":"text","text":"When the button is pressed a pop-up with the description we set in "},{"type":"codeVoice","code":"Info.plist"},{"text":" will be shown:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"PreciseLocationRequestPopup.png"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["enum LocationAccuracyState {","    case unknown","    case reducedAccuracy","    case fullAccuracy","}","","@MainActor","class PrivacyExampleViewModel: NSObject, ObservableObject {","    @Published var locationAccuracy: LocationAccuracyState = .unknown","    @Published var showTemporaryLocationAuthorization = false","}","","class PrivacyExampleCoordinator: NSObject, MLNMapViewDelegate {","    @ObservedObject private var mapViewModel: PrivacyExampleViewModel","    private var pannedToUserLocation = false","","    init(mapViewModel: PrivacyExampleViewModel) {","        self.mapViewModel = mapViewModel","        super.init()","    }","","    @MainActor func mapView(_: MLNMapView, didChangeLocationManagerAuthorization manager: MLNLocationManager) {","        guard let accuracySetting = manager.accuracyAuthorization else {","            return","        }","","        switch accuracySetting() {","        case .fullAccuracy:","            mapViewModel.locationAccuracy = .fullAccuracy","        case .reducedAccuracy:","            mapViewModel.locationAccuracy = .reducedAccuracy","        @unknown default:","            mapViewModel.locationAccuracy = .unknown","        }","    }","","    \/\/ when a location is available for the first time, we fly to it","    func mapView(_ mapView: MLNMapView, didUpdate _: MLNUserLocation?) {","        guard !pannedToUserLocation else { return }","        guard let userLocation = mapView.userLocation else {","            print(\"User location is currently not available.\")","            return","        }","        mapView.fly(to: MLNMapCamera(lookingAtCenter: userLocation.coordinate, altitude: 100_000, pitch: 0, heading: 0))","        pannedToUserLocation = true","    }","}","","struct PrivacyExampleRepresentable: UIViewRepresentable {","    @ObservedObject var mapViewModel: PrivacyExampleViewModel","","    func makeCoordinator() -> PrivacyExampleCoordinator {","        PrivacyExampleCoordinator(mapViewModel: mapViewModel)","    }","","    func makeUIView(context: Context) -> MLNMapView {","        let mapView = MLNMapView()","","        mapView.delegate = context.coordinator","        mapView.showsUserLocation = true","        return mapView","    }","","    func updateUIView(_ mapView: MLNMapView, context _: Context) {","        if mapViewModel.showTemporaryLocationAuthorization {","            let purposeKey = \"MLNAccuracyAuthorizationDescription\"","            mapView.locationManager.requestTemporaryFullAccuracyAuthorization?(withPurposeKey: purposeKey)","            DispatchQueue.main.async {","                mapViewModel.showTemporaryLocationAuthorization = false","            }","        }","    }","}","","struct LocationPrivacyExampleView: View {","    @StateObject private var viewModel = PrivacyExampleViewModel()","","    var body: some View {","        VStack {","            PrivacyExampleRepresentable(mapViewModel: viewModel)","                .edgesIgnoringSafeArea(.all)","","            if viewModel.locationAccuracy == LocationAccuracyState.reducedAccuracy {","                Button(\"Request Precise Location\") {","                    viewModel.showTemporaryLocationAuthorization.toggle()","                }","                .padding()","                .background(Color.blue)","                .foregroundColor(.white)","                .cornerRadius(8)","            }","        }","    }","}"]}]}],"variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/locationprivacyexample"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapSnapshotter":{"title":"MLNMapSnapshotter","url":"\/documentation\/maplibre\/mlnmapsnapshotter","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotter","fragments":[{"kind":"identifier","text":"MLNMapSnapshotter"}],"kind":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotter"},{"type":"text","text":" generates static raster images of the map. Each snapshot"},{"type":"text","text":" "},{"type":"text","text":"image depicts a portion of a map defined by an "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotOptions","isActive":true,"type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you provide. The snapshotter generates an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshot","isActive":true},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"asynchronously, calling "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotterDelegate","type":"reference","isActive":true},{"type":"text","text":" methods if defined, then"},{"type":"text","text":" "},{"text":"passing it into a completion handler once tiles and other resources needed for","type":"text"},{"type":"text","text":" "},{"text":"the snapshot are finished loading.","type":"text"}],"role":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager":{"url":"\/documentation\/maplibre\/mlnlocationmanager","type":"topic","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","type":"reference","isActive":true},{"type":"text","text":" protocol defines a set of methods that a class must"},{"type":"text","text":" "},{"text":"implement in order to serve as the location manager of an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"reference"},{"text":". A location","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"manager is responsible for notifying the map view about location-related events,"},{"text":" ","type":"text"},{"type":"text","text":"such as a change in the user’s location. This protocol is similar to the"},{"type":"text","text":" "},{"text":"Core Location framework’s ","type":"text"},{"type":"codeVoice","code":"CLLocationManager"},{"type":"text","text":" class, but your implementation"},{"type":"text","text":" "},{"text":"does not need to be based on ","type":"text"},{"code":"CLLocationManager","type":"codeVoice"},{"text":".","type":"text"}],"title":"MLNLocationManager","fragments":[{"kind":"identifier","text":"MLNLocationManager"}],"kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/StaticSnapshotExample":{"title":"Making Snapshots","url":"\/documentation\/maplibre-native-for-ios\/staticsnapshotexample","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/StaticSnapshotExample","kind":"article","abstract":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotter","isActive":true},{"text":" to create snapshots of the map.","type":"text"}],"role":"article","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"abstract":[{"type":"text","text":"The "},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","type":"reference"},{"type":"text","text":" protocol defines a set of optional methods that you"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"require the "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"type":"text","text":" class to load data asynchronously, the map view calls"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"type":"text","text":" "},{"type":"text","text":"map view also uses these methods to request information about annotations"},{"text":" ","type":"text"},{"type":"text","text":"displayed on the map, such as the styles and interaction modes to apply to"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapViewDelegate"}],"url":"\/documentation\/maplibre\/mlnmapviewdelegate","type":"topic","title":"MLNMapViewDelegate","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"role":"collection","url":"\/documentation\/maplibre","type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"title":"MLNMapView","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provided by Apple’s MapKit."}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","type":"topic"},"ImpreciseLocation.png":{"alt":null,"identifier":"ImpreciseLocation.png","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/ImpreciseLocation@2x.png"}]},"PreciseLocationRequestPopup.png":{"type":"image","identifier":"PreciseLocationRequestPopup.png","alt":null,"variants":[{"traits":["2x","light"],"url":"\/images\/PreciseLocationRequestPopup@2x.png"}]}}}