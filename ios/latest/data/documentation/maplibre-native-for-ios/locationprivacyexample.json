{"seeAlsoSections":[{"anchor":"Features","identifiers":["doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/StaticSnapshotExample"],"generated":true,"title":"Features"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"abstract":[{"type":"text","text":"Requesting precise location with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager"},{"type":"text","text":"."}],"primaryContentSections":[{"content":[{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"This example uses SwiftUI."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to request a precise location with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s prepare your "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":":"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"First, provide a description why your app needs to access location:"}]},{"type":"codeListing","code":["<key>NSLocationWhenInUseUsageDescription<\/key>","<string>Dummy Location When In Use Description<\/string>"],"syntax":"plist"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Second, add a description why your app needs precise location:"}]},{"type":"codeListing","code":["<key>NSLocationTemporaryUsageDescriptionDictionary<\/key>","<dict>","  <key>MLNAccuracyAuthorizationDescription<\/key>","  <string>Dummy Precise Location Description<\/string>","<\/dict>"],"syntax":"plist"},{"type":"paragraph","inlineContent":[{"text":"Third and finally, specify your app only needs reduced location access by default (until you request precise accuracy in the example):","type":"text"}]},{"type":"codeListing","code":["<key>NSLocationDefaultAccuracyReduced<\/key>","<true\/>"],"syntax":"plist"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"Coordinator","type":"codeVoice"},{"text":" defined below is also the ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true,"type":"reference"},{"text":". When the location manager authorization changes it will call the relevant method. If precise location has not been granted, a button is shown at the bottom of the map.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"ImpreciseLocation.png"}]},{"type":"paragraph","inlineContent":[{"text":"When the button is pressed a pop-up with the description we set in ","type":"text"},{"code":"Info.plist","type":"codeVoice"},{"text":" will be shown:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"PreciseLocationRequestPopup.png"}]},{"type":"codeListing","code":["enum LocationAccuracyState {","    case unknown","    case reducedAccuracy","    case fullAccuracy","}","","@MainActor","class PrivacyExampleViewModel: NSObject, ObservableObject {","    @Published var locationAccuracy: LocationAccuracyState = .unknown","    @Published var showTemporaryLocationAuthorization = false","}","","class PrivacyExampleCoordinator: NSObject, MLNMapViewDelegate {","    @ObservedObject private var mapViewModel: PrivacyExampleViewModel","    private var pannedToUserLocation = false","","    init(mapViewModel: PrivacyExampleViewModel) {","        self.mapViewModel = mapViewModel","        super.init()","    }","","    @MainActor func mapView(_: MLNMapView, didChangeLocationManagerAuthorization manager: MLNLocationManager) {","        guard let accuracySetting = manager.accuracyAuthorization else {","            return","        }","","        switch accuracySetting() {","        case .fullAccuracy:","            mapViewModel.locationAccuracy = .fullAccuracy","        case .reducedAccuracy:","            mapViewModel.locationAccuracy = .reducedAccuracy","        @unknown default:","            mapViewModel.locationAccuracy = .unknown","        }","    }","","    \/\/ when a location is available for the first time, we fly to it","    func mapView(_ mapView: MLNMapView, didUpdate _: MLNUserLocation?) {","        guard !pannedToUserLocation else { return }","        guard let userLocation = mapView.userLocation else {","            print(\"User location is currently not available.\")","            return","        }","        mapView.fly(to: MLNMapCamera(lookingAtCenter: userLocation.coordinate, altitude: 100_000, pitch: 0, heading: 0))","        pannedToUserLocation = true","    }","}","","struct PrivacyExampleRepresentable: UIViewRepresentable {","    @ObservedObject var mapViewModel: PrivacyExampleViewModel","","    func makeCoordinator() -> PrivacyExampleCoordinator {","        PrivacyExampleCoordinator(mapViewModel: mapViewModel)","    }","","    func makeUIView(context: Context) -> MLNMapView {","        let mapView = MLNMapView()","","        mapView.delegate = context.coordinator","        mapView.showsUserLocation = true","        return mapView","    }","","    func updateUIView(_ mapView: MLNMapView, context _: Context) {","        if mapViewModel.showTemporaryLocationAuthorization {","            let purposeKey = \"MLNAccuracyAuthorizationDescription\"","            mapView.locationManager.requestTemporaryFullAccuracyAuthorization?(withPurposeKey: purposeKey)","            DispatchQueue.main.async {","                mapViewModel.showTemporaryLocationAuthorization = false","            }","        }","    }","}","","struct LocationPrivacyExampleView: View {","    @StateObject private var viewModel = PrivacyExampleViewModel()","","    var body: some View {","        VStack {","            PrivacyExampleRepresentable(mapViewModel: viewModel)","                .edgesIgnoringSafeArea(.all)","","            if viewModel.locationAccuracy == LocationAccuracyState.reducedAccuracy {","                Button(\"Request Precise Location\") {","                    viewModel.showTemporaryLocationAuthorization.toggle()","                }","                .padding()","                .background(Color.blue)","                .foregroundColor(.white)","                .cornerRadius(8)","            }","        }","    }","}"],"syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/locationprivacyexample"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LocationPrivacyExample"},"metadata":{"title":"User Location & Location Privacy","role":"article","modules":[{"name":"MapLibre"}],"roleHeading":"Article"},"kind":"article","references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview","title":"MLNMapView","fragments":[{"kind":"identifier","text":"MLNMapView"}],"abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","kind":"symbol","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre-Native-for-iOS/StaticSnapshotExample":{"title":"Making Snapshots","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/StaticSnapshotExample","role":"article","type":"topic","abstract":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotter"},{"text":" to create snapshots of the map.","type":"text"}],"kind":"article","url":"\/documentation\/maplibre-native-for-ios\/staticsnapshotexample"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLocationManager":{"url":"\/documentation\/maplibre\/mlnlocationmanager","role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLocationManager","isActive":true},{"text":" protocol defines a set of methods that a class must","type":"text"},{"text":" ","type":"text"},{"text":"implement in order to serve as the location manager of an ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"text":". A location","type":"text"},{"text":" ","type":"text"},{"text":"manager is responsible for notifying the map view about location-related events,","type":"text"},{"text":" ","type":"text"},{"text":"such as a change in the user’s location. This protocol is similar to the","type":"text"},{"text":" ","type":"text"},{"text":"Core Location framework’s ","type":"text"},{"type":"codeVoice","code":"CLLocationManager"},{"text":" class, but your implementation","type":"text"},{"text":" ","type":"text"},{"text":"does not need to be based on ","type":"text"},{"type":"codeVoice","code":"CLLocationManager"},{"text":".","type":"text"}],"type":"topic","title":"MLNLocationManager","kind":"symbol","fragments":[{"text":"MLNLocationManager","kind":"identifier"}]},"ImpreciseLocation.png":{"identifier":"ImpreciseLocation.png","variants":[{"traits":["2x","light"],"url":"\/images\/org.swift.MyProject\/ImpreciseLocation@2x.png"}],"alt":null,"type":"image"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapSnapshotter":{"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotter","type":"topic","title":"MLNMapSnapshotter","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotter","isActive":true},{"type":"text","text":" generates static raster images of the map. Each snapshot"},{"type":"text","text":" "},{"type":"text","text":"image depicts a portion of a map defined by an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotOptions","isActive":true},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"you provide. The snapshotter generates an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshot","isActive":true},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"asynchronously, calling "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapSnapshotterDelegate","isActive":true},{"type":"text","text":" methods if defined, then"},{"type":"text","text":" "},{"type":"text","text":"passing it into a completion handler once tiles and other resources needed for"},{"type":"text","text":" "},{"type":"text","text":"the snapshot are finished loading."}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapsnapshotter","fragments":[{"text":"MLNMapSnapshotter","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapViewDelegate":{"type":"topic","fragments":[{"text":"MLNMapViewDelegate","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","abstract":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapViewDelegate","isActive":true},{"text":" protocol defines a set of optional methods that you","type":"text"},{"text":" ","type":"text"},{"text":"can use to receive map-related update messages. Because many map operations","type":"text"},{"text":" ","type":"text"},{"text":"require the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","isActive":true},{"text":" class to load data asynchronously, the map view calls","type":"text"},{"text":" ","type":"text"},{"text":"these methods to notify your application when specific operations complete. The","type":"text"},{"text":" ","type":"text"},{"text":"map view also uses these methods to request information about annotations","type":"text"},{"text":" ","type":"text"},{"text":"displayed on the map, such as the styles and interaction modes to apply to","type":"text"},{"text":" ","type":"text"},{"text":"individual annotations.","type":"text"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapviewdelegate","title":"MLNMapViewDelegate"},"PreciseLocationRequestPopup.png":{"identifier":"PreciseLocationRequestPopup.png","variants":[{"traits":["2x","light"],"url":"\/images\/org.swift.MyProject\/PreciseLocationRequestPopup@2x.png"}],"alt":null,"type":"image"}}}