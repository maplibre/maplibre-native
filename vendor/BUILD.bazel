load("@rules_cc//cc:defs.bzl", "cc_library", "objc_library")
load("//bazel:flags.bzl", "CPP_FLAGS")

cc_library(
    name = "maplibre-native-base",
    hdrs = [
        "maplibre-native-base/extras/args/args.hxx",
    ] + glob(
        [
            "maplibre-native-base/deps/cheap-ruler-cpp/include/mapbox/*.hpp",
            "maplibre-native-base/deps/geojson-vt-cpp/include/**/*.hpp",
            "maplibre-native-base/deps/geojson.hpp/include/**/*.hpp",
            "maplibre-native-base/deps/geometry.hpp/include/**/*.hpp",
            "maplibre-native-base/deps/jni.hpp/include/jni/*.hpp",
            "maplibre-native-base/deps/pixelmatch-cpp/include/mapbox/*.hpp",
            "maplibre-native-base/deps/shelf-pack-cpp/include/**/*.hpp",
            "maplibre-native-base/deps/supercluster.hpp/include/*.hpp",
            "maplibre-native-base/deps/variant/include/mapbox/*.hpp",
            "maplibre-native-base/extras/expected-lite/include/**/*.hpp",
            "maplibre-native-base/extras/filesystem/include/ghc/*.hpp",
            "maplibre-native-base/extras/kdbush.hpp/include/*.hpp",
            "maplibre-native-base/extras/rapidjson/include/**/*.h",
            "maplibre-native-base/include/mapbox/**/*.hpp",
        ],
        exclude = ["maplibre-native-base/deps/jni.hpp/include/jni/string_conversion.hpp"],
    ),
    copts = CPP_FLAGS,
    defines = ["RAPIDJSON_HAS_STDSTRING=1"],
    includes = [
        "maplibre-native-base/deps/cheap-ruler-cpp/include",
        "maplibre-native-base/deps/geojson.hpp/include",
        "maplibre-native-base/deps/geojson-vt-cpp/include",
        "maplibre-native-base/deps/geometry.hpp/include",
        "maplibre-native-base/deps/jni.hpp/include",
        "maplibre-native-base/deps/pixelmatch-cpp/include",
        "maplibre-native-base/deps/shelf-pack-cpp/include",
        "maplibre-native-base/deps/supercluster.hpp/include",
        "maplibre-native-base/deps/variant/include",
        "maplibre-native-base/extras/args",
        "maplibre-native-base/extras/expected-lite/include",
        "maplibre-native-base/extras/filesystem/include",
        "maplibre-native-base/extras/kdbush.hpp/include",
        "maplibre-native-base/extras/rapidjson/include",
        "maplibre-native-base/include",
    ],
    visibility = ["//visibility:public"],
)

# vendor/parsedate
cc_library(
    name = "parsedate",
    srcs = ["parsedate/parsedate.cpp"],
    hdrs = glob(["parsedate/**/*.hpp"]),
    copts = CPP_FLAGS,
    includes = ["parsedate"],
    visibility = ["//visibility:public"],
)

# vendor/csscolorparser
cc_library(
    name = "csscolorparser",
    srcs = glob(
        [
            "csscolorparser/**/*.hpp",
            "csscolorparser/**/*.cpp",
        ],
    ),
    copts = CPP_FLAGS,
    includes = ["csscolorparser"],
    visibility = ["//visibility:public"],
)

# vendor/wagyu-files.json
cc_library(
    name = "wagyu",
    hdrs = glob(["wagyu/include/mapbox/geometry/wagyu/*.hpp"]),
    copts = CPP_FLAGS,
    includes = ["wagyu/include"],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "zip-archive",
    srcs = [
        "zip-archive/SSZipArchive/SSZipArchive.h",
        "zip-archive/SSZipArchive/SSZipArchive.m",
        "zip-archive/SSZipArchive/SSZipCommon.h",
    ] + glob(
        [
            "zip-archive/SSZipArchive/minizip/*.c",
            "zip-archive/SSZipArchive/minizip/*.h",
        ],
    ),
    defines = ["ZLIB_COMPAT"],
    includes = ["zip-archive/SSZipArchive"],
    visibility = ["//visibility:public"],
)

# vendor/boost-files.json
cc_library(
    name = "boost",
    hdrs = glob(
        [
            "boost/include/boost/**/*.hpp",
            "boost/include/boost/**/*.h",
        ],
    ),
    copts = CPP_FLAGS,
    includes = ["boost/include"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "httplib",
    hdrs = ["cpp-httplib/httplib.h"],
    copts = CPP_FLAGS,
    includes = ["cpp-httplib"],
    visibility = ["//visibility:public"],
)

# vendor/protozero-files.json
cc_library(
    name = "protozero",
    hdrs = glob(["protozero/include/protozero/*.hpp"]),
    copts = CPP_FLAGS,
    includes = ["protozero/include"],
    visibility = ["//visibility:public"],
)

# vendor/earcut.hpp-files.json
cc_library(
    name = "earcut.hpp",
    hdrs = ["earcut.hpp/include/mapbox/earcut.hpp"],
    copts = CPP_FLAGS,
    includes = ["earcut.hpp/include"],
    visibility = ["//visibility:public"],
)

# vendor/eternal-files.json
cc_library(
    name = "eternal",
    hdrs = ["eternal/include/mapbox/eternal.hpp"],
    copts = CPP_FLAGS,
    includes = ["eternal/include"],
    visibility = ["//visibility:public"],
)

# vendor/metal-cpp.json
cc_library(
    name = "metal-cpp",
    hdrs = glob(["metal-cpp/**/*.hpp"]),
    copts = CPP_FLAGS,
    includes = ["metal-cpp"],
    visibility = ["//visibility:public"],
)

# vendor/pmtiles-files.json
cc_library(
    name = "pmtiles",
    hdrs = ["PMTiles/cpp/pmtiles.hpp"],
    copts = CPP_FLAGS,
    includes = ["PMTiles/cpp"],
    visibility = ["//visibility:public"],
)

# vendor/polylabel-files.json
cc_library(
    name = "polylabel",
    hdrs = ["polylabel/include/mapbox/polylabel.hpp"],
    copts = CPP_FLAGS,
    includes = ["polylabel/include"],
    visibility = ["//visibility:public"],
)

# vendor/unique_resource-files.json
cc_library(
    name = "unique_resource",
    hdrs = ["unique_resource/unique_resource.hpp"],
    copts = CPP_FLAGS,
    includes = ["unique_resource"],
    visibility = ["//visibility:public"],
)

# vendor/vector-tile-files.json
cc_library(
    name = "vector-tile",
    hdrs = glob(["vector-tile/include/mapbox/**/*.hpp"]),
    copts = CPP_FLAGS,
    includes = ["vector-tile/include"],
    visibility = ["//visibility:public"],
)

# vendor/icu-files.json
cc_library(
    name = "icu",
    srcs = glob(
        [
            "icu/src/*.cpp",
            "icu/src/*.h",
        ],
    ),
    hdrs = glob(["icu/include/unicode/*.h"]),
    copts = CPP_FLAGS + [
        "-Wno-c11-extensions",
        "-Wno-conversion",
    ],
    includes = ["icu/include"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "nunicode-gen",
    hdrs = glob(["nunicode/src/libnu/gen/*.c"]),
    include_prefix = "gen",
    strip_include_prefix = "nunicode/src/libnu/gen",
)

cc_library(
    name = "nunicode",
    srcs = glob(["nunicode/src/libnu/*.c"]),
    hdrs = glob(["nunicode/include/libnu/*.h"]),
    include_prefix = "libnu",
    strip_include_prefix = "nunicode/include/libnu",
    visibility = ["//visibility:public"],
    deps = [
        "nunicode-gen",
    ],
)

filegroup(
    name = "srcs",
    srcs = glob(["**"]),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "unordered_dense",
    srcs = [],
    hdrs = ["unordered_dense/include/ankerl/unordered_dense.h"],
    include_prefix = "ankerl",
    strip_include_prefix = "unordered_dense/include/ankerl",
    visibility = ["//visibility:public"],
)

cc_library(
    name = "freetype",
    srcs = [
        "freetype/builds/unix/ftsystem.c",
        "freetype/src/autofit/autofit.c",
        "freetype/src/base/ftbase.c",
        "freetype/src/base/ftbbox.c",
        "freetype/src/base/ftbdf.c",
        "freetype/src/base/ftbitmap.c",
        "freetype/src/base/ftcid.c",
        "freetype/src/base/ftdebug.c",
        "freetype/src/base/ftfstype.c",
        "freetype/src/base/ftgasp.c",
        "freetype/src/base/ftglyph.c",
        "freetype/src/base/ftgxval.c",
        "freetype/src/base/ftinit.c",
        "freetype/src/base/ftmm.c",
        "freetype/src/base/ftotval.c",
        "freetype/src/base/ftpatent.c",
        "freetype/src/base/ftpfr.c",
        "freetype/src/base/ftstroke.c",
        "freetype/src/base/ftsynth.c",
        "freetype/src/base/fttype1.c",
        "freetype/src/base/ftwinfnt.c",
        "freetype/src/bdf/bdf.c",
        "freetype/src/bzip2/ftbzip2.c",
        "freetype/src/cache/ftcache.c",
        "freetype/src/cff/cff.c",
        "freetype/src/cid/type1cid.c",
        "freetype/src/gxvalid/gxvalid.c",
        "freetype/src/gzip/ftgzip.c",
        "freetype/src/lzw/ftlzw.c",
        "freetype/src/otvalid/otvalid.c",
        "freetype/src/pcf/pcf.c",
        "freetype/src/pfr/pfr.c",
        "freetype/src/psaux/psaux.c",
        "freetype/src/pshinter/pshinter.c",
        "freetype/src/psnames/psnames.c",
        "freetype/src/raster/raster.c",
        "freetype/src/sdf/sdf.c",
        "freetype/src/sfnt/sfnt.c",
        "freetype/src/smooth/smooth.c",
        "freetype/src/svg/svg.c",
        "freetype/src/truetype/truetype.c",
        "freetype/src/type1/type1.c",
        "freetype/src/type42/type42.c",
        "freetype/src/winfonts/winfnt.c",
    ],
    hdrs = glob([
        "freetype/include/freetype/*.h",
        "freetype/include/freetype/config/*.h",
        "freetype/include/freetype/internal/*.h",
        "freetype/include/freetype/internal/services/*.h",
        "freetype/include/ft2build.h",
        "freetype/src/bdf/*.h",
        "freetype/src/autofit/ft-hb.c",
        "freetype/src/autofit/afblue.c",
        "freetype/src/autofit/afcjk.c",
        "freetype/src/autofit/afdummy.c",
        "freetype/src/autofit/afglobal.c",
        "freetype/src/autofit/afhints.c",
        "freetype/src/autofit/afindic.c",
        "freetype/src/autofit/aflatin.c",
        "freetype/src/autofit/afloader.c",
        "freetype/src/autofit/afmodule.c",
        "freetype/src/autofit/afranges.c",
        "freetype/src/autofit/afshaper.c",
        "freetype/src/autofit/*.h",
        "freetype/src/base/ftbase.h",
        "freetype/src/base/ftadvanc.c",
        "freetype/src/base/ftcalc.c",
        "freetype/src/base/ftcolor.c",
        "freetype/src/base/ftdbgmem.c",
        "freetype/src/base/ftgloadr.c",
        "freetype/src/base/fthash.c",
        "freetype/src/base/fterrors.c",
        "freetype/src/base/ftmac.c",
        "freetype/src/base/ftobjs.c",
        "freetype/src/base/ftoutln.c",
        "freetype/src/base/ftrfork.c",
        "freetype/src/base/ftpsprop.c",
        "freetype/src/base/ftfntfmt.c",
        "freetype/src/base/ftlcdfil.c",
        "freetype/src/base/ftsnames.c",
        "freetype/src/base/ftstream.c",
        "freetype/src/base/ftsystem.c",
        "freetype/src/base/fttrigon.c",
        "freetype/src/base/ftutil.c",
        "freetype/src/base/md5.c",
        "freetype/src/bdf/bdfdrivr.c",
        "freetype/src/bdf/bdflib.c",
        "freetype/src/cache/ftcbasic.c",
        "freetype/src/cache/ftccache.c",
        "freetype/src/cache/ftccmap.c",
        "freetype/src/cache/ftcglyph.c",
        "freetype/src/cache/ftcimage.c",
        "freetype/src/cache/ftcmanag.c",
        "freetype/src/cache/ftcmru.c",
        "freetype/src/cache/ftcsbits.c",
        "freetype/src/cache/*.h",
        "freetype/src/cff/cffcmap.c",
        "freetype/src/cff/cffdrivr.c",
        "freetype/src/cff/cffgload.c",
        "freetype/src/cff/cffload.c",
        "freetype/src/cff/cffobjs.c",
        "freetype/src/cff/cffparse.c",
        "freetype/src/cff/*.h",
        "freetype/src/cid/cidgload.c",
        "freetype/src/cid/cidload.c",
        "freetype/src/cid/cidobjs.c",
        "freetype/src/cid/cidparse.c",
        "freetype/src/cid/cidriver.c",
        "freetype/src/cid/*.h",
        "freetype/src/gxvalid/gxvalid.c",
        "freetype/src/gxvalid/gxvbsln.c",
        "freetype/src/gxvalid/gxvcommn.c",
        "freetype/src/gxvalid/gxvfeat.c",
        "freetype/src/gxvalid/gxvfgen.c",
        "freetype/src/gxvalid/gxvjust.c",
        "freetype/src/gxvalid/gxvkern.c",
        "freetype/src/gxvalid/gxvlcar.c",
        "freetype/src/gxvalid/gxvmod.c",
        "freetype/src/gxvalid/gxvmort.c",
        "freetype/src/gxvalid/gxvmort0.c",
        "freetype/src/gxvalid/gxvmort1.c",
        "freetype/src/gxvalid/gxvmort2.c",
        "freetype/src/gxvalid/gxvmort4.c",
        "freetype/src/gxvalid/gxvmort5.c",
        "freetype/src/gxvalid/gxvmorx.c",
        "freetype/src/gxvalid/gxvmorx0.c",
        "freetype/src/gxvalid/gxvmorx1.c",
        "freetype/src/gxvalid/gxvmorx2.c",
        "freetype/src/gxvalid/gxvmorx4.c",
        "freetype/src/gxvalid/gxvmorx5.c",
        "freetype/src/gxvalid/gxvopbd.c",
        "freetype/src/gxvalid/gxvprop.c",
        "freetype/src/gxvalid/gxvtrak.c",
        "freetype/src/gxvalid/*.h",
        "freetype/src/gzip/adler32.c",
        "freetype/src/gzip/inflate.c",
        "freetype/src/gzip/inftrees.c",
        "freetype/src/gzip/zutil.c",
        "freetype/src/lzw/ftzopen.c",
        "freetype/src/lzw/*.h",
        "freetype/src/otvalid/otvalid.c",
        "freetype/src/otvalid/otvbase.c",
        "freetype/src/otvalid/otvcommn.c",
        "freetype/src/otvalid/otvgdef.c",
        "freetype/src/otvalid/otvgpos.c",
        "freetype/src/otvalid/otvgsub.c",
        "freetype/src/otvalid/otvjstf.c",
        "freetype/src/otvalid/otvmath.c",
        "freetype/src/otvalid/otvmod.c",
        "freetype/src/otvalid/*.h",
        "freetype/src/pcf/pcfdrivr.c",
        "freetype/src/pcf/pcfread.c",
        "freetype/src/pcf/pcfutil.c",
        "freetype/src/pcf/*.h",
        "freetype/src/pfr/pfrcmap.c",
        "freetype/src/pfr/pfrdrivr.c",
        "freetype/src/pfr/pfrgload.c",
        "freetype/src/pfr/pfrload.c",
        "freetype/src/pfr/pfrobjs.c",
        "freetype/src/pfr/pfrsbit.c",
        "freetype/src/pfr/*.h",
        "freetype/src/psaux/afmparse.c",
        "freetype/src/psaux/psauxmod.c",
        "freetype/src/psaux/psconv.c",
        "freetype/src/psaux/psobjs.c",
        "freetype/src/psaux/t1cmap.c",
        "freetype/src/psaux/t1decode.c",
        "freetype/src/psaux/cffdecode.c",
        "freetype/src/psaux/psarrst.c",
        "freetype/src/psaux/psblues.c",
        "freetype/src/psaux/pserror.c",
        "freetype/src/psaux/psfont.c",
        "freetype/src/psaux/psft.c",
        "freetype/src/psaux/pshints.c",
        "freetype/src/psaux/psintrp.c",
        "freetype/src/psaux/psread.c",
        "freetype/src/psaux/psstack.c",
        "freetype/src/psaux/*.h",
        "freetype/src/pshinter/pshalgo.c",
        "freetype/src/pshinter/pshglob.c",
        "freetype/src/pshinter/pshmod.c",
        "freetype/src/pshinter/pshrec.c",
        "freetype/src/pshinter/*.h",
        "freetype/src/psnames/psmodule.c",
        "freetype/src/psnames/*.h",
        "freetype/src/raster/ftraster.c",
        "freetype/src/raster/ftrend1.c",
        "freetype/src/raster/*.h",
        "freetype/src/sfnt/pngshim.c",
        "freetype/src/sfnt/sfdriver.c",
        "freetype/src/sfnt/sfobjs.c",
        "freetype/src/sfnt/ttbdf.c",
        "freetype/src/sfnt/ttcmap.c",
        "freetype/src/sfnt/ttkern.c",
        "freetype/src/sfnt/ttload.c",
        "freetype/src/sfnt/ttmtx.c",
        "freetype/src/sfnt/ttpost.c",
        "freetype/src/sfnt/ttsbit.c",
        "freetype/src/sfnt/sfwoff.c",
        "freetype/src/sfnt/sfwoff2.c",
        "freetype/src/sfnt/ttcolr.c",
        "freetype/src/sfnt/ttcpal.c",
        "freetype/src/sfnt/ttsvg.c",
        "freetype/src/sfnt/woff2tags.c",
        "freetype/src/sfnt/*.h",
        "freetype/src/smooth/ftgrays.c",
        "freetype/src/smooth/ftsmooth.c",
        "freetype/src/smooth/*.h",
        "freetype/src/tools/ftrandom/ftrandom.c",
        "freetype/src/tools/test_afm.c",
        "freetype/src/tools/test_bbox.c",
        "freetype/src/tools/test_trig.c",
        "freetype/src/truetype/ttdriver.c",
        "freetype/src/truetype/ttgload.c",
        "freetype/src/truetype/ttgxvar.c",
        "freetype/src/truetype/ttinterp.c",
        "freetype/src/truetype/ttobjs.c",
        "freetype/src/truetype/ttpload.c",
        "freetype/src/truetype/ttsubpix.c",
        "freetype/src/truetype/*.h",
        "freetype/src/type1/t1afm.c",
        "freetype/src/type1/t1driver.c",
        "freetype/src/type1/t1gload.c",
        "freetype/src/type1/t1load.c",
        "freetype/src/type1/t1objs.c",
        "freetype/src/type1/t1parse.c",
        "freetype/src/type1/*.h",
        "freetype/src/type42/t42drivr.c",
        "freetype/src/type42/t42objs.c",
        "freetype/src/type42/t42parse.c",
        "freetype/src/type42/*.h",
        "freetype/src/winfonts/*.h",
        "freetype/src/sdf/*.h",
        "freetype/src/sdf/*.c",
        "freetype/src/svg/*.h",
        "freetype/src/svg/*.c",
    ]),
    copts = [
        "-Wno-covered-switch-default",
        "-DFT_CONFIG_OPTION_SYSTEM_ZLIB",
        "-DFT_CONFIG_CONFIG_H=<ftconfig.h>",
        # "-DFT_CONFIG_OPTION_USE_PNG",
        "-DFT2_BUILD_LIBRARY",
        "-DFT_CONFIG_MODULES_H=<ftmodule.h>",
        "-DHAVE_UNISTD_H=1",
        "-DHAVE_FCNTL_H=1",
        "-DHAVE_STDINT_H=1",
        "-DFT_DISABLE_BROTLI=ON",
        "-DFT_DISABLE_PNG=ON",
        "-Ifreetype/include",
    ],
    includes = [
        "freetype/include",
        "freetype/include/freetype/config",
    ],
    visibility = ["//visibility:public"],
    deps = [
    ],
)

HARFBUZZ_HDRS = [
    "harfbuzz/src/hb-aat-layout.h",
    "harfbuzz/src/hb-blob.h",
    "harfbuzz/src/hb-buffer.h",
    "harfbuzz/src/hb-common.h",
    "harfbuzz/src/hb-deprecated.h",
    "harfbuzz/src/hb-face.h",
    "harfbuzz/src/hb-font.h",
    "harfbuzz/src/hb-map.h",
    "harfbuzz/src/hb-ot-font.h",
    "harfbuzz/src/hb-ot-layout.h",
    "harfbuzz/src/hb-ot-math.h",
    "harfbuzz/src/hb-ot-metrics.h",
    "harfbuzz/src/hb-ot-shape.h",
    "harfbuzz/src/hb-ot-var.h",
    "harfbuzz/src/hb-ot.h",
    "harfbuzz/src/hb-set.h",
    "harfbuzz/src/hb-shape-plan.h",
    "harfbuzz/src/hb-shape.h",
    "harfbuzz/src/hb-style.h",
    "harfbuzz/src/hb-subset.h",
    "harfbuzz/src/hb-unicode.h",
    "harfbuzz/src/hb-version.h",
    "harfbuzz/src/hb.h",
    "harfbuzz/src/hb-ft.h",
    "harfbuzz/src/OT/Color/CBDT/CBDT.hh",
    "harfbuzz/src/OT/Color/COLR/COLR.hh",
    "harfbuzz/src/OT/Color/COLR/colrv1-closure.hh",
    "harfbuzz/src/OT/Color/CPAL/CPAL.hh",
    "harfbuzz/src/OT/Color/sbix/sbix.hh",
    "harfbuzz/src/OT/Color/svg/svg.hh",
    "harfbuzz/src/OT/Layout/Common/Coverage.hh",
    "harfbuzz/src/OT/Layout/Common/CoverageFormat1.hh",
    "harfbuzz/src/OT/Layout/Common/CoverageFormat2.hh",
    "harfbuzz/src/OT/Layout/Common/RangeRecord.hh",
    "harfbuzz/src/OT/Layout/GDEF/GDEF.hh",
    "harfbuzz/src/OT/Layout/GPOS/Anchor.hh",
    "harfbuzz/src/OT/Layout/GPOS/AnchorFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/AnchorFormat2.hh",
    "harfbuzz/src/OT/Layout/GPOS/AnchorFormat3.hh",
    "harfbuzz/src/OT/Layout/GPOS/AnchorMatrix.hh",
    "harfbuzz/src/OT/Layout/GPOS/ChainContextPos.hh",
    "harfbuzz/src/OT/Layout/GPOS/Common.hh",
    "harfbuzz/src/OT/Layout/GPOS/ContextPos.hh",
    "harfbuzz/src/OT/Layout/GPOS/CursivePos.hh",
    "harfbuzz/src/OT/Layout/GPOS/CursivePosFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/ExtensionPos.hh",
    "harfbuzz/src/OT/Layout/GPOS/GPOS.hh",
    "harfbuzz/src/OT/Layout/GPOS/LigatureArray.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkArray.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkBasePos.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkBasePosFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkLigPos.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkLigPosFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkMarkPos.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkMarkPosFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/MarkRecord.hh",
    "harfbuzz/src/OT/Layout/GPOS/PairPos.hh",
    "harfbuzz/src/OT/Layout/GPOS/PairPosFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/PairPosFormat2.hh",
    "harfbuzz/src/OT/Layout/GPOS/PairSet.hh",
    "harfbuzz/src/OT/Layout/GPOS/PairValueRecord.hh",
    "harfbuzz/src/OT/Layout/GPOS/PosLookup.hh",
    "harfbuzz/src/OT/Layout/GPOS/PosLookupSubTable.hh",
    "harfbuzz/src/OT/Layout/GPOS/SinglePos.hh",
    "harfbuzz/src/OT/Layout/GPOS/SinglePosFormat1.hh",
    "harfbuzz/src/OT/Layout/GPOS/SinglePosFormat2.hh",
    "harfbuzz/src/OT/Layout/GPOS/ValueFormat.hh",
    "harfbuzz/src/OT/Layout/GSUB/AlternateSet.hh",
    "harfbuzz/src/OT/Layout/GSUB/AlternateSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/AlternateSubstFormat1.hh",
    "harfbuzz/src/OT/Layout/GSUB/ChainContextSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/Common.hh",
    "harfbuzz/src/OT/Layout/GSUB/ContextSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/ExtensionSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/GSUB.hh",
    "harfbuzz/src/OT/Layout/GSUB/Ligature.hh",
    "harfbuzz/src/OT/Layout/GSUB/LigatureSet.hh",
    "harfbuzz/src/OT/Layout/GSUB/LigatureSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/LigatureSubstFormat1.hh",
    "harfbuzz/src/OT/Layout/GSUB/MultipleSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/MultipleSubstFormat1.hh",
    "harfbuzz/src/OT/Layout/GSUB/ReverseChainSingleSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/ReverseChainSingleSubstFormat1.hh",
    "harfbuzz/src/OT/Layout/GSUB/Sequence.hh",
    "harfbuzz/src/OT/Layout/GSUB/SingleSubst.hh",
    "harfbuzz/src/OT/Layout/GSUB/SingleSubstFormat1.hh",
    "harfbuzz/src/OT/Layout/GSUB/SingleSubstFormat2.hh",
    "harfbuzz/src/OT/Layout/GSUB/SubstLookup.hh",
    "harfbuzz/src/OT/Layout/GSUB/SubstLookupSubTable.hh",
    "harfbuzz/src/OT/Layout/types.hh",
    "harfbuzz/src/OT/glyf/CompositeGlyph.hh",
    "harfbuzz/src/OT/glyf/Glyph.hh",
    "harfbuzz/src/OT/glyf/GlyphHeader.hh",
    "harfbuzz/src/OT/glyf/SimpleGlyph.hh",
    "harfbuzz/src/OT/glyf/SubsetGlyph.hh",
    "harfbuzz/src/OT/glyf/VarCompositeGlyph.hh",
    "harfbuzz/src/OT/glyf/composite-iter.hh",
    "harfbuzz/src/OT/glyf/coord-setter.hh",
    "harfbuzz/src/OT/glyf/glyf-helpers.hh",
    "harfbuzz/src/OT/glyf/glyf.hh",
    "harfbuzz/src/OT/glyf/loca.hh",
    "harfbuzz/src/OT/glyf/path-builder.hh",
    "harfbuzz/src/OT/name/name.hh",
    "harfbuzz/src/graph/classdef-graph.hh",
    "harfbuzz/src/graph/coverage-graph.hh",
    "harfbuzz/src/graph/graph.hh",
    "harfbuzz/src/graph/gsubgpos-context.cc",
    "harfbuzz/src/graph/gsubgpos-context.hh",
    "harfbuzz/src/graph/gsubgpos-graph.hh",
    "harfbuzz/src/graph/markbasepos-graph.hh",
    "harfbuzz/src/graph/pairpos-graph.hh",
    "harfbuzz/src/graph/serialize.hh",
    "harfbuzz/src/graph/split-helpers.hh",
    "harfbuzz/src/hb-aat-layout-ankr-table.hh",
    "harfbuzz/src/hb-aat-layout-bsln-table.hh",
    "harfbuzz/src/hb-aat-layout-common.hh",
    "harfbuzz/src/hb-aat-layout-feat-table.hh",
    "harfbuzz/src/hb-aat-layout-just-table.hh",
    "harfbuzz/src/hb-aat-layout-kerx-table.hh",
    "harfbuzz/src/hb-aat-layout-morx-table.hh",
    "harfbuzz/src/hb-aat-layout-opbd-table.hh",
    "harfbuzz/src/hb-aat-layout-trak-table.hh",
    "harfbuzz/src/hb-aat-layout.cc",
    "harfbuzz/src/hb-aat-layout.hh",
    "harfbuzz/src/hb-aat-ltag-table.hh",
    "harfbuzz/src/hb-aat-map.cc",
    "harfbuzz/src/hb-aat-map.hh",
    "harfbuzz/src/hb-aat.h",
    "harfbuzz/src/hb-algs.hh",
    "harfbuzz/src/hb-array.hh",
    "harfbuzz/src/hb-atomic.hh",
    "harfbuzz/src/hb-bimap.hh",
    "harfbuzz/src/hb-bit-page.hh",
    "harfbuzz/src/hb-bit-set-invertible.hh",
    "harfbuzz/src/hb-bit-set.hh",
    "harfbuzz/src/hb-blob.cc",
    "harfbuzz/src/hb-blob.hh",
    "harfbuzz/src/hb-buffer-deserialize-json.hh",
    "harfbuzz/src/hb-buffer-deserialize-text-glyphs.hh",
    "harfbuzz/src/hb-buffer-deserialize-text-unicode.hh",
    "harfbuzz/src/hb-buffer-serialize.cc",
    "harfbuzz/src/hb-buffer-verify.cc",
    "harfbuzz/src/hb-buffer.cc",
    "harfbuzz/src/hb-buffer.hh",
    "harfbuzz/src/hb-cache.hh",
    "harfbuzz/src/hb-cff-interp-common.hh",
    "harfbuzz/src/hb-cff-interp-cs-common.hh",
    "harfbuzz/src/hb-cff-interp-dict-common.hh",
    "harfbuzz/src/hb-cff1-interp-cs.hh",
    "harfbuzz/src/hb-cff2-interp-cs.hh",
    "harfbuzz/src/hb-common.cc",
    "harfbuzz/src/hb-config.hh",
    "harfbuzz/src/hb-cplusplus.hh",
    "harfbuzz/src/hb-debug.hh",
    "harfbuzz/src/hb-dispatch.hh",
    "harfbuzz/src/hb-draw.cc",
    "harfbuzz/src/hb-draw.h",
    "harfbuzz/src/hb-draw.hh",
    "harfbuzz/src/hb-face-builder.cc",
    "harfbuzz/src/hb-face.cc",
    "harfbuzz/src/hb-face.hh",
    "harfbuzz/src/hb-font.cc",
    "harfbuzz/src/hb-ft.cc",
    "harfbuzz/src/hb-font.hh",
    "harfbuzz/src/hb-iter.hh",
    "harfbuzz/src/hb-kern.hh",
    "harfbuzz/src/hb-limits.hh",
    "harfbuzz/src/hb-machinery.hh",
    "harfbuzz/src/hb-map.cc",
    "harfbuzz/src/hb-map.hh",
    "harfbuzz/src/hb-meta.hh",
    "harfbuzz/src/hb-ms-feature-ranges.hh",
    "harfbuzz/src/hb-multimap.hh",
    "harfbuzz/src/hb-mutex.hh",
    "harfbuzz/src/hb-null.hh",
    "harfbuzz/src/hb-number-parser.hh",
    "harfbuzz/src/hb-number.cc",
    "harfbuzz/src/hb-number.hh",
    "harfbuzz/src/hb-object.hh",
    "harfbuzz/src/hb-open-file.hh",
    "harfbuzz/src/hb-open-type.hh",
    "harfbuzz/src/hb-ot-cff-common.hh",
    "harfbuzz/src/hb-ot-cff1-std-str.hh",
    "harfbuzz/src/hb-ot-cff1-table.cc",
    "harfbuzz/src/hb-ot-cff1-table.hh",
    "harfbuzz/src/hb-ot-cff2-table.cc",
    "harfbuzz/src/hb-ot-cff2-table.hh",
    "harfbuzz/src/hb-ot-cmap-table.hh",
    "harfbuzz/src/hb-ot-color.cc",
    "harfbuzz/src/hb-ot-color.h",
    "harfbuzz/src/hb-ot-deprecated.h",
    "harfbuzz/src/hb-ot-face-table-list.hh",
    "harfbuzz/src/hb-ot-face.cc",
    "harfbuzz/src/hb-ot-face.hh",
    "harfbuzz/src/hb-ot-font.cc",
    "harfbuzz/src/hb-ot-gasp-table.hh",
    "harfbuzz/src/hb-ot-glyf-table.hh",
    "harfbuzz/src/hb-ot-hdmx-table.hh",
    "harfbuzz/src/hb-ot-head-table.hh",
    "harfbuzz/src/hb-ot-hhea-table.hh",
    "harfbuzz/src/hb-ot-hmtx-table.hh",
    "harfbuzz/src/hb-ot-kern-table.hh",
    "harfbuzz/src/hb-ot-layout-base-table.hh",
    "harfbuzz/src/hb-ot-layout-common.hh",
    "harfbuzz/src/hb-ot-layout-gdef-table.hh",
    "harfbuzz/src/hb-ot-layout-gpos-table.hh",
    "harfbuzz/src/hb-ot-layout-gsub-table.hh",
    "harfbuzz/src/hb-ot-layout-gsubgpos.hh",
    "harfbuzz/src/hb-ot-layout-jstf-table.hh",
    "harfbuzz/src/hb-ot-layout.cc",
    "harfbuzz/src/hb-ot-layout.hh",
    "harfbuzz/src/hb-ot-map.cc",
    "harfbuzz/src/hb-ot-map.hh",
    "harfbuzz/src/hb-ot-math-table.hh",
    "harfbuzz/src/hb-ot-math.cc",
    "harfbuzz/src/hb-ot-maxp-table.hh",
    "harfbuzz/src/hb-ot-meta-table.hh",
    "harfbuzz/src/hb-ot-meta.cc",
    "harfbuzz/src/hb-ot-meta.h",
    "harfbuzz/src/hb-ot-metrics.cc",
    "harfbuzz/src/hb-ot-metrics.hh",
    "harfbuzz/src/hb-ot-name-language-static.hh",
    "harfbuzz/src/hb-ot-name-language.hh",
    "harfbuzz/src/hb-ot-name-table.hh",
    "harfbuzz/src/hb-ot-name.cc",
    "harfbuzz/src/hb-ot-name.h",
    "harfbuzz/src/hb-ot-os2-table.hh",
    "harfbuzz/src/hb-ot-os2-unicode-ranges.hh",
    "harfbuzz/src/hb-ot-post-macroman.hh",
    "harfbuzz/src/hb-ot-post-table-v2subset.hh",
    "harfbuzz/src/hb-ot-post-table.hh",
    "harfbuzz/src/hb-ot-shape-fallback.cc",
    "harfbuzz/src/hb-ot-shape-fallback.hh",
    "harfbuzz/src/hb-ot-shape-normalize.cc",
    "harfbuzz/src/hb-ot-shape-normalize.hh",
    "harfbuzz/src/hb-ot-shape.cc",
    "harfbuzz/src/hb-ot-shape.hh",
    "harfbuzz/src/hb-ot-shaper-arabic-fallback.hh",
    "harfbuzz/src/hb-ot-shaper-arabic-joining-list.hh",
    "harfbuzz/src/hb-ot-shaper-arabic-pua.hh",
    "harfbuzz/src/hb-ot-shaper-arabic-table.hh",
    "harfbuzz/src/hb-ot-shaper-arabic.cc",
    "harfbuzz/src/hb-ot-shaper-arabic.hh",
    "harfbuzz/src/hb-ot-shaper-default.cc",
    "harfbuzz/src/hb-ot-shaper-hangul.cc",
    "harfbuzz/src/hb-ot-shaper-hebrew.cc",
    "harfbuzz/src/hb-ot-shaper-indic-machine.hh",
    "harfbuzz/src/hb-ot-shaper-indic-table.cc",
    "harfbuzz/src/hb-ot-shaper-indic.cc",
    "harfbuzz/src/hb-ot-shaper-indic.hh",
    "harfbuzz/src/hb-ot-shaper-khmer-machine.hh",
    "harfbuzz/src/hb-ot-shaper-khmer.cc",
    "harfbuzz/src/hb-ot-shaper-myanmar-machine.hh",
    "harfbuzz/src/hb-ot-shaper-myanmar.cc",
    "harfbuzz/src/hb-ot-shaper-syllabic.cc",
    "harfbuzz/src/hb-ot-shaper-syllabic.hh",
    "harfbuzz/src/hb-ot-shaper-thai.cc",
    "harfbuzz/src/hb-ot-shaper-use-machine.hh",
    "harfbuzz/src/hb-ot-shaper-use-table.hh",
    "harfbuzz/src/hb-ot-shaper-use.cc",
    "harfbuzz/src/hb-ot-shaper-vowel-constraints.cc",
    "harfbuzz/src/hb-ot-shaper-vowel-constraints.hh",
    "harfbuzz/src/hb-ot-shaper.hh",
    "harfbuzz/src/hb-ot-stat-table.hh",
    "harfbuzz/src/hb-ot-tag-table.hh",
    "harfbuzz/src/hb-ot-tag.cc",
    "harfbuzz/src/hb-ot-var-avar-table.hh",
    "harfbuzz/src/hb-ot-var-common.hh",
    "harfbuzz/src/hb-ot-var-cvar-table.hh",
    "harfbuzz/src/hb-ot-var-fvar-table.hh",
    "harfbuzz/src/hb-ot-var-gvar-table.hh",
    "harfbuzz/src/hb-ot-var-hvar-table.hh",
    "harfbuzz/src/hb-ot-var-mvar-table.hh",
    "harfbuzz/src/hb-ot-var.cc",
    "harfbuzz/src/hb-ot-vorg-table.hh",
    "harfbuzz/src/hb-outline.cc",
    "harfbuzz/src/hb-outline.hh",
    "harfbuzz/src/hb-paint-extents.cc",
    "harfbuzz/src/hb-paint-extents.hh",
    "harfbuzz/src/hb-paint.cc",
    "harfbuzz/src/hb-paint.h",
    "harfbuzz/src/hb-paint.hh",
    "harfbuzz/src/hb-pool.hh",
    "harfbuzz/src/hb-priority-queue.hh",
    "harfbuzz/src/hb-repacker.hh",
    "harfbuzz/src/hb-sanitize.hh",
    "harfbuzz/src/hb-serialize.hh",
    "harfbuzz/src/hb-set-digest.hh",
    "harfbuzz/src/hb-set.cc",
    "harfbuzz/src/hb-set.hh",
    "harfbuzz/src/hb-shape-plan.cc",
    "harfbuzz/src/hb-shape-plan.hh",
    "harfbuzz/src/hb-shape.cc",
    "harfbuzz/src/hb-shaper-impl.hh",
    "harfbuzz/src/hb-shaper-list.hh",
    "harfbuzz/src/hb-shaper.cc",
    "harfbuzz/src/hb-shaper.hh",
    "harfbuzz/src/hb-static.cc",
    "harfbuzz/src/hb-string-array.hh",
    "harfbuzz/src/hb-subset-accelerator.hh",
    "harfbuzz/src/hb-subset-cff-common.cc",
    "harfbuzz/src/hb-subset-cff-common.hh",
    "harfbuzz/src/hb-subset-cff1.cc",
    "harfbuzz/src/hb-subset-cff2.cc",
    "harfbuzz/src/hb-subset-input.cc",
    "harfbuzz/src/hb-subset-input.hh",
    "harfbuzz/src/hb-subset-instancer-solver.cc",
    "harfbuzz/src/hb-subset-instancer-solver.hh",
    "harfbuzz/src/hb-subset-plan-member-list.hh",
    "harfbuzz/src/hb-subset-plan.cc",
    "harfbuzz/src/hb-subset-plan.hh",
    "harfbuzz/src/hb-subset-repacker.cc",
    "harfbuzz/src/hb-subset-repacker.h",
    "harfbuzz/src/hb-subset.cc",
    "harfbuzz/src/hb-subset.hh",
    "harfbuzz/src/hb-ucd-table.hh",
    "harfbuzz/src/hb-ucd.cc",
    "harfbuzz/src/hb-unicode-emoji-table.hh",
    "harfbuzz/src/hb-unicode.cc",
    "harfbuzz/src/hb-unicode.hh",
    "harfbuzz/src/hb-utf.hh",
    "harfbuzz/src/hb-vector.hh",
    "harfbuzz/src/hb.hh",
    "harfbuzz/src/hb-ft-colr.hh",
    "harfbuzz/src/hb-coretext.cc",
    "harfbuzz/src/hb-directwrite.cc",
    "harfbuzz/src/hb-fallback-shape.cc",
    "harfbuzz/src/hb-gdi.cc",
    "harfbuzz/src/hb-glib.cc",
    "harfbuzz/src/hb-graphite2.cc",
    "harfbuzz/src/hb-style.cc",
    "harfbuzz/src/hb-uniscribe.cc",
    "harfbuzz/src/hb-wasm-api.cc",
    "harfbuzz/src/hb-wasm-shape.cc",
]

HARFBUZZ_SRCS = [
    "harfbuzz/src/harfbuzz.cc",
]

cc_library(
    name = "harfbuzz",
    srcs = HARFBUZZ_SRCS,
    hdrs = HARFBUZZ_HDRS + glob([
        "freetype/include/*",
        "freetype/include/freetype/*",
        "freetype/include/freetype/config/*",
    ]),
    defines = [
        "HAVE_OT",
        "HAVE_FREETYPE",
        # "HAVE_CONFIG_OVERRIDE_H",
        # "HB_NO_FALLBACK_SHAPE",
        # "HB_NO_WIN1256",
        "HB_TINY",
    ],
    includes = [
        "freetype/include",
        "harfbuzz/src",
    ],
    visibility = ["//visibility:public"],
)
