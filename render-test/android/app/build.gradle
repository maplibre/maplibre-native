apply plugin: 'com.android.application'
//apply from: "${rootDir}/../../platform/android/gradle/download-vulkan-validation.gradle"

android {
    ndkVersion '27.0.12077973'

    sourceSets {
        test {
            assets.srcDirs += ['../../../metrics']
        }
    }

    defaultConfig {
        applicationId = 'org.maplibre.render_test_runner'
        compileSdk 34
        minSdkVersion 21
        targetSdkVersion 33
        def abi = 'all'
        if (project.hasProperty('maplibre.abis')) {
            abi = project.getProperty('maplibre.abis')
        }
        ndk {
            if (abi != 'all' && abi != 'none') {
                abiFilters abi.split(' ')
            } else {
                abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
            }
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_CCACHE=ccache'
                arguments '-DANDROID_STL=c++_static'
                arguments "-DMLN_LEGACY_RENDERER=OFF", "-DMLN_DRAWABLE_RENDERER=ON"
                targets 'mbgl-render-test-runner'
            }
        }
        android {
            testBuildType 'release'
        }

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        
    }
    externalNativeBuild {
        cmake {
            version '3.19.0+'
            path '../../../CMakeLists.txt'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions += "renderer"
    productFlavors {
        create("opengl") {
            dimension = "renderer"
        }
        create("vulkan") {
            dimension = "renderer"
            externalNativeBuild {
                cmake {
                    arguments "-DMLN_WITH_OPENGL=OFF", "-DMLN_WITH_VULKAN=ON"
                }
            }
        }
    }

    namespace 'android.app'
}

dependencies {
    implementation libs.supportConstraintLayout
    androidTestImplementation libs.testRunner
    androidTestImplementation libs.testEspressoCore
    androidTestImplementation libs.testRules
}
